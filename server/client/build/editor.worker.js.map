{"version":3,"sources":["../webpack/bootstrap","../node_modules/monaco-editor/esm/vs/base/common/platform.js","../node_modules/webpack/buildin/global.js","../node_modules/process/browser.js","../node_modules/monaco-editor/esm/vs/editor/common/standalone/promise-polyfill/polyfill.js","../node_modules/timers-browserify/main.js","../node_modules/setimmediate/setImmediate.js","../node_modules/monaco-editor/esm/vs/base/common/errors.js","../node_modules/monaco-editor/esm/vs/base/common/lifecycle.js","../node_modules/monaco-editor/esm/vs/base/common/types.js","../node_modules/monaco-editor/esm/vs/base/common/worker/simpleWorker.js","../node_modules/monaco-editor/esm/vs/base/common/arrays.js","../node_modules/monaco-editor/esm/vs/base/common/diff/diffChange.js","../node_modules/monaco-editor/esm/vs/base/common/diff/diff.js","../node_modules/monaco-editor/esm/vs/base/common/iterator.js","../node_modules/monaco-editor/esm/vs/base/common/uri.js","../node_modules/monaco-editor/esm/vs/editor/common/core/position.js","../node_modules/monaco-editor/esm/vs/editor/common/core/range.js","../node_modules/monaco-editor/esm/vs/base/common/strings.js","../node_modules/monaco-editor/esm/vs/editor/common/diff/diffComputer.js","../node_modules/monaco-editor/esm/vs/editor/common/core/uint.js","../node_modules/monaco-editor/esm/vs/editor/common/viewModel/prefixSumComputer.js","../node_modules/monaco-editor/esm/vs/editor/common/model/mirrorTextModel.js","../node_modules/monaco-editor/esm/vs/editor/common/model/wordHelper.js","../node_modules/monaco-editor/esm/vs/editor/common/core/characterClassifier.js","../node_modules/monaco-editor/esm/vs/editor/common/modes/linkComputer.js","../node_modules/monaco-editor/esm/vs/editor/common/modes/supports/inplaceReplaceSupport.js","../node_modules/monaco-editor/esm/vs/base/common/linkedList.js","../node_modules/monaco-editor/esm/vs/base/common/event.js","../node_modules/monaco-editor/esm/vs/base/common/cancellation.js","../node_modules/monaco-editor/esm/vs/base/common/functional.js","../node_modules/monaco-editor/esm/vs/base/common/keyCodes.js","../node_modules/monaco-editor/esm/vs/editor/common/standalone/standaloneEnums.js","../node_modules/monaco-editor/esm/vs/editor/common/core/selection.js","../node_modules/monaco-editor/esm/vs/editor/common/core/token.js","../node_modules/monaco-editor/esm/vs/editor/common/standalone/standaloneBase.js","../node_modules/monaco-editor/esm/vs/editor/common/services/editorSimpleWorker.js","../node_modules/monaco-editor/esm/vs/editor/editor.worker.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","process","global","__webpack_exports__","isWindows","isWeb","globals","_isWindows","_isMacintosh","_isLinux","_isNative","_isWeb","isElectronRenderer","versions","electron","type","navigator","platform","rawNlsConfig","NODE_ENV","PUBLIC_URL","nlsConfig","JSON","parse","resolved","availableLanguages","locale","_translationsConfigFile","e","userAgent","indexOf","language","self","g","this","Function","window","cachedSetTimeout","cachedClearTimeout","defaultSetTimout","Error","defaultClearTimeout","runTimeout","fun","setTimeout","clearTimeout","currentQueue","queue","draining","queueIndex","cleanUpNextTick","length","concat","drainQueue","timeout","len","run","marker","runClearTimeout","Item","array","noop","nextTick","args","Array","arguments","push","apply","title","browser","env","argv","version","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","binding","cwd","chdir","dir","umask","setImmediate","finallyConstructor","callback","constructor","then","resolve","reason","reject","setTimeoutFunc","Promise","fn","TypeError","_state","_handled","_value","undefined","_deferreds","doResolve","handle","deferred","_immediateFn","cb","onFulfilled","onRejected","ret","promise","newValue","finale","thisArg","_unhandledRejectionFn","Handler","done","ex","prom","all","arr","slice","remaining","res","val","race","values","err","console","warn","globalNS","factory","scope","Timeout","id","clearFn","_id","_clearFn","setInterval","clearInterval","close","unref","ref","enroll","item","msecs","_idleTimeoutId","_idleTimeout","unenroll","_unrefActive","active","_onTimeout","clearImmediate","registerImmediate","nextHandle","tasksByHandle","currentlyRunningATask","doc","document","attachTo","getPrototypeOf","toString","runIfPresent","postMessage","importScripts","postMessageIsAsynchronous","oldOnMessage","onmessage","canUsePostMessage","messagePrefix","Math","random","onGlobalMessage","event","source","data","addEventListener","attachEvent","installPostMessageImplementation","MessageChannel","channel","port1","port2","installMessageChannelImplementation","createElement","html","documentElement","script","onreadystatechange","removeChild","appendChild","installReadyStateChangeImplementation","task","errorHandler","ErrorHandler","unexpectedErrorHandler","stack","message","forEach","listener","onUnexpectedError","onUnexpectedExternalError","isPromiseCanceledError","transformErrorForSerialization","error","$isError","stacktrace","canceledName","_dispose","first","rest","_i","isArray","dispose","Disposable","_toDispose","_lifecycle_disposable_isDisposed","_register","None","freeze","ImmortalReference","getAllPropertyNames","obj","proto","getOwnPropertyNames","__extends","_extendStatics","b","setPrototypeOf","__proto__","__","INITIALIZE","simpleWorker_SimpleWorkerProtocol","SimpleWorkerProtocol","handler","_workerId","_handler","_lastSentReq","_pendingReplies","setWorkerId","workerId","sendMessage","method","_this","req","String","_send","vsWorker","handleMessage","serializedMessage","_handleMessage","msg","seq","replyMessage","reply","requestMessage","detail","strMsg","stringify","simpleWorker_SimpleWorkerServer","_super","SimpleWorkerClient","workerFactory","lazyProxyReject","_worker","_protocol","getId","loaderConfiguration","require","getConfig","requirejs","contexts","_","config","_onModuleLoaded","_lazyProxy","availableMethods","proxy","availableMethods_1","methodName","createProxyMethod","proxyMethodRequest","_onError","_request","getProxyObject","info","SimpleWorkerServer","postSerializedMessage","requestHandler","_requestHandler","initialize","loaderConfig","methods","_a","prop","baseUrl","paths","vs","catchError","result","handlerModule","_b","mergeSort","compare","_sort","a","lo","hi","aux","mid","leftIdx","rightIdx","_merge","DiffChange","originalStart","originalLength","modifiedStart","modifiedLength","getOriginalEnd","getModifiedEnd","createStringSequence","getLength","getElementAtIndex","pos","charCodeAt","stringDiff","original","modified","pretty","diff_LcsDiff","ComputeDiff","Iterator","Debug","Assert","condition","MyArray","Copy","sourceArray","sourceIndex","destinationArray","destinationIndex","diff_DiffChangeHelper","DiffChangeHelper","m_changes","m_originalStart","Number","MAX_VALUE","m_modifiedStart","m_originalCount","m_modifiedCount","MarkNextChange","AddOriginalElement","originalIndex","modifiedIndex","min","AddModifiedElement","getChanges","getReverseChanges","reverse","LcsDiff","originalSequence","newSequence","continueProcessingPredicate","OriginalSequence","ModifiedSequence","ContinueProcessingPredicate","m_forwardHistory","m_reverseHistory","ElementsAreEqual","newIndex","OriginalElementsAreEqual","index1","index2","ModifiedElementsAreEqual","_ComputeDiff","originalEnd","modifiedEnd","changes","ComputeDiffRecursive","PrettifyChanges","quitEarlyArr","midOriginalArr","midModifiedArr","ComputeRecursionPoint","midOriginal","midModified","leftChanges","rightChanges","ConcatenateChanges","WALKTRACE","diagonalForwardBase","diagonalForwardStart","diagonalForwardEnd","diagonalForwardOffset","diagonalReverseBase","diagonalReverseStart","diagonalReverseEnd","diagonalReverseOffset","forwardPoints","reversePoints","deltaIsEven","forwardChanges","diagonal","reverseChanges","changeHelper","diagonalMin","diagonalMax","diagonalRelative","lastOriginalIndex","MIN_VALUE","historyIndex","originalStartPoint","modifiedStartPoint","lastForwardChange","max","numDifferences","tempOriginalIndex","maxDifferences","numDiagonals","furthestOriginalIndex","furthestModifiedIndex","ClipDiagonalBound","abs","MaxDifferencesHistory","matchLengthOfLongest","temp","change","originalStop","modifiedStop","checkOriginal","checkModified","mergedChangeArr","ChangesOverlap","splice","prevChange","bestDelta","bestScore","_boundaryScore","delta","score","_OriginalIsBoundary","index","element","test","_OriginalRegionIsBoundary","_ModifiedIsBoundary","_ModifiedRegionIsBoundary","left","right","diagonalBaseIndex","diffEven","iterator_extends","FIN","_empty","next","iterator","empty","fromArray","from","elements","map","filter","collect","ArrayNavigator","items","start","end","current","previous","last","parent","ArrayIterator","MappedIterator","uri_a","uri_extends","_schemePattern","_singleSlashStart","_doubleSlashStart","_throwOnMissingSchema","_slash","_regexp","uri_URI","URI","schemeOrData","authority","path","query","fragment","_strict","scheme","_referenceResolution","_validateUri","isUri","thing","fsPath","with","_makeFsPath","configurable","_URI","match","exec","decodeURIComponent","file","replace","idx","substring","components","skipEncoding","_asFormatted","toJSON","revive","_fsPath","_formatted","external","$mid","encodeTable","encodeURIComponentFast","uriComponent","allowSlash","nativeEncodePos","code","encodeURIComponent","charAt","substr","escaped","encodeURIComponentMinimal","uri","toLowerCase","encoder","userinfo","fromCharCode","Position","lineNumber","column","newLineNumber","newColumn","deltaLineNumber","deltaColumn","equals","other","isBefore","isBeforeOrEqual","aLineNumber","bLineNumber","clone","lift","isIPosition","range_Range","Range","startLineNumber","startColumn","endLineNumber","endColumn","isEmpty","range","containsPosition","position","containsRange","otherRange","plusRange","intersectRanges","resultStartLineNumber","resultStartColumn","resultEndLineNumber","resultEndColumn","otherStartLineNumber","otherStartColumn","otherEndLineNumber","otherEndColumn","equalsRange","getEndPosition","getStartPosition","setEndPosition","setStartPosition","collapseToStart","fromPositions","isIRange","areIntersectingOrTouching","areIntersecting","compareRangesUsingStarts","aStartLineNumber","bStartLineNumber","aStartColumn","bStartColumn","aEndLineNumber","bEndLineNumber","compareRangesUsingEnds","spansMultipleLines","MAXIMUM_RUN_TIME","MINIMUM_MATCHING_CHARACTER_LENGTH","computeDiff","modifiedSequence","diffComputer_LineMarkerSequence","LineMarkerSequence","lines","startColumns","endColumns","length_1","_getFirstNonBlankColumn","_getLastNonBlankColumn","_lines","_startColumns","_endColumns","getStartLineNumber","getEndLineNumber","txt","defaultValue","str","chCode","firstNonWhitespaceIndex","startIndex","lastNonWhitespaceIndex","getCharSequence","shouldIgnoreTrimWhitespace","endIndex","charCodes","lineNumbers","columns","lineContent","col","CharSequence","_charCodes","_lineNumbers","_columns","getStartColumn","getEndColumn","CharChange","originalStartLineNumber","originalStartColumn","originalEndLineNumber","originalEndColumn","modifiedStartLineNumber","modifiedStartColumn","modifiedEndLineNumber","modifiedEndColumn","createFromDiffChange","diffChange","originalCharSequence","modifiedCharSequence","LineChange","charChanges","createFromDiffResult","originalLineSequence","modifiedLineSequence","shouldComputeCharChanges","shouldPostProcessCharChanges","rawChanges","currChange","originalMatchingLength","modifiedMatchingLength","postProcessCharChanges","length_2","DiffComputer","originalLines","modifiedLines","opts","shouldMakePrettyDiff","maximumRunTimeMs","computationStartTime","Date","getTime","_continueProcessingPredicate","lineChanges","length_3","originalLineIndex","modifiedLineIndex","nextChange","originalLine","modifiedLine","_pushTrimWhitespaceCharChange","originalMaxColumn","modifiedMaxColumn","originalLineNumber","modifiedLineNumber","_mergeTrimWhitespaceCharChange","Uint8Matrix","rows","cols","Uint8Array","_data","row","set","toUint8","v","toUint32","PrefixSumIndexOfResult","remainder","prefixSumComputer_PrefixSumComputer","PrefixSumComputer","prefixSum","Uint32Array","prefixSumValidIndex","Int32Array","getCount","insertValues","insertIndex","oldValues","oldPrefixSum","insertValuesLen","subarray","changeValue","removeValues","cnt","maxCnt","getTotalValue","_getAccumulatedValue","getAccumulatedValue","getIndexOf","accumulatedValue","floor","low","high","midStop","midStart","mirrorTextModel_MirrorTextModel","PrefixSumComputerWithCache","_cacheAccumulatedValueStart","_cache","_actual","_bustCache","cacheIndex","warmUpCache","accumulatedValueStart","accumulatedValueEnd","newCache","MirrorTextModel","eol","versionId","_uri","_eol","_versionId","_lineStarts","getText","join","onEvents","changes_1","_acceptDeleteRange","_acceptInsertText","text","_ensureLineStarts","eolLength","linesLength","lineStartValues","_setLineText","lineIndex","insertText","insertLines","split","newLengths","USUAL_WORD_SEPARATORS","DEFAULT_WORD_REGEXP","allowInWords","USUAL_WORD_SEPARATORS_1","sep","RegExp","createWordRegExp","characterClassifier_CharacterClassifier","CharacterClassifier","_defaultValue","_asciiMap","_createAsciiMap","_map","Map","asciiMap","charCode","linkComputer_StateMachine","CharacterSet","add","has","StateMachine","edges","maxCharCode","maxState","to","states","_states","_maxCharCode","nextState","currentState","_stateMachine","_classifier","LinkComputer","_createLink","classifier","line","linkBeginIndex","linkEndIndex","lastIncludedCharIndex","charCodeBeforeLink","lastCharCodeInLink","url","computeLinks","model","stateMachine","getClassifier","lineCount","getLineCount","getLineContent","j","linkBeginChCode","state","hasOpenParens","hasOpenSquareBracket","hasOpenCurlyBracket","resetStateMachine","chClass","BasicInplaceReplace","_defaultValueSet","navigateValueSet","range1","text1","range2","text2","up","doNavigateValueSet","numberResult","numberReplace","textReplace","precision","pow","lastIndexOf","n1","n2","parseFloat","isNaN","valueSetsReplace","valueSets","valueSetReplace","valueSet","INSTANCE","event_Event","Node","linkedList_LinkedList","LinkedList","_size","_first","unshift","_insert","atTheEnd","newNode","oldLast","_last","prev","oldFirst","_remove","shift","node","candidate","anchor","Event","_disposable","thisArgs","disposables","didFire","snapshot","each","reduce","merge","initial","output","emitter","event_Emitter","onFirstListenerAdd","fire","onLastListenerRemove","latch","cache","firstCall","shouldEmit","signal","any","events","combinedDisposable","debounce","delay","leading","leakWarningThreshold","subscription","numDebouncedCalls","cur","_output","stopwatch","buffer","_buffer","flush","onFirstListenerDidAdd","echo","onListenerDidAdd","ChainableEvent","chain","fromNodeEventEmitter","eventName","fromPromise","toPromise","cancellation_CancellationToken","_globalLeakWarningThreshold","LeakageMonitor","customThreshold","_warnCountdown","_stacks","clear","check","listenerCount","threshold","count","topStack_1","topCount_1","Emitter","options","_disposed","_options","_leakageMon","_event","_listeners","firstListener","removeMonitor","remove","size","_noop","_deliveryQueue","iter","event_1","shortcutEvent","EventMultiplexer","hasListeners","hook","didCall","functional_once","unhook","EventBufferer","buffers","wrapEvent","bufferEvents","pop","Relay","listening","inputEvent","inputEventListener","context","CancellationToken","isCancellationToken","Cancelled","cancellation_MutableToken","isCancellationRequested","onCancellationRequested","KeyCodeUtils","MutableToken","_isCancelled","_emitter","cancel","CancellationTokenSource","_token","KeyCodeStrMap","_keyCodeToStr","_strToKeyCode","define","keyCode","keyCodeToStr","strToKeyCode","uiMap","userSettingsUSMap","userSettingsGeneralMap","uiLabel","usUserSettingsLabel","generalUserSettingsLabel","fromString","toUserSettingsUS","toUserSettingsGeneral","fromUserSettings","SimpleKeybinding","ctrlKey","shiftKey","altKey","metaKey","isModifierKey","toChord","keyCodes_ChordKeybinding","isDuplicateModifierCase","MarkerTag","MarkerSeverity","KeyCode","SelectionDirection","ScrollbarVisibility","OverviewRulerLane","EndOfLinePreference","DefaultEndOfLine","EndOfLineSequence","TrackedRangeStickiness","ScrollType","CursorChangeReason","RenderMinimap","WrappingIndent","TextEditorCursorBlinkingStyle","TextEditorCursorStyle","RenderLineNumbersType","ContentWidgetPositionPreference","OverlayWidgetPositionPreference","MouseTargetType","IndentAction","CompletionItemKind","CompletionItemInsertTextRule","CompletionTriggerKind","SignatureHelpTriggerKind","DocumentHighlightKind","SymbolKind","ChordKeybinding","parts","selection_extends","selection_Selection","Selection","selectionStartLineNumber","selectionStartColumn","positionLineNumber","positionColumn","equalsSelection","selectionsEqual","getDirection","getPosition","liftSelection","sel","selectionsArrEqual","isISelection","createWithDirection","direction","Token","offset","standaloneBase_KeyMod","KeyMod","chord","firstPart","secondPart","KeyChord","CtrlCmd","Shift","Alt","WinCtrl","editorSimpleWorker_extends","editorSimpleWorker_MirrorModel","MirrorModel","getValue","getLinesContent","getWordAtPosition","wordDefinition","wordAtText","textOffset","lastIndex","matchIndex","word","getWordAtPosSlow","getWordAtPosFast","getWordAtText","flags","ignoreCase","multiline","unicode","ensureValidWordDefinition","getWordUntilPosition","wordAtPosition","createWordIterator","lineText","wordRangesIdx","wordRanges","_wordenize","getLineWords","content","words","ranges_1","getValueInRange","_validateRange","lineEnding","startLineIndex","endLineIndex","resultLines","offsetAt","_validatePosition","positionAt","out","lineLength","hasChanged","maxCharacter","editorSimpleWorker_EditorSimpleWorkerImpl","EditorSimpleWorkerImpl","foreignModuleFactory","_models","_getModel","_getModels","keys","acceptNewModel","EOL","acceptModelChanged","strURL","acceptRemovedModel","BaseEditorSimpleWorker","_foreignModuleFactory","_foreignModule","originalUrl","modifiedUrl","ignoreTrimWhitespace","identical","_modelsAreIdentical","originalLineCount","computeMoreMinimalEdits","modelUrl","edits","lastEol","edits_1","_diffLimit","editOffset","newEdit","textualSuggest","wordDef","wordDefFlags","suggestions","wordDefRegExp","currentWord","seen","_suggestionsLimit","kind","label","computeWordRanges","words_1","selectionText","wordRange","loadForeignModule","createData","ctx","getMirrorModels","fmr","monaco","editor","languages","Uri","initialized","foreignModule","editorWorker","simpleWorker"],"mappings":"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","file":"editor.worker.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 6);\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport var LANGUAGE_DEFAULT = 'en';\nvar _isWindows = false;\nvar _isMacintosh = false;\nvar _isLinux = false;\nvar _isNative = false;\nvar _isWeb = false;\nvar _locale = undefined;\nvar _language = LANGUAGE_DEFAULT;\nvar _translationsConfigFile = undefined;\nvar isElectronRenderer = typeof process !== 'undefined' && typeof process.versions !== 'undefined' && typeof process.versions.electron !== 'undefined' && process.type === 'renderer'; // OS detection\n\nif (typeof navigator === 'object' && !isElectronRenderer) {\n  var userAgent = navigator.userAgent;\n  _isWindows = userAgent.indexOf('Windows') >= 0;\n  _isMacintosh = userAgent.indexOf('Macintosh') >= 0;\n  _isLinux = userAgent.indexOf('Linux') >= 0;\n  _isWeb = true;\n  _locale = navigator.language;\n  _language = _locale;\n} else if (typeof process === 'object') {\n  _isWindows = process.platform === 'win32';\n  _isMacintosh = process.platform === 'darwin';\n  _isLinux = process.platform === 'linux';\n  _locale = LANGUAGE_DEFAULT;\n  _language = LANGUAGE_DEFAULT;\n  var rawNlsConfig = process.env['VSCODE_NLS_CONFIG'];\n\n  if (rawNlsConfig) {\n    try {\n      var nlsConfig = JSON.parse(rawNlsConfig);\n      var resolved = nlsConfig.availableLanguages['*'];\n      _locale = nlsConfig.locale; // VSCode's default language is 'en'\n\n      _language = resolved ? resolved : LANGUAGE_DEFAULT;\n      _translationsConfigFile = nlsConfig._translationsConfigFile;\n    } catch (e) {}\n  }\n\n  _isNative = true;\n}\n\nvar _platform = 0\n/* Web */\n;\n\nif (_isNative) {\n  if (_isMacintosh) {\n    _platform = 1\n    /* Mac */\n    ;\n  } else if (_isWindows) {\n    _platform = 3\n    /* Windows */\n    ;\n  } else if (_isLinux) {\n    _platform = 2\n    /* Linux */\n    ;\n  }\n}\n\nexport var isWindows = _isWindows;\nexport var isMacintosh = _isMacintosh;\nexport var isLinux = _isLinux;\nexport var isNative = _isNative;\nexport var isWeb = _isWeb;\n\nvar _globals = typeof self === 'object' ? self : typeof global === 'object' ? global : {};\n\nexport var globals = _globals;\nvar _setImmediate = null;\nexport function setImmediate(callback) {\n  if (_setImmediate === null) {\n    if (globals.setImmediate) {\n      _setImmediate = globals.setImmediate.bind(globals);\n    } else if (typeof process !== 'undefined' && typeof process.nextTick === 'function') {\n      _setImmediate = process.nextTick.bind(process);\n    } else {\n      _setImmediate = globals.setTimeout.bind(globals);\n    }\n  }\n\n  return _setImmediate(callback);\n}\nexport var OS = _isMacintosh ? 2\n/* Macintosh */\n: _isWindows ? 1\n/* Windows */\n: 3\n/* Linux */\n;","var g; // This works in non-strict mode\n\ng = function () {\n  return this;\n}();\n\ntry {\n  // This works if eval is allowed (see CSP)\n  g = g || new Function(\"return this\")();\n} catch (e) {\n  // This works if the window reference is available\n  if (typeof window === \"object\") g = window;\n} // g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\n\nmodule.exports = g;","// shim for using process in browser\nvar process = module.exports = {}; // cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n  throw new Error('setTimeout has not been defined');\n}\n\nfunction defaultClearTimeout() {\n  throw new Error('clearTimeout has not been defined');\n}\n\n(function () {\n  try {\n    if (typeof setTimeout === 'function') {\n      cachedSetTimeout = setTimeout;\n    } else {\n      cachedSetTimeout = defaultSetTimout;\n    }\n  } catch (e) {\n    cachedSetTimeout = defaultSetTimout;\n  }\n\n  try {\n    if (typeof clearTimeout === 'function') {\n      cachedClearTimeout = clearTimeout;\n    } else {\n      cachedClearTimeout = defaultClearTimeout;\n    }\n  } catch (e) {\n    cachedClearTimeout = defaultClearTimeout;\n  }\n})();\n\nfunction runTimeout(fun) {\n  if (cachedSetTimeout === setTimeout) {\n    //normal enviroments in sane situations\n    return setTimeout(fun, 0);\n  } // if setTimeout wasn't available but was latter defined\n\n\n  if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n    cachedSetTimeout = setTimeout;\n    return setTimeout(fun, 0);\n  }\n\n  try {\n    // when when somebody has screwed with setTimeout but no I.E. maddness\n    return cachedSetTimeout(fun, 0);\n  } catch (e) {\n    try {\n      // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n      return cachedSetTimeout.call(null, fun, 0);\n    } catch (e) {\n      // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n      return cachedSetTimeout.call(this, fun, 0);\n    }\n  }\n}\n\nfunction runClearTimeout(marker) {\n  if (cachedClearTimeout === clearTimeout) {\n    //normal enviroments in sane situations\n    return clearTimeout(marker);\n  } // if clearTimeout wasn't available but was latter defined\n\n\n  if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n    cachedClearTimeout = clearTimeout;\n    return clearTimeout(marker);\n  }\n\n  try {\n    // when when somebody has screwed with setTimeout but no I.E. maddness\n    return cachedClearTimeout(marker);\n  } catch (e) {\n    try {\n      // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n      return cachedClearTimeout.call(null, marker);\n    } catch (e) {\n      // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n      // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n      return cachedClearTimeout.call(this, marker);\n    }\n  }\n}\n\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n  if (!draining || !currentQueue) {\n    return;\n  }\n\n  draining = false;\n\n  if (currentQueue.length) {\n    queue = currentQueue.concat(queue);\n  } else {\n    queueIndex = -1;\n  }\n\n  if (queue.length) {\n    drainQueue();\n  }\n}\n\nfunction drainQueue() {\n  if (draining) {\n    return;\n  }\n\n  var timeout = runTimeout(cleanUpNextTick);\n  draining = true;\n  var len = queue.length;\n\n  while (len) {\n    currentQueue = queue;\n    queue = [];\n\n    while (++queueIndex < len) {\n      if (currentQueue) {\n        currentQueue[queueIndex].run();\n      }\n    }\n\n    queueIndex = -1;\n    len = queue.length;\n  }\n\n  currentQueue = null;\n  draining = false;\n  runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n  var args = new Array(arguments.length - 1);\n\n  if (arguments.length > 1) {\n    for (var i = 1; i < arguments.length; i++) {\n      args[i - 1] = arguments[i];\n    }\n  }\n\n  queue.push(new Item(fun, args));\n\n  if (queue.length === 1 && !draining) {\n    runTimeout(drainQueue);\n  }\n}; // v8 likes predictible objects\n\n\nfunction Item(fun, array) {\n  this.fun = fun;\n  this.array = array;\n}\n\nItem.prototype.run = function () {\n  this.fun.apply(null, this.array);\n};\n\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\n\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) {\n  return [];\n};\n\nprocess.binding = function (name) {\n  throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () {\n  return '/';\n};\n\nprocess.chdir = function (dir) {\n  throw new Error('process.chdir is not supported');\n};\n\nprocess.umask = function () {\n  return 0;\n};","/*!\nCopyright (c) 2014 Taylor Hakes\nCopyright (c) 2014 Forbes Lindesay\n */\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory() : typeof define === 'function' && define.amd ? define(factory) : factory();\n})(this, function () {\n  'use strict';\n  /**\n   * @this {Promise}\n   */\n\n  function finallyConstructor(callback) {\n    var constructor = this.constructor;\n    return this.then(function (value) {\n      return constructor.resolve(callback()).then(function () {\n        return value;\n      });\n    }, function (reason) {\n      return constructor.resolve(callback()).then(function () {\n        return constructor.reject(reason);\n      });\n    });\n  } // Store setTimeout reference so promise-polyfill will be unaffected by\n  // other code modifying setTimeout (like sinon.useFakeTimers())\n\n\n  var setTimeoutFunc = setTimeout;\n\n  function noop() {} // Polyfill for Function.prototype.bind\n\n\n  function bind(fn, thisArg) {\n    return function () {\n      fn.apply(thisArg, arguments);\n    };\n  }\n  /**\n   * @constructor\n   * @param {Function} fn\n   */\n\n\n  function Promise(fn) {\n    if (!(this instanceof Promise)) throw new TypeError('Promises must be constructed via new');\n    if (typeof fn !== 'function') throw new TypeError('not a function');\n    /** @type {!number} */\n\n    this._state = 0;\n    /** @type {!boolean} */\n\n    this._handled = false;\n    /** @type {Promise|undefined} */\n\n    this._value = undefined;\n    /** @type {!Array<!Function>} */\n\n    this._deferreds = [];\n    doResolve(fn, this);\n  }\n\n  function handle(self, deferred) {\n    while (self._state === 3) {\n      self = self._value;\n    }\n\n    if (self._state === 0) {\n      self._deferreds.push(deferred);\n\n      return;\n    }\n\n    self._handled = true;\n\n    Promise._immediateFn(function () {\n      var cb = self._state === 1 ? deferred.onFulfilled : deferred.onRejected;\n\n      if (cb === null) {\n        (self._state === 1 ? resolve : reject)(deferred.promise, self._value);\n        return;\n      }\n\n      var ret;\n\n      try {\n        ret = cb(self._value);\n      } catch (e) {\n        reject(deferred.promise, e);\n        return;\n      }\n\n      resolve(deferred.promise, ret);\n    });\n  }\n\n  function resolve(self, newValue) {\n    try {\n      // Promise Resolution Procedure: https://github.com/promises-aplus/promises-spec#the-promise-resolution-procedure\n      if (newValue === self) throw new TypeError('A promise cannot be resolved with itself.');\n\n      if (newValue && (typeof newValue === 'object' || typeof newValue === 'function')) {\n        var then = newValue.then;\n\n        if (newValue instanceof Promise) {\n          self._state = 3;\n          self._value = newValue;\n          finale(self);\n          return;\n        } else if (typeof then === 'function') {\n          doResolve(bind(then, newValue), self);\n          return;\n        }\n      }\n\n      self._state = 1;\n      self._value = newValue;\n      finale(self);\n    } catch (e) {\n      reject(self, e);\n    }\n  }\n\n  function reject(self, newValue) {\n    self._state = 2;\n    self._value = newValue;\n    finale(self);\n  }\n\n  function finale(self) {\n    if (self._state === 2 && self._deferreds.length === 0) {\n      Promise._immediateFn(function () {\n        if (!self._handled) {\n          Promise._unhandledRejectionFn(self._value);\n        }\n      });\n    }\n\n    for (var i = 0, len = self._deferreds.length; i < len; i++) {\n      handle(self, self._deferreds[i]);\n    }\n\n    self._deferreds = null;\n  }\n  /**\n   * @constructor\n   */\n\n\n  function Handler(onFulfilled, onRejected, promise) {\n    this.onFulfilled = typeof onFulfilled === 'function' ? onFulfilled : null;\n    this.onRejected = typeof onRejected === 'function' ? onRejected : null;\n    this.promise = promise;\n  }\n  /**\n   * Take a potentially misbehaving resolver function and make sure\n   * onFulfilled and onRejected are only called once.\n   *\n   * Makes no guarantees about asynchrony.\n   */\n\n\n  function doResolve(fn, self) {\n    var done = false;\n\n    try {\n      fn(function (value) {\n        if (done) return;\n        done = true;\n        resolve(self, value);\n      }, function (reason) {\n        if (done) return;\n        done = true;\n        reject(self, reason);\n      });\n    } catch (ex) {\n      if (done) return;\n      done = true;\n      reject(self, ex);\n    }\n  }\n\n  Promise.prototype['catch'] = function (onRejected) {\n    return this.then(null, onRejected);\n  };\n\n  Promise.prototype.then = function (onFulfilled, onRejected) {\n    // @ts-ignore\n    var prom = new this.constructor(noop);\n    handle(this, new Handler(onFulfilled, onRejected, prom));\n    return prom;\n  };\n\n  Promise.prototype['finally'] = finallyConstructor;\n\n  Promise.all = function (arr) {\n    return new Promise(function (resolve, reject) {\n      if (!arr || typeof arr.length === 'undefined') throw new TypeError('Promise.all accepts an array');\n      var args = Array.prototype.slice.call(arr);\n      if (args.length === 0) return resolve([]);\n      var remaining = args.length;\n\n      function res(i, val) {\n        try {\n          if (val && (typeof val === 'object' || typeof val === 'function')) {\n            var then = val.then;\n\n            if (typeof then === 'function') {\n              then.call(val, function (val) {\n                res(i, val);\n              }, reject);\n              return;\n            }\n          }\n\n          args[i] = val;\n\n          if (--remaining === 0) {\n            resolve(args);\n          }\n        } catch (ex) {\n          reject(ex);\n        }\n      }\n\n      for (var i = 0; i < args.length; i++) {\n        res(i, args[i]);\n      }\n    });\n  };\n\n  Promise.resolve = function (value) {\n    if (value && typeof value === 'object' && value.constructor === Promise) {\n      return value;\n    }\n\n    return new Promise(function (resolve) {\n      resolve(value);\n    });\n  };\n\n  Promise.reject = function (value) {\n    return new Promise(function (resolve, reject) {\n      reject(value);\n    });\n  };\n\n  Promise.race = function (values) {\n    return new Promise(function (resolve, reject) {\n      for (var i = 0, len = values.length; i < len; i++) {\n        values[i].then(resolve, reject);\n      }\n    });\n  }; // Use polyfill for setImmediate for performance gains\n\n\n  Promise._immediateFn = typeof setImmediate === 'function' && function (fn) {\n    setImmediate(fn);\n  } || function (fn) {\n    setTimeoutFunc(fn, 0);\n  };\n\n  Promise._unhandledRejectionFn = function _unhandledRejectionFn(err) {\n    if (typeof console !== 'undefined' && console) {\n      console.warn('Possible Unhandled Promise Rejection:', err); // eslint-disable-line no-console\n    }\n  };\n  /** @suppress {undefinedVars} */\n\n\n  var globalNS = function () {\n    // the only reliable means to get the global object is\n    // `Function('return this')()`\n    // However, this causes CSP violations in Chrome apps.\n    if (typeof self !== 'undefined') {\n      return self;\n    }\n\n    if (typeof window !== 'undefined') {\n      return window;\n    }\n\n    if (typeof global !== 'undefined') {\n      return global;\n    }\n\n    throw new Error('unable to locate global object');\n  }();\n\n  if (!('Promise' in globalNS)) {\n    globalNS['Promise'] = Promise;\n  } else if (!globalNS.Promise.prototype['finally']) {\n    globalNS.Promise.prototype['finally'] = finallyConstructor;\n  }\n});","var scope = typeof global !== \"undefined\" && global || typeof self !== \"undefined\" && self || window;\nvar apply = Function.prototype.apply; // DOM APIs, for completeness\n\nexports.setTimeout = function () {\n  return new Timeout(apply.call(setTimeout, scope, arguments), clearTimeout);\n};\n\nexports.setInterval = function () {\n  return new Timeout(apply.call(setInterval, scope, arguments), clearInterval);\n};\n\nexports.clearTimeout = exports.clearInterval = function (timeout) {\n  if (timeout) {\n    timeout.close();\n  }\n};\n\nfunction Timeout(id, clearFn) {\n  this._id = id;\n  this._clearFn = clearFn;\n}\n\nTimeout.prototype.unref = Timeout.prototype.ref = function () {};\n\nTimeout.prototype.close = function () {\n  this._clearFn.call(scope, this._id);\n}; // Does not start the time, just sets up the members needed.\n\n\nexports.enroll = function (item, msecs) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = msecs;\n};\n\nexports.unenroll = function (item) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = -1;\n};\n\nexports._unrefActive = exports.active = function (item) {\n  clearTimeout(item._idleTimeoutId);\n  var msecs = item._idleTimeout;\n\n  if (msecs >= 0) {\n    item._idleTimeoutId = setTimeout(function onTimeout() {\n      if (item._onTimeout) item._onTimeout();\n    }, msecs);\n  }\n}; // setimmediate attaches itself to the global object\n\n\nrequire(\"setimmediate\"); // On some exotic environments, it's not clear which object `setimmediate` was\n// able to install onto.  Search each possibility in the same order as the\n// `setimmediate` library.\n\n\nexports.setImmediate = typeof self !== \"undefined\" && self.setImmediate || typeof global !== \"undefined\" && global.setImmediate || this && this.setImmediate;\nexports.clearImmediate = typeof self !== \"undefined\" && self.clearImmediate || typeof global !== \"undefined\" && global.clearImmediate || this && this.clearImmediate;","(function (global, undefined) {\n  \"use strict\";\n\n  if (global.setImmediate) {\n    return;\n  }\n\n  var nextHandle = 1; // Spec says greater than zero\n\n  var tasksByHandle = {};\n  var currentlyRunningATask = false;\n  var doc = global.document;\n  var registerImmediate;\n\n  function setImmediate(callback) {\n    // Callback can either be a function or a string\n    if (typeof callback !== \"function\") {\n      callback = new Function(\"\" + callback);\n    } // Copy function arguments\n\n\n    var args = new Array(arguments.length - 1);\n\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i + 1];\n    } // Store and register the task\n\n\n    var task = {\n      callback: callback,\n      args: args\n    };\n    tasksByHandle[nextHandle] = task;\n    registerImmediate(nextHandle);\n    return nextHandle++;\n  }\n\n  function clearImmediate(handle) {\n    delete tasksByHandle[handle];\n  }\n\n  function run(task) {\n    var callback = task.callback;\n    var args = task.args;\n\n    switch (args.length) {\n      case 0:\n        callback();\n        break;\n\n      case 1:\n        callback(args[0]);\n        break;\n\n      case 2:\n        callback(args[0], args[1]);\n        break;\n\n      case 3:\n        callback(args[0], args[1], args[2]);\n        break;\n\n      default:\n        callback.apply(undefined, args);\n        break;\n    }\n  }\n\n  function runIfPresent(handle) {\n    // From the spec: \"Wait until any invocations of this algorithm started before this one have completed.\"\n    // So if we're currently running a task, we'll need to delay this invocation.\n    if (currentlyRunningATask) {\n      // Delay by doing a setTimeout. setImmediate was tried instead, but in Firefox 7 it generated a\n      // \"too much recursion\" error.\n      setTimeout(runIfPresent, 0, handle);\n    } else {\n      var task = tasksByHandle[handle];\n\n      if (task) {\n        currentlyRunningATask = true;\n\n        try {\n          run(task);\n        } finally {\n          clearImmediate(handle);\n          currentlyRunningATask = false;\n        }\n      }\n    }\n  }\n\n  function installNextTickImplementation() {\n    registerImmediate = function registerImmediate(handle) {\n      process.nextTick(function () {\n        runIfPresent(handle);\n      });\n    };\n  }\n\n  function canUsePostMessage() {\n    // The test against `importScripts` prevents this implementation from being installed inside a web worker,\n    // where `global.postMessage` means something completely different and can't be used for this purpose.\n    if (global.postMessage && !global.importScripts) {\n      var postMessageIsAsynchronous = true;\n      var oldOnMessage = global.onmessage;\n\n      global.onmessage = function () {\n        postMessageIsAsynchronous = false;\n      };\n\n      global.postMessage(\"\", \"*\");\n      global.onmessage = oldOnMessage;\n      return postMessageIsAsynchronous;\n    }\n  }\n\n  function installPostMessageImplementation() {\n    // Installs an event handler on `global` for the `message` event: see\n    // * https://developer.mozilla.org/en/DOM/window.postMessage\n    // * http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#crossDocumentMessages\n    var messagePrefix = \"setImmediate$\" + Math.random() + \"$\";\n\n    var onGlobalMessage = function onGlobalMessage(event) {\n      if (event.source === global && typeof event.data === \"string\" && event.data.indexOf(messagePrefix) === 0) {\n        runIfPresent(+event.data.slice(messagePrefix.length));\n      }\n    };\n\n    if (global.addEventListener) {\n      global.addEventListener(\"message\", onGlobalMessage, false);\n    } else {\n      global.attachEvent(\"onmessage\", onGlobalMessage);\n    }\n\n    registerImmediate = function registerImmediate(handle) {\n      global.postMessage(messagePrefix + handle, \"*\");\n    };\n  }\n\n  function installMessageChannelImplementation() {\n    var channel = new MessageChannel();\n\n    channel.port1.onmessage = function (event) {\n      var handle = event.data;\n      runIfPresent(handle);\n    };\n\n    registerImmediate = function registerImmediate(handle) {\n      channel.port2.postMessage(handle);\n    };\n  }\n\n  function installReadyStateChangeImplementation() {\n    var html = doc.documentElement;\n\n    registerImmediate = function registerImmediate(handle) {\n      // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n      // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n      var script = doc.createElement(\"script\");\n\n      script.onreadystatechange = function () {\n        runIfPresent(handle);\n        script.onreadystatechange = null;\n        html.removeChild(script);\n        script = null;\n      };\n\n      html.appendChild(script);\n    };\n  }\n\n  function installSetTimeoutImplementation() {\n    registerImmediate = function registerImmediate(handle) {\n      setTimeout(runIfPresent, 0, handle);\n    };\n  } // If supported, we should attach to the prototype of global, since that is where setTimeout et al. live.\n\n\n  var attachTo = Object.getPrototypeOf && Object.getPrototypeOf(global);\n  attachTo = attachTo && attachTo.setTimeout ? attachTo : global; // Don't get fooled by e.g. browserify environments.\n\n  if ({}.toString.call(global.process) === \"[object process]\") {\n    // For Node.js before 0.9\n    installNextTickImplementation();\n  } else if (canUsePostMessage()) {\n    // For non-IE10 modern browsers\n    installPostMessageImplementation();\n  } else if (global.MessageChannel) {\n    // For web workers, where supported\n    installMessageChannelImplementation();\n  } else if (doc && \"onreadystatechange\" in doc.createElement(\"script\")) {\n    // For IE 6–8\n    installReadyStateChangeImplementation();\n  } else {\n    // For older browsers\n    installSetTimeoutImplementation();\n  }\n\n  attachTo.setImmediate = setImmediate;\n  attachTo.clearImmediate = clearImmediate;\n})(typeof self === \"undefined\" ? typeof global === \"undefined\" ? this : global : self);","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n// Avoid circular dependency on EventEmitter by implementing a subset of the interface.\nvar ErrorHandler =\n/** @class */\nfunction () {\n  function ErrorHandler() {\n    this.listeners = [];\n\n    this.unexpectedErrorHandler = function (e) {\n      setTimeout(function () {\n        if (e.stack) {\n          throw new Error(e.message + '\\n\\n' + e.stack);\n        }\n\n        throw e;\n      }, 0);\n    };\n  }\n\n  ErrorHandler.prototype.emit = function (e) {\n    this.listeners.forEach(function (listener) {\n      listener(e);\n    });\n  };\n\n  ErrorHandler.prototype.onUnexpectedError = function (e) {\n    this.unexpectedErrorHandler(e);\n    this.emit(e);\n  }; // For external errors, we don't want the listeners to be called\n\n\n  ErrorHandler.prototype.onUnexpectedExternalError = function (e) {\n    this.unexpectedErrorHandler(e);\n  };\n\n  return ErrorHandler;\n}();\n\nexport { ErrorHandler };\nexport var errorHandler = new ErrorHandler();\nexport function onUnexpectedError(e) {\n  // ignore errors from cancelled promises\n  if (!isPromiseCanceledError(e)) {\n    errorHandler.onUnexpectedError(e);\n  }\n\n  return undefined;\n}\nexport function onUnexpectedExternalError(e) {\n  // ignore errors from cancelled promises\n  if (!isPromiseCanceledError(e)) {\n    errorHandler.onUnexpectedExternalError(e);\n  }\n\n  return undefined;\n}\nexport function transformErrorForSerialization(error) {\n  if (error instanceof Error) {\n    var name_1 = error.name,\n        message = error.message;\n    var stack = error.stacktrace || error.stack;\n    return {\n      $isError: true,\n      name: name_1,\n      message: message,\n      stack: stack\n    };\n  } // return as is\n\n\n  return error;\n}\nvar canceledName = 'Canceled';\n/**\n * Checks if the given error is a promise in canceled state\n */\n\nexport function isPromiseCanceledError(error) {\n  return error instanceof Error && error.name === canceledName && error.message === canceledName;\n}\n/**\n * Returns an error that signals cancellation.\n */\n\nexport function canceled() {\n  var error = new Error(canceledName);\n  error.name = error.message;\n  return error;\n}\nexport function illegalArgument(name) {\n  if (name) {\n    return new Error(\"Illegal argument: \" + name);\n  } else {\n    return new Error('Illegal argument');\n  }\n}\nexport function illegalState(name) {\n  if (name) {\n    return new Error(\"Illegal state: \" + name);\n  } else {\n    return new Error('Illegal state');\n  }\n}","export function isDisposable(thing) {\n  return typeof thing.dispose === 'function' && thing.dispose.length === 0;\n}\n\nfunction _dispose(first) {\n  var rest = [];\n\n  for (var _i = 1; _i < arguments.length; _i++) {\n    rest[_i - 1] = arguments[_i];\n  }\n\n  if (Array.isArray(first)) {\n    first.forEach(function (d) {\n      return d && d.dispose();\n    });\n    return [];\n  } else if (rest.length === 0) {\n    if (first) {\n      first.dispose();\n      return first;\n    }\n\n    return undefined;\n  } else {\n    _dispose(first);\n\n    _dispose(rest);\n\n    return [];\n  }\n}\n\nexport { _dispose as dispose };\nexport function combinedDisposable(disposables) {\n  return {\n    dispose: function dispose() {\n      return _dispose(disposables);\n    }\n  };\n}\nexport function toDisposable(fn) {\n  return {\n    dispose: function dispose() {\n      fn();\n    }\n  };\n}\n\nvar Disposable =\n/** @class */\nfunction () {\n  function Disposable() {\n    this._toDispose = [];\n    this._lifecycle_disposable_isDisposed = false;\n  }\n\n  Disposable.prototype.dispose = function () {\n    this._lifecycle_disposable_isDisposed = true;\n    this._toDispose = _dispose(this._toDispose);\n  };\n\n  Disposable.prototype._register = function (t) {\n    if (this._lifecycle_disposable_isDisposed) {\n      console.warn('Registering disposable on object that has already been disposed.');\n      t.dispose();\n    } else {\n      this._toDispose.push(t);\n    }\n\n    return t;\n  };\n\n  Disposable.None = Object.freeze({\n    dispose: function dispose() {}\n  });\n  return Disposable;\n}();\n\nexport { Disposable };\n\nvar ImmortalReference =\n/** @class */\nfunction () {\n  function ImmortalReference(object) {\n    this.object = object;\n  }\n\n  ImmortalReference.prototype.dispose = function () {};\n\n  return ImmortalReference;\n}();\n\nexport { ImmortalReference };","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar _typeof = {\n  number: 'number',\n  string: 'string',\n  undefined: 'undefined',\n  object: 'object',\n  function: 'function'\n};\n/**\n * @returns whether the provided parameter is a JavaScript Array or not.\n */\n\nexport function isArray(array) {\n  if (Array.isArray) {\n    return Array.isArray(array);\n  }\n\n  if (array && typeof array.length === _typeof.number && array.constructor === Array) {\n    return true;\n  }\n\n  return false;\n}\n/**\n * @returns whether the provided parameter is a JavaScript String or not.\n */\n\nexport function isString(str) {\n  if (typeof str === _typeof.string || str instanceof String) {\n    return true;\n  }\n\n  return false;\n}\n/**\n *\n * @returns whether the provided parameter is of type `object` but **not**\n *\t`null`, an `array`, a `regexp`, nor a `date`.\n */\n\nexport function isObject(obj) {\n  // The method can't do a type cast since there are type (like strings) which\n  // are subclasses of any put not positvely matched by the function. Hence type\n  // narrowing results in wrong results.\n  return typeof obj === _typeof.object && obj !== null && !Array.isArray(obj) && !(obj instanceof RegExp) && !(obj instanceof Date);\n}\n/**\n * In **contrast** to just checking `typeof` this will return `false` for `NaN`.\n * @returns whether the provided parameter is a JavaScript Number or not.\n */\n\nexport function isNumber(obj) {\n  if ((typeof obj === _typeof.number || obj instanceof Number) && !isNaN(obj)) {\n    return true;\n  }\n\n  return false;\n}\n/**\n * @returns whether the provided parameter is a JavaScript Boolean or not.\n */\n\nexport function isBoolean(obj) {\n  return obj === true || obj === false;\n}\n/**\n * @returns whether the provided parameter is undefined.\n */\n\nexport function isUndefined(obj) {\n  return typeof obj === _typeof.undefined;\n}\n/**\n * @returns whether the provided parameter is undefined or null.\n */\n\nexport function isUndefinedOrNull(obj) {\n  return isUndefined(obj) || obj === null;\n}\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n/**\n * @returns whether the provided parameter is an empty JavaScript Object or not.\n */\n\nexport function isEmptyObject(obj) {\n  if (!isObject(obj)) {\n    return false;\n  }\n\n  for (var key in obj) {\n    if (hasOwnProperty.call(obj, key)) {\n      return false;\n    }\n  }\n\n  return true;\n}\n/**\n * @returns whether the provided parameter is a JavaScript Function or not.\n */\n\nexport function isFunction(obj) {\n  return typeof obj === _typeof.function;\n}\nexport function validateConstraints(args, constraints) {\n  var len = Math.min(args.length, constraints.length);\n\n  for (var i = 0; i < len; i++) {\n    validateConstraint(args[i], constraints[i]);\n  }\n}\nexport function validateConstraint(arg, constraint) {\n  if (isString(constraint)) {\n    if (typeof arg !== constraint) {\n      throw new Error(\"argument does not match constraint: typeof \" + constraint);\n    }\n  } else if (isFunction(constraint)) {\n    try {\n      if (arg instanceof constraint) {\n        return;\n      }\n    } catch (_a) {// ignore\n    }\n\n    if (!isUndefinedOrNull(arg) && arg.constructor === constraint) {\n      return;\n    }\n\n    if (constraint.length === 1 && constraint.call(undefined, arg) === true) {\n      return;\n    }\n\n    throw new Error(\"argument does not match one of these constraints: arg instanceof constraint, arg.constructor === constraint, nor constraint(arg) === true\");\n  }\n}\n/**\n * Creates a new object of the provided class and will call the constructor with\n * any additional argument supplied.\n */\n\nexport function create(ctor) {\n  var args = [];\n\n  for (var _i = 1; _i < arguments.length; _i++) {\n    args[_i - 1] = arguments[_i];\n  }\n\n  var _a;\n\n  if (isNativeClass(ctor)) {\n    return new ((_a = ctor).bind.apply(_a, [void 0].concat(args)))();\n  } else {\n    var obj = Object.create(ctor.prototype);\n    ctor.apply(obj, args);\n    return obj;\n  }\n} // https://stackoverflow.com/a/32235645/1499159\n\nfunction isNativeClass(thing) {\n  return typeof thing === 'function' && thing.hasOwnProperty('prototype') && !thing.hasOwnProperty('arguments');\n}\n/**\n *\n *\n */\n\n\nexport function getAllPropertyNames(obj) {\n  var res = [];\n  var proto = Object.getPrototypeOf(obj);\n\n  while (Object.prototype !== proto) {\n    res = res.concat(Object.getOwnPropertyNames(proto));\n    proto = Object.getPrototypeOf(proto);\n  }\n\n  return res;\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nimport { transformErrorForSerialization } from '../errors.js';\nimport { Disposable } from '../lifecycle.js';\nimport { isWeb } from '../platform.js';\nimport { getAllPropertyNames } from '../types.js';\nvar INITIALIZE = '$initialize';\nvar webWorkerWarningLogged = false;\nexport function logOnceWebWorkerWarning(err) {\n  if (!isWeb) {\n    // running tests\n    return;\n  }\n\n  if (!webWorkerWarningLogged) {\n    webWorkerWarningLogged = true;\n    console.warn('Could not create web worker(s). Falling back to loading web worker code in main thread, which might cause UI freezes. Please see https://github.com/Microsoft/monaco-editor#faq');\n  }\n\n  console.warn(err.message);\n}\n\nvar SimpleWorkerProtocol =\n/** @class */\nfunction () {\n  function SimpleWorkerProtocol(handler) {\n    this._workerId = -1;\n    this._handler = handler;\n    this._lastSentReq = 0;\n    this._pendingReplies = Object.create(null);\n  }\n\n  SimpleWorkerProtocol.prototype.setWorkerId = function (workerId) {\n    this._workerId = workerId;\n  };\n\n  SimpleWorkerProtocol.prototype.sendMessage = function (method, args) {\n    var _this = this;\n\n    var req = String(++this._lastSentReq);\n    return new Promise(function (resolve, reject) {\n      _this._pendingReplies[req] = {\n        resolve: resolve,\n        reject: reject\n      };\n\n      _this._send({\n        vsWorker: _this._workerId,\n        req: req,\n        method: method,\n        args: args\n      });\n    });\n  };\n\n  SimpleWorkerProtocol.prototype.handleMessage = function (serializedMessage) {\n    var message;\n\n    try {\n      message = JSON.parse(serializedMessage);\n    } catch (e) {\n      // nothing\n      return;\n    }\n\n    if (!message || !message.vsWorker) {\n      return;\n    }\n\n    if (this._workerId !== -1 && message.vsWorker !== this._workerId) {\n      return;\n    }\n\n    this._handleMessage(message);\n  };\n\n  SimpleWorkerProtocol.prototype._handleMessage = function (msg) {\n    var _this = this;\n\n    if (msg.seq) {\n      var replyMessage = msg;\n\n      if (!this._pendingReplies[replyMessage.seq]) {\n        console.warn('Got reply to unknown seq');\n        return;\n      }\n\n      var reply = this._pendingReplies[replyMessage.seq];\n      delete this._pendingReplies[replyMessage.seq];\n\n      if (replyMessage.err) {\n        var err = replyMessage.err;\n\n        if (replyMessage.err.$isError) {\n          err = new Error();\n          err.name = replyMessage.err.name;\n          err.message = replyMessage.err.message;\n          err.stack = replyMessage.err.stack;\n        }\n\n        reply.reject(err);\n        return;\n      }\n\n      reply.resolve(replyMessage.res);\n      return;\n    }\n\n    var requestMessage = msg;\n    var req = requestMessage.req;\n\n    var result = this._handler.handleMessage(requestMessage.method, requestMessage.args);\n\n    result.then(function (r) {\n      _this._send({\n        vsWorker: _this._workerId,\n        seq: req,\n        res: r,\n        err: undefined\n      });\n    }, function (e) {\n      if (e.detail instanceof Error) {\n        // Loading errors have a detail property that points to the actual error\n        e.detail = transformErrorForSerialization(e.detail);\n      }\n\n      _this._send({\n        vsWorker: _this._workerId,\n        seq: req,\n        res: undefined,\n        err: transformErrorForSerialization(e)\n      });\n    });\n  };\n\n  SimpleWorkerProtocol.prototype._send = function (msg) {\n    var strMsg = JSON.stringify(msg); // console.log('SENDING: ' + strMsg);\n\n    this._handler.sendMessage(strMsg);\n  };\n\n  return SimpleWorkerProtocol;\n}();\n/**\n * Main thread side\n */\n\n\nvar SimpleWorkerClient =\n/** @class */\nfunction (_super) {\n  __extends(SimpleWorkerClient, _super);\n\n  function SimpleWorkerClient(workerFactory, moduleId) {\n    var _this = _super.call(this) || this;\n\n    var lazyProxyReject = null;\n    _this._worker = _this._register(workerFactory.create('vs/base/common/worker/simpleWorker', function (msg) {\n      _this._protocol.handleMessage(msg);\n    }, function (err) {\n      // in Firefox, web workers fail lazily :(\n      // we will reject the proxy\n      if (lazyProxyReject) {\n        lazyProxyReject(err);\n      }\n    }));\n    _this._protocol = new SimpleWorkerProtocol({\n      sendMessage: function sendMessage(msg) {\n        _this._worker.postMessage(msg);\n      },\n      handleMessage: function handleMessage(method, args) {\n        // Intentionally not supporting worker -> main requests\n        return Promise.resolve(null);\n      }\n    });\n\n    _this._protocol.setWorkerId(_this._worker.getId()); // Gather loader configuration\n\n\n    var loaderConfiguration = null;\n\n    if (typeof self.require !== 'undefined' && typeof self.require.getConfig === 'function') {\n      // Get the configuration from the Monaco AMD Loader\n      loaderConfiguration = self.require.getConfig();\n    } else if (typeof self.requirejs !== 'undefined') {\n      // Get the configuration from requirejs\n      loaderConfiguration = self.requirejs.s.contexts._.config;\n    } // Send initialize message\n\n\n    _this._onModuleLoaded = _this._protocol.sendMessage(INITIALIZE, [_this._worker.getId(), moduleId, loaderConfiguration]);\n    _this._lazyProxy = new Promise(function (resolve, reject) {\n      lazyProxyReject = reject;\n\n      _this._onModuleLoaded.then(function (availableMethods) {\n        var proxy = {};\n\n        for (var _i = 0, availableMethods_1 = availableMethods; _i < availableMethods_1.length; _i++) {\n          var methodName = availableMethods_1[_i];\n          proxy[methodName] = createProxyMethod(methodName, proxyMethodRequest);\n        }\n\n        resolve(proxy);\n      }, function (e) {\n        reject(e);\n\n        _this._onError('Worker failed to load ' + moduleId, e);\n      });\n    }); // Create proxy to loaded code\n\n    var proxyMethodRequest = function proxyMethodRequest(method, args) {\n      return _this._request(method, args);\n    };\n\n    var createProxyMethod = function createProxyMethod(method, proxyMethodRequest) {\n      return function () {\n        var args = Array.prototype.slice.call(arguments, 0);\n        return proxyMethodRequest(method, args);\n      };\n    };\n\n    return _this;\n  }\n\n  SimpleWorkerClient.prototype.getProxyObject = function () {\n    return this._lazyProxy;\n  };\n\n  SimpleWorkerClient.prototype._request = function (method, args) {\n    var _this = this;\n\n    return new Promise(function (resolve, reject) {\n      _this._onModuleLoaded.then(function () {\n        _this._protocol.sendMessage(method, args).then(resolve, reject);\n      }, reject);\n    });\n  };\n\n  SimpleWorkerClient.prototype._onError = function (message, error) {\n    console.error(message);\n    console.info(error);\n  };\n\n  return SimpleWorkerClient;\n}(Disposable);\n\nexport { SimpleWorkerClient };\n/**\n * Worker side\n */\n\nvar SimpleWorkerServer =\n/** @class */\nfunction () {\n  function SimpleWorkerServer(postSerializedMessage, requestHandler) {\n    var _this = this;\n\n    this._requestHandler = requestHandler;\n    this._protocol = new SimpleWorkerProtocol({\n      sendMessage: function sendMessage(msg) {\n        postSerializedMessage(msg);\n      },\n      handleMessage: function handleMessage(method, args) {\n        return _this._handleMessage(method, args);\n      }\n    });\n  }\n\n  SimpleWorkerServer.prototype.onmessage = function (msg) {\n    this._protocol.handleMessage(msg);\n  };\n\n  SimpleWorkerServer.prototype._handleMessage = function (method, args) {\n    if (method === INITIALIZE) {\n      return this.initialize(args[0], args[1], args[2]);\n    }\n\n    if (!this._requestHandler || typeof this._requestHandler[method] !== 'function') {\n      return Promise.reject(new Error('Missing requestHandler or method: ' + method));\n    }\n\n    try {\n      return Promise.resolve(this._requestHandler[method].apply(this._requestHandler, args));\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  };\n\n  SimpleWorkerServer.prototype.initialize = function (workerId, moduleId, loaderConfig) {\n    var _this = this;\n\n    this._protocol.setWorkerId(workerId);\n\n    if (this._requestHandler) {\n      // static request handler\n      var methods = [];\n\n      for (var _i = 0, _a = getAllPropertyNames(this._requestHandler); _i < _a.length; _i++) {\n        var prop = _a[_i];\n\n        if (typeof this._requestHandler[prop] === 'function') {\n          methods.push(prop);\n        }\n      }\n\n      return Promise.resolve(methods);\n    }\n\n    if (loaderConfig) {\n      // Remove 'baseUrl', handling it is beyond scope for now\n      if (typeof loaderConfig.baseUrl !== 'undefined') {\n        delete loaderConfig['baseUrl'];\n      }\n\n      if (typeof loaderConfig.paths !== 'undefined') {\n        if (typeof loaderConfig.paths.vs !== 'undefined') {\n          delete loaderConfig.paths['vs'];\n        }\n      } // Since this is in a web worker, enable catching errors\n\n\n      loaderConfig.catchError = true;\n\n      self.require.config(loaderConfig);\n    }\n\n    return new Promise(function (resolve, reject) {\n      // Use the global require to be sure to get the global config\n      self.require([moduleId], function () {\n        var result = [];\n\n        for (var _i = 0; _i < arguments.length; _i++) {\n          result[_i] = arguments[_i];\n        }\n\n        var handlerModule = result[0];\n        _this._requestHandler = handlerModule.create();\n\n        if (!_this._requestHandler) {\n          reject(new Error(\"No RequestHandler!\"));\n          return;\n        }\n\n        var methods = [];\n\n        for (var _a = 0, _b = getAllPropertyNames(_this._requestHandler); _a < _b.length; _a++) {\n          var prop = _b[_a];\n\n          if (typeof _this._requestHandler[prop] === 'function') {\n            methods.push(prop);\n          }\n        }\n\n        resolve(methods);\n      }, reject);\n    });\n  };\n\n  return SimpleWorkerServer;\n}();\n\nexport { SimpleWorkerServer };\n/**\n * Called on the worker side\n */\n\nexport function create(postMessage) {\n  return new SimpleWorkerServer(postMessage, null);\n}","/**\n * Returns the last element of an array.\n * @param array The array.\n * @param n Which element from the end (default is zero).\n */\nexport function tail(array, n) {\n  if (n === void 0) {\n    n = 0;\n  }\n\n  return array[array.length - (1 + n)];\n}\nexport function tail2(arr) {\n  if (arr.length === 0) {\n    throw new Error('Invalid tail call');\n  }\n\n  return [arr.slice(0, arr.length - 1), arr[arr.length - 1]];\n}\nexport function equals(one, other, itemEquals) {\n  if (itemEquals === void 0) {\n    itemEquals = function itemEquals(a, b) {\n      return a === b;\n    };\n  }\n\n  if (one === other) {\n    return true;\n  }\n\n  if (!one || !other) {\n    return false;\n  }\n\n  if (one.length !== other.length) {\n    return false;\n  }\n\n  for (var i = 0, len = one.length; i < len; i++) {\n    if (!itemEquals(one[i], other[i])) {\n      return false;\n    }\n  }\n\n  return true;\n}\nexport function binarySearch(array, key, comparator) {\n  var low = 0,\n      high = array.length - 1;\n\n  while (low <= high) {\n    var mid = (low + high) / 2 | 0;\n    var comp = comparator(array[mid], key);\n\n    if (comp < 0) {\n      low = mid + 1;\n    } else if (comp > 0) {\n      high = mid - 1;\n    } else {\n      return mid;\n    }\n  }\n\n  return -(low + 1);\n}\n/**\n * Takes a sorted array and a function p. The array is sorted in such a way that all elements where p(x) is false\n * are located before all elements where p(x) is true.\n * @returns the least x for which p(x) is true or array.length if no element fullfills the given function.\n */\n\nexport function findFirstInSorted(array, p) {\n  var low = 0,\n      high = array.length;\n\n  if (high === 0) {\n    return 0; // no children\n  }\n\n  while (low < high) {\n    var mid = Math.floor((low + high) / 2);\n\n    if (p(array[mid])) {\n      high = mid;\n    } else {\n      low = mid + 1;\n    }\n  }\n\n  return low;\n}\n/**\n * Like `Array#sort` but always stable. Usually runs a little slower `than Array#sort`\n * so only use this when actually needing stable sort.\n */\n\nexport function mergeSort(data, compare) {\n  _sort(data, compare, 0, data.length - 1, []);\n\n  return data;\n}\n\nfunction _merge(a, compare, lo, mid, hi, aux) {\n  var leftIdx = lo,\n      rightIdx = mid + 1;\n\n  for (var i = lo; i <= hi; i++) {\n    aux[i] = a[i];\n  }\n\n  for (var i = lo; i <= hi; i++) {\n    if (leftIdx > mid) {\n      // left side consumed\n      a[i] = aux[rightIdx++];\n    } else if (rightIdx > hi) {\n      // right side consumed\n      a[i] = aux[leftIdx++];\n    } else if (compare(aux[rightIdx], aux[leftIdx]) < 0) {\n      // right element is less -> comes first\n      a[i] = aux[rightIdx++];\n    } else {\n      // left element comes first (less or equal)\n      a[i] = aux[leftIdx++];\n    }\n  }\n}\n\nfunction _sort(a, compare, lo, hi, aux) {\n  if (hi <= lo) {\n    return;\n  }\n\n  var mid = lo + (hi - lo) / 2 | 0;\n\n  _sort(a, compare, lo, mid, aux);\n\n  _sort(a, compare, mid + 1, hi, aux);\n\n  if (compare(a[mid], a[mid + 1]) <= 0) {\n    // left and right are sorted and if the last-left element is less\n    // or equals than the first-right element there is nothing else\n    // to do\n    return;\n  }\n\n  _merge(a, compare, lo, mid, hi, aux);\n}\n\nexport function groupBy(data, compare) {\n  var result = [];\n  var currentGroup = undefined;\n\n  for (var _i = 0, _a = mergeSort(data.slice(0), compare); _i < _a.length; _i++) {\n    var element = _a[_i];\n\n    if (!currentGroup || compare(currentGroup[0], element) !== 0) {\n      currentGroup = [element];\n      result.push(currentGroup);\n    } else {\n      currentGroup.push(element);\n    }\n  }\n\n  return result;\n}\n/**\n * @returns a new array with all falsy values removed. The original array IS NOT modified.\n */\n\nexport function coalesce(array) {\n  if (!array) {\n    return array;\n  }\n\n  return array.filter(function (e) {\n    return !!e;\n  });\n}\n/**\n * @returns false if the provided object is an array and not empty.\n */\n\nexport function isFalsyOrEmpty(obj) {\n  return !Array.isArray(obj) || obj.length === 0;\n}\n/**\n * @returns True if the provided object is an array and has at least one element.\n */\n\nexport function isNonEmptyArray(obj) {\n  return Array.isArray(obj) && obj.length > 0;\n}\n/**\n * Removes duplicates from the given array. The optional keyFn allows to specify\n * how elements are checked for equalness by returning a unique string for each.\n */\n\nexport function distinct(array, keyFn) {\n  if (!keyFn) {\n    return array.filter(function (element, position) {\n      return array.indexOf(element) === position;\n    });\n  }\n\n  var seen = Object.create(null);\n  return array.filter(function (elem) {\n    var key = keyFn(elem);\n\n    if (seen[key]) {\n      return false;\n    }\n\n    seen[key] = true;\n    return true;\n  });\n}\nexport function firstIndex(array, fn) {\n  for (var i = 0; i < array.length; i++) {\n    var element = array[i];\n\n    if (fn(element)) {\n      return i;\n    }\n  }\n\n  return -1;\n}\nexport function first(array, fn, notFoundValue) {\n  if (notFoundValue === void 0) {\n    notFoundValue = null;\n  }\n\n  var index = firstIndex(array, fn);\n  return index < 0 ? notFoundValue : array[index];\n}\nexport function flatten(arr) {\n  var _a;\n\n  return (_a = []).concat.apply(_a, arr);\n}\nexport function range(arg, to) {\n  var from = typeof to === 'number' ? arg : 0;\n\n  if (typeof to === 'number') {\n    from = arg;\n  } else {\n    from = 0;\n    to = arg;\n  }\n\n  var result = [];\n\n  if (from <= to) {\n    for (var i = from; i < to; i++) {\n      result.push(i);\n    }\n  } else {\n    for (var i = from; i > to; i--) {\n      result.push(i);\n    }\n  }\n\n  return result;\n}\n/**\n * Insert `insertArr` inside `target` at `insertIndex`.\n * Please don't touch unless you understand https://jsperf.com/inserting-an-array-within-an-array\n */\n\nexport function arrayInsert(target, insertIndex, insertArr) {\n  var before = target.slice(0, insertIndex);\n  var after = target.slice(insertIndex);\n  return before.concat(insertArr, after);\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n/**\n * Represents information about a specific difference between two sequences.\n */\nvar DiffChange =\n/** @class */\nfunction () {\n  /**\n   * Constructs a new DiffChange with the given sequence information\n   * and content.\n   */\n  function DiffChange(originalStart, originalLength, modifiedStart, modifiedLength) {\n    //Debug.Assert(originalLength > 0 || modifiedLength > 0, \"originalLength and modifiedLength cannot both be <= 0\");\n    this.originalStart = originalStart;\n    this.originalLength = originalLength;\n    this.modifiedStart = modifiedStart;\n    this.modifiedLength = modifiedLength;\n  }\n  /**\n   * The end point (exclusive) of the change in the original sequence.\n   */\n\n\n  DiffChange.prototype.getOriginalEnd = function () {\n    return this.originalStart + this.originalLength;\n  };\n  /**\n   * The end point (exclusive) of the change in the modified sequence.\n   */\n\n\n  DiffChange.prototype.getModifiedEnd = function () {\n    return this.modifiedStart + this.modifiedLength;\n  };\n\n  return DiffChange;\n}();\n\nexport { DiffChange };","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { DiffChange } from './diffChange.js';\n\nfunction createStringSequence(a) {\n  return {\n    getLength: function getLength() {\n      return a.length;\n    },\n    getElementAtIndex: function getElementAtIndex(pos) {\n      return a.charCodeAt(pos);\n    }\n  };\n}\n\nexport function stringDiff(original, modified, pretty) {\n  return new LcsDiff(createStringSequence(original), createStringSequence(modified)).ComputeDiff(pretty);\n} //\n// The code below has been ported from a C# implementation in VS\n//\n\nvar Debug =\n/** @class */\nfunction () {\n  function Debug() {}\n\n  Debug.Assert = function (condition, message) {\n    if (!condition) {\n      throw new Error(message);\n    }\n  };\n\n  return Debug;\n}();\n\nexport { Debug };\n\nvar MyArray =\n/** @class */\nfunction () {\n  function MyArray() {}\n  /**\n   * Copies a range of elements from an Array starting at the specified source index and pastes\n   * them to another Array starting at the specified destination index. The length and the indexes\n   * are specified as 64-bit integers.\n   * sourceArray:\n   *\t\tThe Array that contains the data to copy.\n   * sourceIndex:\n   *\t\tA 64-bit integer that represents the index in the sourceArray at which copying begins.\n   * destinationArray:\n   *\t\tThe Array that receives the data.\n   * destinationIndex:\n   *\t\tA 64-bit integer that represents the index in the destinationArray at which storing begins.\n   * length:\n   *\t\tA 64-bit integer that represents the number of elements to copy.\n   */\n\n\n  MyArray.Copy = function (sourceArray, sourceIndex, destinationArray, destinationIndex, length) {\n    for (var i = 0; i < length; i++) {\n      destinationArray[destinationIndex + i] = sourceArray[sourceIndex + i];\n    }\n  };\n\n  return MyArray;\n}();\n\nexport { MyArray }; //*****************************************************************************\n// LcsDiff.cs\n//\n// An implementation of the difference algorithm described in\n// \"An O(ND) Difference Algorithm and its variations\" by Eugene W. Myers\n//\n// Copyright (C) 2008 Microsoft Corporation @minifier_do_not_preserve\n//*****************************************************************************\n// Our total memory usage for storing history is (worst-case):\n// 2 * [(MaxDifferencesHistory + 1) * (MaxDifferencesHistory + 1) - 1] * sizeof(int)\n// 2 * [1448*1448 - 1] * 4 = 16773624 = 16MB\n\nvar MaxDifferencesHistory = 1447; //let MaxDifferencesHistory = 100;\n\n/**\n * A utility class which helps to create the set of DiffChanges from\n * a difference operation. This class accepts original DiffElements and\n * modified DiffElements that are involved in a particular change. The\n * MarktNextChange() method can be called to mark the separation between\n * distinct changes. At the end, the Changes property can be called to retrieve\n * the constructed changes.\n */\n\nvar DiffChangeHelper =\n/** @class */\nfunction () {\n  /**\n   * Constructs a new DiffChangeHelper for the given DiffSequences.\n   */\n  function DiffChangeHelper() {\n    this.m_changes = [];\n    this.m_originalStart = Number.MAX_VALUE;\n    this.m_modifiedStart = Number.MAX_VALUE;\n    this.m_originalCount = 0;\n    this.m_modifiedCount = 0;\n  }\n  /**\n   * Marks the beginning of the next change in the set of differences.\n   */\n\n\n  DiffChangeHelper.prototype.MarkNextChange = function () {\n    // Only add to the list if there is something to add\n    if (this.m_originalCount > 0 || this.m_modifiedCount > 0) {\n      // Add the new change to our list\n      this.m_changes.push(new DiffChange(this.m_originalStart, this.m_originalCount, this.m_modifiedStart, this.m_modifiedCount));\n    } // Reset for the next change\n\n\n    this.m_originalCount = 0;\n    this.m_modifiedCount = 0;\n    this.m_originalStart = Number.MAX_VALUE;\n    this.m_modifiedStart = Number.MAX_VALUE;\n  };\n  /**\n   * Adds the original element at the given position to the elements\n   * affected by the current change. The modified index gives context\n   * to the change position with respect to the original sequence.\n   * @param originalIndex The index of the original element to add.\n   * @param modifiedIndex The index of the modified element that provides corresponding position in the modified sequence.\n   */\n\n\n  DiffChangeHelper.prototype.AddOriginalElement = function (originalIndex, modifiedIndex) {\n    // The 'true' start index is the smallest of the ones we've seen\n    this.m_originalStart = Math.min(this.m_originalStart, originalIndex);\n    this.m_modifiedStart = Math.min(this.m_modifiedStart, modifiedIndex);\n    this.m_originalCount++;\n  };\n  /**\n   * Adds the modified element at the given position to the elements\n   * affected by the current change. The original index gives context\n   * to the change position with respect to the modified sequence.\n   * @param originalIndex The index of the original element that provides corresponding position in the original sequence.\n   * @param modifiedIndex The index of the modified element to add.\n   */\n\n\n  DiffChangeHelper.prototype.AddModifiedElement = function (originalIndex, modifiedIndex) {\n    // The 'true' start index is the smallest of the ones we've seen\n    this.m_originalStart = Math.min(this.m_originalStart, originalIndex);\n    this.m_modifiedStart = Math.min(this.m_modifiedStart, modifiedIndex);\n    this.m_modifiedCount++;\n  };\n  /**\n   * Retrieves all of the changes marked by the class.\n   */\n\n\n  DiffChangeHelper.prototype.getChanges = function () {\n    if (this.m_originalCount > 0 || this.m_modifiedCount > 0) {\n      // Finish up on whatever is left\n      this.MarkNextChange();\n    }\n\n    return this.m_changes;\n  };\n  /**\n   * Retrieves all of the changes marked by the class in the reverse order\n   */\n\n\n  DiffChangeHelper.prototype.getReverseChanges = function () {\n    if (this.m_originalCount > 0 || this.m_modifiedCount > 0) {\n      // Finish up on whatever is left\n      this.MarkNextChange();\n    }\n\n    this.m_changes.reverse();\n    return this.m_changes;\n  };\n\n  return DiffChangeHelper;\n}();\n/**\n * An implementation of the difference algorithm described in\n * \"An O(ND) Difference Algorithm and its variations\" by Eugene W. Myers\n */\n\n\nvar LcsDiff =\n/** @class */\nfunction () {\n  /**\n   * Constructs the DiffFinder\n   */\n  function LcsDiff(originalSequence, newSequence, continueProcessingPredicate) {\n    if (continueProcessingPredicate === void 0) {\n      continueProcessingPredicate = null;\n    }\n\n    this.OriginalSequence = originalSequence;\n    this.ModifiedSequence = newSequence;\n    this.ContinueProcessingPredicate = continueProcessingPredicate;\n    this.m_forwardHistory = [];\n    this.m_reverseHistory = [];\n  }\n\n  LcsDiff.prototype.ElementsAreEqual = function (originalIndex, newIndex) {\n    return this.OriginalSequence.getElementAtIndex(originalIndex) === this.ModifiedSequence.getElementAtIndex(newIndex);\n  };\n\n  LcsDiff.prototype.OriginalElementsAreEqual = function (index1, index2) {\n    return this.OriginalSequence.getElementAtIndex(index1) === this.OriginalSequence.getElementAtIndex(index2);\n  };\n\n  LcsDiff.prototype.ModifiedElementsAreEqual = function (index1, index2) {\n    return this.ModifiedSequence.getElementAtIndex(index1) === this.ModifiedSequence.getElementAtIndex(index2);\n  };\n\n  LcsDiff.prototype.ComputeDiff = function (pretty) {\n    return this._ComputeDiff(0, this.OriginalSequence.getLength() - 1, 0, this.ModifiedSequence.getLength() - 1, pretty);\n  };\n  /**\n   * Computes the differences between the original and modified input\n   * sequences on the bounded range.\n   * @returns An array of the differences between the two input sequences.\n   */\n\n\n  LcsDiff.prototype._ComputeDiff = function (originalStart, originalEnd, modifiedStart, modifiedEnd, pretty) {\n    var quitEarlyArr = [false];\n    var changes = this.ComputeDiffRecursive(originalStart, originalEnd, modifiedStart, modifiedEnd, quitEarlyArr);\n\n    if (pretty) {\n      // We have to clean up the computed diff to be more intuitive\n      // but it turns out this cannot be done correctly until the entire set\n      // of diffs have been computed\n      return this.PrettifyChanges(changes);\n    }\n\n    return changes;\n  };\n  /**\n   * Private helper method which computes the differences on the bounded range\n   * recursively.\n   * @returns An array of the differences between the two input sequences.\n   */\n\n\n  LcsDiff.prototype.ComputeDiffRecursive = function (originalStart, originalEnd, modifiedStart, modifiedEnd, quitEarlyArr) {\n    quitEarlyArr[0] = false; // Find the start of the differences\n\n    while (originalStart <= originalEnd && modifiedStart <= modifiedEnd && this.ElementsAreEqual(originalStart, modifiedStart)) {\n      originalStart++;\n      modifiedStart++;\n    } // Find the end of the differences\n\n\n    while (originalEnd >= originalStart && modifiedEnd >= modifiedStart && this.ElementsAreEqual(originalEnd, modifiedEnd)) {\n      originalEnd--;\n      modifiedEnd--;\n    } // In the special case where we either have all insertions or all deletions or the sequences are identical\n\n\n    if (originalStart > originalEnd || modifiedStart > modifiedEnd) {\n      var changes = void 0;\n\n      if (modifiedStart <= modifiedEnd) {\n        Debug.Assert(originalStart === originalEnd + 1, 'originalStart should only be one more than originalEnd'); // All insertions\n\n        changes = [new DiffChange(originalStart, 0, modifiedStart, modifiedEnd - modifiedStart + 1)];\n      } else if (originalStart <= originalEnd) {\n        Debug.Assert(modifiedStart === modifiedEnd + 1, 'modifiedStart should only be one more than modifiedEnd'); // All deletions\n\n        changes = [new DiffChange(originalStart, originalEnd - originalStart + 1, modifiedStart, 0)];\n      } else {\n        Debug.Assert(originalStart === originalEnd + 1, 'originalStart should only be one more than originalEnd');\n        Debug.Assert(modifiedStart === modifiedEnd + 1, 'modifiedStart should only be one more than modifiedEnd'); // Identical sequences - No differences\n\n        changes = [];\n      }\n\n      return changes;\n    } // This problem can be solved using the Divide-And-Conquer technique.\n\n\n    var midOriginalArr = [0],\n        midModifiedArr = [0];\n    var result = this.ComputeRecursionPoint(originalStart, originalEnd, modifiedStart, modifiedEnd, midOriginalArr, midModifiedArr, quitEarlyArr);\n    var midOriginal = midOriginalArr[0];\n    var midModified = midModifiedArr[0];\n\n    if (result !== null) {\n      // Result is not-null when there was enough memory to compute the changes while\n      // searching for the recursion point\n      return result;\n    } else if (!quitEarlyArr[0]) {\n      // We can break the problem down recursively by finding the changes in the\n      // First Half:   (originalStart, modifiedStart) to (midOriginal, midModified)\n      // Second Half:  (midOriginal + 1, minModified + 1) to (originalEnd, modifiedEnd)\n      // NOTE: ComputeDiff() is inclusive, therefore the second range starts on the next point\n      var leftChanges = this.ComputeDiffRecursive(originalStart, midOriginal, modifiedStart, midModified, quitEarlyArr);\n      var rightChanges = [];\n\n      if (!quitEarlyArr[0]) {\n        rightChanges = this.ComputeDiffRecursive(midOriginal + 1, originalEnd, midModified + 1, modifiedEnd, quitEarlyArr);\n      } else {\n        // We did't have time to finish the first half, so we don't have time to compute this half.\n        // Consider the entire rest of the sequence different.\n        rightChanges = [new DiffChange(midOriginal + 1, originalEnd - (midOriginal + 1) + 1, midModified + 1, modifiedEnd - (midModified + 1) + 1)];\n      }\n\n      return this.ConcatenateChanges(leftChanges, rightChanges);\n    } // If we hit here, we quit early, and so can't return anything meaningful\n\n\n    return [new DiffChange(originalStart, originalEnd - originalStart + 1, modifiedStart, modifiedEnd - modifiedStart + 1)];\n  };\n\n  LcsDiff.prototype.WALKTRACE = function (diagonalForwardBase, diagonalForwardStart, diagonalForwardEnd, diagonalForwardOffset, diagonalReverseBase, diagonalReverseStart, diagonalReverseEnd, diagonalReverseOffset, forwardPoints, reversePoints, originalIndex, originalEnd, midOriginalArr, modifiedIndex, modifiedEnd, midModifiedArr, deltaIsEven, quitEarlyArr) {\n    var forwardChanges = null,\n        reverseChanges = null; // First, walk backward through the forward diagonals history\n\n    var changeHelper = new DiffChangeHelper();\n    var diagonalMin = diagonalForwardStart;\n    var diagonalMax = diagonalForwardEnd;\n    var diagonalRelative = midOriginalArr[0] - midModifiedArr[0] - diagonalForwardOffset;\n    var lastOriginalIndex = Number.MIN_VALUE;\n    var historyIndex = this.m_forwardHistory.length - 1;\n    var diagonal;\n\n    do {\n      // Get the diagonal index from the relative diagonal number\n      diagonal = diagonalRelative + diagonalForwardBase; // Figure out where we came from\n\n      if (diagonal === diagonalMin || diagonal < diagonalMax && forwardPoints[diagonal - 1] < forwardPoints[diagonal + 1]) {\n        // Vertical line (the element is an insert)\n        originalIndex = forwardPoints[diagonal + 1];\n        modifiedIndex = originalIndex - diagonalRelative - diagonalForwardOffset;\n\n        if (originalIndex < lastOriginalIndex) {\n          changeHelper.MarkNextChange();\n        }\n\n        lastOriginalIndex = originalIndex;\n        changeHelper.AddModifiedElement(originalIndex + 1, modifiedIndex);\n        diagonalRelative = diagonal + 1 - diagonalForwardBase; //Setup for the next iteration\n      } else {\n        // Horizontal line (the element is a deletion)\n        originalIndex = forwardPoints[diagonal - 1] + 1;\n        modifiedIndex = originalIndex - diagonalRelative - diagonalForwardOffset;\n\n        if (originalIndex < lastOriginalIndex) {\n          changeHelper.MarkNextChange();\n        }\n\n        lastOriginalIndex = originalIndex - 1;\n        changeHelper.AddOriginalElement(originalIndex, modifiedIndex + 1);\n        diagonalRelative = diagonal - 1 - diagonalForwardBase; //Setup for the next iteration\n      }\n\n      if (historyIndex >= 0) {\n        forwardPoints = this.m_forwardHistory[historyIndex];\n        diagonalForwardBase = forwardPoints[0]; //We stored this in the first spot\n\n        diagonalMin = 1;\n        diagonalMax = forwardPoints.length - 1;\n      }\n    } while (--historyIndex >= -1); // Ironically, we get the forward changes as the reverse of the\n    // order we added them since we technically added them backwards\n\n\n    forwardChanges = changeHelper.getReverseChanges();\n\n    if (quitEarlyArr[0]) {\n      // TODO: Calculate a partial from the reverse diagonals.\n      //       For now, just assume everything after the midOriginal/midModified point is a diff\n      var originalStartPoint = midOriginalArr[0] + 1;\n      var modifiedStartPoint = midModifiedArr[0] + 1;\n\n      if (forwardChanges !== null && forwardChanges.length > 0) {\n        var lastForwardChange = forwardChanges[forwardChanges.length - 1];\n        originalStartPoint = Math.max(originalStartPoint, lastForwardChange.getOriginalEnd());\n        modifiedStartPoint = Math.max(modifiedStartPoint, lastForwardChange.getModifiedEnd());\n      }\n\n      reverseChanges = [new DiffChange(originalStartPoint, originalEnd - originalStartPoint + 1, modifiedStartPoint, modifiedEnd - modifiedStartPoint + 1)];\n    } else {\n      // Now walk backward through the reverse diagonals history\n      changeHelper = new DiffChangeHelper();\n      diagonalMin = diagonalReverseStart;\n      diagonalMax = diagonalReverseEnd;\n      diagonalRelative = midOriginalArr[0] - midModifiedArr[0] - diagonalReverseOffset;\n      lastOriginalIndex = Number.MAX_VALUE;\n      historyIndex = deltaIsEven ? this.m_reverseHistory.length - 1 : this.m_reverseHistory.length - 2;\n\n      do {\n        // Get the diagonal index from the relative diagonal number\n        diagonal = diagonalRelative + diagonalReverseBase; // Figure out where we came from\n\n        if (diagonal === diagonalMin || diagonal < diagonalMax && reversePoints[diagonal - 1] >= reversePoints[diagonal + 1]) {\n          // Horizontal line (the element is a deletion))\n          originalIndex = reversePoints[diagonal + 1] - 1;\n          modifiedIndex = originalIndex - diagonalRelative - diagonalReverseOffset;\n\n          if (originalIndex > lastOriginalIndex) {\n            changeHelper.MarkNextChange();\n          }\n\n          lastOriginalIndex = originalIndex + 1;\n          changeHelper.AddOriginalElement(originalIndex + 1, modifiedIndex + 1);\n          diagonalRelative = diagonal + 1 - diagonalReverseBase; //Setup for the next iteration\n        } else {\n          // Vertical line (the element is an insertion)\n          originalIndex = reversePoints[diagonal - 1];\n          modifiedIndex = originalIndex - diagonalRelative - diagonalReverseOffset;\n\n          if (originalIndex > lastOriginalIndex) {\n            changeHelper.MarkNextChange();\n          }\n\n          lastOriginalIndex = originalIndex;\n          changeHelper.AddModifiedElement(originalIndex + 1, modifiedIndex + 1);\n          diagonalRelative = diagonal - 1 - diagonalReverseBase; //Setup for the next iteration\n        }\n\n        if (historyIndex >= 0) {\n          reversePoints = this.m_reverseHistory[historyIndex];\n          diagonalReverseBase = reversePoints[0]; //We stored this in the first spot\n\n          diagonalMin = 1;\n          diagonalMax = reversePoints.length - 1;\n        }\n      } while (--historyIndex >= -1); // There are cases where the reverse history will find diffs that\n      // are correct, but not intuitive, so we need shift them.\n\n\n      reverseChanges = changeHelper.getChanges();\n    }\n\n    return this.ConcatenateChanges(forwardChanges, reverseChanges);\n  };\n  /**\n   * Given the range to compute the diff on, this method finds the point:\n   * (midOriginal, midModified)\n   * that exists in the middle of the LCS of the two sequences and\n   * is the point at which the LCS problem may be broken down recursively.\n   * This method will try to keep the LCS trace in memory. If the LCS recursion\n   * point is calculated and the full trace is available in memory, then this method\n   * will return the change list.\n   * @param originalStart The start bound of the original sequence range\n   * @param originalEnd The end bound of the original sequence range\n   * @param modifiedStart The start bound of the modified sequence range\n   * @param modifiedEnd The end bound of the modified sequence range\n   * @param midOriginal The middle point of the original sequence range\n   * @param midModified The middle point of the modified sequence range\n   * @returns The diff changes, if available, otherwise null\n   */\n\n\n  LcsDiff.prototype.ComputeRecursionPoint = function (originalStart, originalEnd, modifiedStart, modifiedEnd, midOriginalArr, midModifiedArr, quitEarlyArr) {\n    var originalIndex = 0,\n        modifiedIndex = 0;\n    var diagonalForwardStart = 0,\n        diagonalForwardEnd = 0;\n    var diagonalReverseStart = 0,\n        diagonalReverseEnd = 0;\n    var numDifferences; // To traverse the edit graph and produce the proper LCS, our actual\n    // start position is just outside the given boundary\n\n    originalStart--;\n    modifiedStart--; // We set these up to make the compiler happy, but they will\n    // be replaced before we return with the actual recursion point\n\n    midOriginalArr[0] = 0;\n    midModifiedArr[0] = 0; // Clear out the history\n\n    this.m_forwardHistory = [];\n    this.m_reverseHistory = []; // Each cell in the two arrays corresponds to a diagonal in the edit graph.\n    // The integer value in the cell represents the originalIndex of the furthest\n    // reaching point found so far that ends in that diagonal.\n    // The modifiedIndex can be computed mathematically from the originalIndex and the diagonal number.\n\n    var maxDifferences = originalEnd - originalStart + (modifiedEnd - modifiedStart);\n    var numDiagonals = maxDifferences + 1;\n    var forwardPoints = new Array(numDiagonals);\n    var reversePoints = new Array(numDiagonals); // diagonalForwardBase: Index into forwardPoints of the diagonal which passes through (originalStart, modifiedStart)\n    // diagonalReverseBase: Index into reversePoints of the diagonal which passes through (originalEnd, modifiedEnd)\n\n    var diagonalForwardBase = modifiedEnd - modifiedStart;\n    var diagonalReverseBase = originalEnd - originalStart; // diagonalForwardOffset: Geometric offset which allows modifiedIndex to be computed from originalIndex and the\n    //    diagonal number (relative to diagonalForwardBase)\n    // diagonalReverseOffset: Geometric offset which allows modifiedIndex to be computed from originalIndex and the\n    //    diagonal number (relative to diagonalReverseBase)\n\n    var diagonalForwardOffset = originalStart - modifiedStart;\n    var diagonalReverseOffset = originalEnd - modifiedEnd; // delta: The difference between the end diagonal and the start diagonal. This is used to relate diagonal numbers\n    //   relative to the start diagonal with diagonal numbers relative to the end diagonal.\n    // The Even/Oddn-ness of this delta is important for determining when we should check for overlap\n\n    var delta = diagonalReverseBase - diagonalForwardBase;\n    var deltaIsEven = delta % 2 === 0; // Here we set up the start and end points as the furthest points found so far\n    // in both the forward and reverse directions, respectively\n\n    forwardPoints[diagonalForwardBase] = originalStart;\n    reversePoints[diagonalReverseBase] = originalEnd; // Remember if we quit early, and thus need to do a best-effort result instead of a real result.\n\n    quitEarlyArr[0] = false; // A couple of points:\n    // --With this method, we iterate on the number of differences between the two sequences.\n    //   The more differences there actually are, the longer this will take.\n    // --Also, as the number of differences increases, we have to search on diagonals further\n    //   away from the reference diagonal (which is diagonalForwardBase for forward, diagonalReverseBase for reverse).\n    // --We extend on even diagonals (relative to the reference diagonal) only when numDifferences\n    //   is even and odd diagonals only when numDifferences is odd.\n\n    var diagonal, tempOriginalIndex;\n\n    for (numDifferences = 1; numDifferences <= maxDifferences / 2 + 1; numDifferences++) {\n      var furthestOriginalIndex = 0;\n      var furthestModifiedIndex = 0; // Run the algorithm in the forward direction\n\n      diagonalForwardStart = this.ClipDiagonalBound(diagonalForwardBase - numDifferences, numDifferences, diagonalForwardBase, numDiagonals);\n      diagonalForwardEnd = this.ClipDiagonalBound(diagonalForwardBase + numDifferences, numDifferences, diagonalForwardBase, numDiagonals);\n\n      for (diagonal = diagonalForwardStart; diagonal <= diagonalForwardEnd; diagonal += 2) {\n        // STEP 1: We extend the furthest reaching point in the present diagonal\n        // by looking at the diagonals above and below and picking the one whose point\n        // is further away from the start point (originalStart, modifiedStart)\n        if (diagonal === diagonalForwardStart || diagonal < diagonalForwardEnd && forwardPoints[diagonal - 1] < forwardPoints[diagonal + 1]) {\n          originalIndex = forwardPoints[diagonal + 1];\n        } else {\n          originalIndex = forwardPoints[diagonal - 1] + 1;\n        }\n\n        modifiedIndex = originalIndex - (diagonal - diagonalForwardBase) - diagonalForwardOffset; // Save the current originalIndex so we can test for false overlap in step 3\n\n        tempOriginalIndex = originalIndex; // STEP 2: We can continue to extend the furthest reaching point in the present diagonal\n        // so long as the elements are equal.\n\n        while (originalIndex < originalEnd && modifiedIndex < modifiedEnd && this.ElementsAreEqual(originalIndex + 1, modifiedIndex + 1)) {\n          originalIndex++;\n          modifiedIndex++;\n        }\n\n        forwardPoints[diagonal] = originalIndex;\n\n        if (originalIndex + modifiedIndex > furthestOriginalIndex + furthestModifiedIndex) {\n          furthestOriginalIndex = originalIndex;\n          furthestModifiedIndex = modifiedIndex;\n        } // STEP 3: If delta is odd (overlap first happens on forward when delta is odd)\n        // and diagonal is in the range of reverse diagonals computed for numDifferences-1\n        // (the previous iteration; we haven't computed reverse diagonals for numDifferences yet)\n        // then check for overlap.\n\n\n        if (!deltaIsEven && Math.abs(diagonal - diagonalReverseBase) <= numDifferences - 1) {\n          if (originalIndex >= reversePoints[diagonal]) {\n            midOriginalArr[0] = originalIndex;\n            midModifiedArr[0] = modifiedIndex;\n\n            if (tempOriginalIndex <= reversePoints[diagonal] && MaxDifferencesHistory > 0 && numDifferences <= MaxDifferencesHistory + 1) {\n              // BINGO! We overlapped, and we have the full trace in memory!\n              return this.WALKTRACE(diagonalForwardBase, diagonalForwardStart, diagonalForwardEnd, diagonalForwardOffset, diagonalReverseBase, diagonalReverseStart, diagonalReverseEnd, diagonalReverseOffset, forwardPoints, reversePoints, originalIndex, originalEnd, midOriginalArr, modifiedIndex, modifiedEnd, midModifiedArr, deltaIsEven, quitEarlyArr);\n            } else {\n              // Either false overlap, or we didn't have enough memory for the full trace\n              // Just return the recursion point\n              return null;\n            }\n          }\n        }\n      } // Check to see if we should be quitting early, before moving on to the next iteration.\n\n\n      var matchLengthOfLongest = (furthestOriginalIndex - originalStart + (furthestModifiedIndex - modifiedStart) - numDifferences) / 2;\n\n      if (this.ContinueProcessingPredicate !== null && !this.ContinueProcessingPredicate(furthestOriginalIndex, this.OriginalSequence, matchLengthOfLongest)) {\n        // We can't finish, so skip ahead to generating a result from what we have.\n        quitEarlyArr[0] = true; // Use the furthest distance we got in the forward direction.\n\n        midOriginalArr[0] = furthestOriginalIndex;\n        midModifiedArr[0] = furthestModifiedIndex;\n\n        if (matchLengthOfLongest > 0 && MaxDifferencesHistory > 0 && numDifferences <= MaxDifferencesHistory + 1) {\n          // Enough of the history is in memory to walk it backwards\n          return this.WALKTRACE(diagonalForwardBase, diagonalForwardStart, diagonalForwardEnd, diagonalForwardOffset, diagonalReverseBase, diagonalReverseStart, diagonalReverseEnd, diagonalReverseOffset, forwardPoints, reversePoints, originalIndex, originalEnd, midOriginalArr, modifiedIndex, modifiedEnd, midModifiedArr, deltaIsEven, quitEarlyArr);\n        } else {\n          // We didn't actually remember enough of the history.\n          //Since we are quiting the diff early, we need to shift back the originalStart and modified start\n          //back into the boundary limits since we decremented their value above beyond the boundary limit.\n          originalStart++;\n          modifiedStart++;\n          return [new DiffChange(originalStart, originalEnd - originalStart + 1, modifiedStart, modifiedEnd - modifiedStart + 1)];\n        }\n      } // Run the algorithm in the reverse direction\n\n\n      diagonalReverseStart = this.ClipDiagonalBound(diagonalReverseBase - numDifferences, numDifferences, diagonalReverseBase, numDiagonals);\n      diagonalReverseEnd = this.ClipDiagonalBound(diagonalReverseBase + numDifferences, numDifferences, diagonalReverseBase, numDiagonals);\n\n      for (diagonal = diagonalReverseStart; diagonal <= diagonalReverseEnd; diagonal += 2) {\n        // STEP 1: We extend the furthest reaching point in the present diagonal\n        // by looking at the diagonals above and below and picking the one whose point\n        // is further away from the start point (originalEnd, modifiedEnd)\n        if (diagonal === diagonalReverseStart || diagonal < diagonalReverseEnd && reversePoints[diagonal - 1] >= reversePoints[diagonal + 1]) {\n          originalIndex = reversePoints[diagonal + 1] - 1;\n        } else {\n          originalIndex = reversePoints[diagonal - 1];\n        }\n\n        modifiedIndex = originalIndex - (diagonal - diagonalReverseBase) - diagonalReverseOffset; // Save the current originalIndex so we can test for false overlap\n\n        tempOriginalIndex = originalIndex; // STEP 2: We can continue to extend the furthest reaching point in the present diagonal\n        // as long as the elements are equal.\n\n        while (originalIndex > originalStart && modifiedIndex > modifiedStart && this.ElementsAreEqual(originalIndex, modifiedIndex)) {\n          originalIndex--;\n          modifiedIndex--;\n        }\n\n        reversePoints[diagonal] = originalIndex; // STEP 4: If delta is even (overlap first happens on reverse when delta is even)\n        // and diagonal is in the range of forward diagonals computed for numDifferences\n        // then check for overlap.\n\n        if (deltaIsEven && Math.abs(diagonal - diagonalForwardBase) <= numDifferences) {\n          if (originalIndex <= forwardPoints[diagonal]) {\n            midOriginalArr[0] = originalIndex;\n            midModifiedArr[0] = modifiedIndex;\n\n            if (tempOriginalIndex >= forwardPoints[diagonal] && MaxDifferencesHistory > 0 && numDifferences <= MaxDifferencesHistory + 1) {\n              // BINGO! We overlapped, and we have the full trace in memory!\n              return this.WALKTRACE(diagonalForwardBase, diagonalForwardStart, diagonalForwardEnd, diagonalForwardOffset, diagonalReverseBase, diagonalReverseStart, diagonalReverseEnd, diagonalReverseOffset, forwardPoints, reversePoints, originalIndex, originalEnd, midOriginalArr, modifiedIndex, modifiedEnd, midModifiedArr, deltaIsEven, quitEarlyArr);\n            } else {\n              // Either false overlap, or we didn't have enough memory for the full trace\n              // Just return the recursion point\n              return null;\n            }\n          }\n        }\n      } // Save current vectors to history before the next iteration\n\n\n      if (numDifferences <= MaxDifferencesHistory) {\n        // We are allocating space for one extra int, which we fill with\n        // the index of the diagonal base index\n        var temp = new Array(diagonalForwardEnd - diagonalForwardStart + 2);\n        temp[0] = diagonalForwardBase - diagonalForwardStart + 1;\n        MyArray.Copy(forwardPoints, diagonalForwardStart, temp, 1, diagonalForwardEnd - diagonalForwardStart + 1);\n        this.m_forwardHistory.push(temp);\n        temp = new Array(diagonalReverseEnd - diagonalReverseStart + 2);\n        temp[0] = diagonalReverseBase - diagonalReverseStart + 1;\n        MyArray.Copy(reversePoints, diagonalReverseStart, temp, 1, diagonalReverseEnd - diagonalReverseStart + 1);\n        this.m_reverseHistory.push(temp);\n      }\n    } // If we got here, then we have the full trace in history. We just have to convert it to a change list\n    // NOTE: This part is a bit messy\n\n\n    return this.WALKTRACE(diagonalForwardBase, diagonalForwardStart, diagonalForwardEnd, diagonalForwardOffset, diagonalReverseBase, diagonalReverseStart, diagonalReverseEnd, diagonalReverseOffset, forwardPoints, reversePoints, originalIndex, originalEnd, midOriginalArr, modifiedIndex, modifiedEnd, midModifiedArr, deltaIsEven, quitEarlyArr);\n  };\n  /**\n   * Shifts the given changes to provide a more intuitive diff.\n   * While the first element in a diff matches the first element after the diff,\n   * we shift the diff down.\n   *\n   * @param changes The list of changes to shift\n   * @returns The shifted changes\n   */\n\n\n  LcsDiff.prototype.PrettifyChanges = function (changes) {\n    // Shift all the changes down first\n    for (var i = 0; i < changes.length; i++) {\n      var change = changes[i];\n      var originalStop = i < changes.length - 1 ? changes[i + 1].originalStart : this.OriginalSequence.getLength();\n      var modifiedStop = i < changes.length - 1 ? changes[i + 1].modifiedStart : this.ModifiedSequence.getLength();\n      var checkOriginal = change.originalLength > 0;\n      var checkModified = change.modifiedLength > 0;\n\n      while (change.originalStart + change.originalLength < originalStop && change.modifiedStart + change.modifiedLength < modifiedStop && (!checkOriginal || this.OriginalElementsAreEqual(change.originalStart, change.originalStart + change.originalLength)) && (!checkModified || this.ModifiedElementsAreEqual(change.modifiedStart, change.modifiedStart + change.modifiedLength))) {\n        change.originalStart++;\n        change.modifiedStart++;\n      }\n\n      var mergedChangeArr = [null];\n\n      if (i < changes.length - 1 && this.ChangesOverlap(changes[i], changes[i + 1], mergedChangeArr)) {\n        changes[i] = mergedChangeArr[0];\n        changes.splice(i + 1, 1);\n        i--;\n        continue;\n      }\n    } // Shift changes back up until we hit empty or whitespace-only lines\n\n\n    for (var i = changes.length - 1; i >= 0; i--) {\n      var change = changes[i];\n      var originalStop = 0;\n      var modifiedStop = 0;\n\n      if (i > 0) {\n        var prevChange = changes[i - 1];\n\n        if (prevChange.originalLength > 0) {\n          originalStop = prevChange.originalStart + prevChange.originalLength;\n        }\n\n        if (prevChange.modifiedLength > 0) {\n          modifiedStop = prevChange.modifiedStart + prevChange.modifiedLength;\n        }\n      }\n\n      var checkOriginal = change.originalLength > 0;\n      var checkModified = change.modifiedLength > 0;\n      var bestDelta = 0;\n\n      var bestScore = this._boundaryScore(change.originalStart, change.originalLength, change.modifiedStart, change.modifiedLength);\n\n      for (var delta = 1;; delta++) {\n        var originalStart = change.originalStart - delta;\n        var modifiedStart = change.modifiedStart - delta;\n\n        if (originalStart < originalStop || modifiedStart < modifiedStop) {\n          break;\n        }\n\n        if (checkOriginal && !this.OriginalElementsAreEqual(originalStart, originalStart + change.originalLength)) {\n          break;\n        }\n\n        if (checkModified && !this.ModifiedElementsAreEqual(modifiedStart, modifiedStart + change.modifiedLength)) {\n          break;\n        }\n\n        var score = this._boundaryScore(originalStart, change.originalLength, modifiedStart, change.modifiedLength);\n\n        if (score > bestScore) {\n          bestScore = score;\n          bestDelta = delta;\n        }\n      }\n\n      change.originalStart -= bestDelta;\n      change.modifiedStart -= bestDelta;\n    }\n\n    return changes;\n  };\n\n  LcsDiff.prototype._OriginalIsBoundary = function (index) {\n    if (index <= 0 || index >= this.OriginalSequence.getLength() - 1) {\n      return true;\n    }\n\n    var element = this.OriginalSequence.getElementAtIndex(index);\n    return typeof element === 'string' && /^\\s*$/.test(element);\n  };\n\n  LcsDiff.prototype._OriginalRegionIsBoundary = function (originalStart, originalLength) {\n    if (this._OriginalIsBoundary(originalStart) || this._OriginalIsBoundary(originalStart - 1)) {\n      return true;\n    }\n\n    if (originalLength > 0) {\n      var originalEnd = originalStart + originalLength;\n\n      if (this._OriginalIsBoundary(originalEnd - 1) || this._OriginalIsBoundary(originalEnd)) {\n        return true;\n      }\n    }\n\n    return false;\n  };\n\n  LcsDiff.prototype._ModifiedIsBoundary = function (index) {\n    if (index <= 0 || index >= this.ModifiedSequence.getLength() - 1) {\n      return true;\n    }\n\n    var element = this.ModifiedSequence.getElementAtIndex(index);\n    return typeof element === 'string' && /^\\s*$/.test(element);\n  };\n\n  LcsDiff.prototype._ModifiedRegionIsBoundary = function (modifiedStart, modifiedLength) {\n    if (this._ModifiedIsBoundary(modifiedStart) || this._ModifiedIsBoundary(modifiedStart - 1)) {\n      return true;\n    }\n\n    if (modifiedLength > 0) {\n      var modifiedEnd = modifiedStart + modifiedLength;\n\n      if (this._ModifiedIsBoundary(modifiedEnd - 1) || this._ModifiedIsBoundary(modifiedEnd)) {\n        return true;\n      }\n    }\n\n    return false;\n  };\n\n  LcsDiff.prototype._boundaryScore = function (originalStart, originalLength, modifiedStart, modifiedLength) {\n    var originalScore = this._OriginalRegionIsBoundary(originalStart, originalLength) ? 1 : 0;\n    var modifiedScore = this._ModifiedRegionIsBoundary(modifiedStart, modifiedLength) ? 1 : 0;\n    return originalScore + modifiedScore;\n  };\n  /**\n   * Concatenates the two input DiffChange lists and returns the resulting\n   * list.\n   * @param The left changes\n   * @param The right changes\n   * @returns The concatenated list\n   */\n\n\n  LcsDiff.prototype.ConcatenateChanges = function (left, right) {\n    var mergedChangeArr = [];\n\n    if (left.length === 0 || right.length === 0) {\n      return right.length > 0 ? right : left;\n    } else if (this.ChangesOverlap(left[left.length - 1], right[0], mergedChangeArr)) {\n      // Since we break the problem down recursively, it is possible that we\n      // might recurse in the middle of a change thereby splitting it into\n      // two changes. Here in the combining stage, we detect and fuse those\n      // changes back together\n      var result = new Array(left.length + right.length - 1);\n      MyArray.Copy(left, 0, result, 0, left.length - 1);\n      result[left.length - 1] = mergedChangeArr[0];\n      MyArray.Copy(right, 1, result, left.length, right.length - 1);\n      return result;\n    } else {\n      var result = new Array(left.length + right.length);\n      MyArray.Copy(left, 0, result, 0, left.length);\n      MyArray.Copy(right, 0, result, left.length, right.length);\n      return result;\n    }\n  };\n  /**\n   * Returns true if the two changes overlap and can be merged into a single\n   * change\n   * @param left The left change\n   * @param right The right change\n   * @param mergedChange The merged change if the two overlap, null otherwise\n   * @returns True if the two changes overlap\n   */\n\n\n  LcsDiff.prototype.ChangesOverlap = function (left, right, mergedChangeArr) {\n    Debug.Assert(left.originalStart <= right.originalStart, 'Left change is not less than or equal to right change');\n    Debug.Assert(left.modifiedStart <= right.modifiedStart, 'Left change is not less than or equal to right change');\n\n    if (left.originalStart + left.originalLength >= right.originalStart || left.modifiedStart + left.modifiedLength >= right.modifiedStart) {\n      var originalStart = left.originalStart;\n      var originalLength = left.originalLength;\n      var modifiedStart = left.modifiedStart;\n      var modifiedLength = left.modifiedLength;\n\n      if (left.originalStart + left.originalLength >= right.originalStart) {\n        originalLength = right.originalStart + right.originalLength - left.originalStart;\n      }\n\n      if (left.modifiedStart + left.modifiedLength >= right.modifiedStart) {\n        modifiedLength = right.modifiedStart + right.modifiedLength - left.modifiedStart;\n      }\n\n      mergedChangeArr[0] = new DiffChange(originalStart, originalLength, modifiedStart, modifiedLength);\n      return true;\n    } else {\n      mergedChangeArr[0] = null;\n      return false;\n    }\n  };\n  /**\n   * Helper method used to clip a diagonal index to the range of valid\n   * diagonals. This also decides whether or not the diagonal index,\n   * if it exceeds the boundary, should be clipped to the boundary or clipped\n   * one inside the boundary depending on the Even/Odd status of the boundary\n   * and numDifferences.\n   * @param diagonal The index of the diagonal to clip.\n   * @param numDifferences The current number of differences being iterated upon.\n   * @param diagonalBaseIndex The base reference diagonal.\n   * @param numDiagonals The total number of diagonals.\n   * @returns The clipped diagonal index.\n   */\n\n\n  LcsDiff.prototype.ClipDiagonalBound = function (diagonal, numDifferences, diagonalBaseIndex, numDiagonals) {\n    if (diagonal >= 0 && diagonal < numDiagonals) {\n      // Nothing to clip, its in range\n      return diagonal;\n    } // diagonalsBelow: The number of diagonals below the reference diagonal\n    // diagonalsAbove: The number of diagonals above the reference diagonal\n\n\n    var diagonalsBelow = diagonalBaseIndex;\n    var diagonalsAbove = numDiagonals - diagonalBaseIndex - 1;\n    var diffEven = numDifferences % 2 === 0;\n\n    if (diagonal < 0) {\n      var lowerBoundEven = diagonalsBelow % 2 === 0;\n      return diffEven === lowerBoundEven ? 0 : 1;\n    } else {\n      var upperBoundEven = diagonalsAbove % 2 === 0;\n      return diffEven === upperBoundEven ? numDiagonals - 1 : numDiagonals - 2;\n    }\n  };\n\n  return LcsDiff;\n}();\n\nexport { LcsDiff };","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nexport var FIN = {\n  done: true,\n  value: undefined\n};\nexport var Iterator;\n\n(function (Iterator) {\n  var _empty = {\n    next: function next() {\n      return FIN;\n    }\n  };\n\n  function empty() {\n    return _empty;\n  }\n\n  Iterator.empty = empty;\n\n  function fromArray(array, index, length) {\n    if (index === void 0) {\n      index = 0;\n    }\n\n    if (length === void 0) {\n      length = array.length;\n    }\n\n    return {\n      next: function next() {\n        if (index >= length) {\n          return FIN;\n        }\n\n        return {\n          done: false,\n          value: array[index++]\n        };\n      }\n    };\n  }\n\n  Iterator.fromArray = fromArray;\n\n  function from(elements) {\n    if (!elements) {\n      return Iterator.empty();\n    } else if (Array.isArray(elements)) {\n      return Iterator.fromArray(elements);\n    } else {\n      return elements;\n    }\n  }\n\n  Iterator.from = from;\n\n  function map(iterator, fn) {\n    return {\n      next: function next() {\n        var element = iterator.next();\n\n        if (element.done) {\n          return FIN;\n        } else {\n          return {\n            done: false,\n            value: fn(element.value)\n          };\n        }\n      }\n    };\n  }\n\n  Iterator.map = map;\n\n  function filter(iterator, fn) {\n    return {\n      next: function next() {\n        while (true) {\n          var element = iterator.next();\n\n          if (element.done) {\n            return FIN;\n          }\n\n          if (fn(element.value)) {\n            return {\n              done: false,\n              value: element.value\n            };\n          }\n        }\n      }\n    };\n  }\n\n  Iterator.filter = filter;\n\n  function forEach(iterator, fn) {\n    for (var next = iterator.next(); !next.done; next = iterator.next()) {\n      fn(next.value);\n    }\n  }\n\n  Iterator.forEach = forEach;\n\n  function collect(iterator) {\n    var result = [];\n    forEach(iterator, function (value) {\n      return result.push(value);\n    });\n    return result;\n  }\n\n  Iterator.collect = collect;\n})(Iterator || (Iterator = {}));\n\nexport function getSequenceIterator(arg) {\n  if (Array.isArray(arg)) {\n    return Iterator.fromArray(arg);\n  } else {\n    return arg;\n  }\n}\n\nvar ArrayIterator =\n/** @class */\nfunction () {\n  function ArrayIterator(items, start, end, index) {\n    if (start === void 0) {\n      start = 0;\n    }\n\n    if (end === void 0) {\n      end = items.length;\n    }\n\n    if (index === void 0) {\n      index = start - 1;\n    }\n\n    this.items = items;\n    this.start = start;\n    this.end = end;\n    this.index = index;\n  }\n\n  ArrayIterator.prototype.next = function () {\n    this.index = Math.min(this.index + 1, this.end);\n    return this.current();\n  };\n\n  ArrayIterator.prototype.current = function () {\n    if (this.index === this.start - 1 || this.index === this.end) {\n      return null;\n    }\n\n    return this.items[this.index];\n  };\n\n  return ArrayIterator;\n}();\n\nexport { ArrayIterator };\n\nvar ArrayNavigator =\n/** @class */\nfunction (_super) {\n  __extends(ArrayNavigator, _super);\n\n  function ArrayNavigator(items, start, end, index) {\n    if (start === void 0) {\n      start = 0;\n    }\n\n    if (end === void 0) {\n      end = items.length;\n    }\n\n    if (index === void 0) {\n      index = start - 1;\n    }\n\n    return _super.call(this, items, start, end, index) || this;\n  }\n\n  ArrayNavigator.prototype.current = function () {\n    return _super.prototype.current.call(this);\n  };\n\n  ArrayNavigator.prototype.previous = function () {\n    this.index = Math.max(this.index - 1, this.start - 1);\n    return this.current();\n  };\n\n  ArrayNavigator.prototype.first = function () {\n    this.index = this.start;\n    return this.current();\n  };\n\n  ArrayNavigator.prototype.last = function () {\n    this.index = this.end - 1;\n    return this.current();\n  };\n\n  ArrayNavigator.prototype.parent = function () {\n    return null;\n  };\n\n  return ArrayNavigator;\n}(ArrayIterator);\n\nexport { ArrayNavigator };\n\nvar MappedIterator =\n/** @class */\nfunction () {\n  function MappedIterator(iterator, fn) {\n    this.iterator = iterator;\n    this.fn = fn; // noop\n  }\n\n  MappedIterator.prototype.next = function () {\n    return this.fn(this.iterator.next());\n  };\n\n  return MappedIterator;\n}();\n\nexport { MappedIterator };","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar _a;\n\nimport { isWindows } from './platform.js';\nvar _schemePattern = /^\\w[\\w\\d+.-]*$/;\nvar _singleSlashStart = /^\\//;\nvar _doubleSlashStart = /^\\/\\//;\nvar _throwOnMissingSchema = true;\n\nfunction _validateUri(ret, _strict) {\n  // scheme, must be set\n  if (!ret.scheme) {\n    if (_strict || _throwOnMissingSchema) {\n      throw new Error(\"[UriError]: Scheme is missing: {scheme: \\\"\\\", authority: \\\"\" + ret.authority + \"\\\", path: \\\"\" + ret.path + \"\\\", query: \\\"\" + ret.query + \"\\\", fragment: \\\"\" + ret.fragment + \"\\\"}\");\n    } else {\n      console.warn(\"[UriError]: Scheme is missing: {scheme: \\\"\\\", authority: \\\"\" + ret.authority + \"\\\", path: \\\"\" + ret.path + \"\\\", query: \\\"\" + ret.query + \"\\\", fragment: \\\"\" + ret.fragment + \"\\\"}\");\n    }\n  } // scheme, https://tools.ietf.org/html/rfc3986#section-3.1\n  // ALPHA *( ALPHA / DIGIT / \"+\" / \"-\" / \".\" )\n\n\n  if (ret.scheme && !_schemePattern.test(ret.scheme)) {\n    throw new Error('[UriError]: Scheme contains illegal characters.');\n  } // path, http://tools.ietf.org/html/rfc3986#section-3.3\n  // If a URI contains an authority component, then the path component\n  // must either be empty or begin with a slash (\"/\") character.  If a URI\n  // does not contain an authority component, then the path cannot begin\n  // with two slash characters (\"//\").\n\n\n  if (ret.path) {\n    if (ret.authority) {\n      if (!_singleSlashStart.test(ret.path)) {\n        throw new Error('[UriError]: If a URI contains an authority component, then the path component must either be empty or begin with a slash (\"/\") character');\n      }\n    } else {\n      if (_doubleSlashStart.test(ret.path)) {\n        throw new Error('[UriError]: If a URI does not contain an authority component, then the path cannot begin with two slash characters (\"//\")');\n      }\n    }\n  }\n} // implements a bit of https://tools.ietf.org/html/rfc3986#section-5\n\n\nfunction _referenceResolution(scheme, path) {\n  // the slash-character is our 'default base' as we don't\n  // support constructing URIs relative to other URIs. This\n  // also means that we alter and potentially break paths.\n  // see https://tools.ietf.org/html/rfc3986#section-5.1.4\n  switch (scheme) {\n    case 'https':\n    case 'http':\n    case 'file':\n      if (!path) {\n        path = _slash;\n      } else if (path[0] !== _slash) {\n        path = _slash + path;\n      }\n\n      break;\n  }\n\n  return path;\n}\n\nvar _empty = '';\nvar _slash = '/';\nvar _regexp = /^(([^:/?#]+?):)?(\\/\\/([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?/;\n/**\n * Uniform Resource Identifier (URI) http://tools.ietf.org/html/rfc3986.\n * This class is a simple parser which creates the basic component parts\n * (http://tools.ietf.org/html/rfc3986#section-3) with minimal validation\n * and encoding.\n *\n *       foo://example.com:8042/over/there?name=ferret#nose\n *       \\_/   \\______________/\\_________/ \\_________/ \\__/\n *        |           |            |            |        |\n *     scheme     authority       path        query   fragment\n *        |   _____________________|__\n *       / \\ /                        \\\n *       urn:example:animal:ferret:nose\n */\n\nvar URI =\n/** @class */\nfunction () {\n  /**\n   * @internal\n   */\n  function URI(schemeOrData, authority, path, query, fragment, _strict) {\n    if (typeof schemeOrData === 'object') {\n      this.scheme = schemeOrData.scheme || _empty;\n      this.authority = schemeOrData.authority || _empty;\n      this.path = schemeOrData.path || _empty;\n      this.query = schemeOrData.query || _empty;\n      this.fragment = schemeOrData.fragment || _empty; // no validation because it's this URI\n      // that creates uri components.\n      // _validateUri(this);\n    } else {\n      this.scheme = schemeOrData || _empty;\n      this.authority = authority || _empty;\n      this.path = _referenceResolution(this.scheme, path || _empty);\n      this.query = query || _empty;\n      this.fragment = fragment || _empty;\n\n      _validateUri(this, _strict);\n    }\n  }\n\n  URI.isUri = function (thing) {\n    if (thing instanceof URI) {\n      return true;\n    }\n\n    if (!thing) {\n      return false;\n    }\n\n    return typeof thing.authority === 'string' && typeof thing.fragment === 'string' && typeof thing.path === 'string' && typeof thing.query === 'string' && typeof thing.scheme === 'string' && typeof thing.fsPath === 'function' && typeof thing.with === 'function' && typeof thing.toString === 'function';\n  };\n\n  Object.defineProperty(URI.prototype, \"fsPath\", {\n    // ---- filesystem path -----------------------\n\n    /**\n     * Returns a string representing the corresponding file system path of this URI.\n     * Will handle UNC paths, normalizes windows drive letters to lower-case, and uses the\n     * platform specific path separator.\n     *\n     * * Will *not* validate the path for invalid characters and semantics.\n     * * Will *not* look at the scheme of this URI.\n     * * The result shall *not* be used for display purposes but for accessing a file on disk.\n     *\n     *\n     * The *difference* to `URI#path` is the use of the platform specific separator and the handling\n     * of UNC paths. See the below sample of a file-uri with an authority (UNC path).\n     *\n     * ```ts\n        const u = URI.parse('file://server/c$/folder/file.txt')\n        u.authority === 'server'\n        u.path === '/shares/c$/file.txt'\n        u.fsPath === '\\\\server\\c$\\folder\\file.txt'\n    ```\n     *\n     * Using `URI#path` to read a file (using fs-apis) would not be enough because parts of the path,\n     * namely the server name, would be missing. Therefore `URI#fsPath` exists - it's sugar to ease working\n     * with URIs that represent files on disk (`file` scheme).\n     */\n    get: function get() {\n      // if (this.scheme !== 'file') {\n      // \tconsole.warn(`[UriError] calling fsPath with scheme ${this.scheme}`);\n      // }\n      return _makeFsPath(this);\n    },\n    enumerable: true,\n    configurable: true\n  }); // ---- modify to new -------------------------\n\n  URI.prototype.with = function (change) {\n    if (!change) {\n      return this;\n    }\n\n    var scheme = change.scheme,\n        authority = change.authority,\n        path = change.path,\n        query = change.query,\n        fragment = change.fragment;\n\n    if (scheme === undefined) {\n      scheme = this.scheme;\n    } else if (scheme === null) {\n      scheme = _empty;\n    }\n\n    if (authority === undefined) {\n      authority = this.authority;\n    } else if (authority === null) {\n      authority = _empty;\n    }\n\n    if (path === undefined) {\n      path = this.path;\n    } else if (path === null) {\n      path = _empty;\n    }\n\n    if (query === undefined) {\n      query = this.query;\n    } else if (query === null) {\n      query = _empty;\n    }\n\n    if (fragment === undefined) {\n      fragment = this.fragment;\n    } else if (fragment === null) {\n      fragment = _empty;\n    }\n\n    if (scheme === this.scheme && authority === this.authority && path === this.path && query === this.query && fragment === this.fragment) {\n      return this;\n    }\n\n    return new _URI(scheme, authority, path, query, fragment);\n  }; // ---- parse & validate ------------------------\n\n  /**\n   * Creates a new URI from a string, e.g. `http://www.msft.com/some/path`,\n   * `file:///usr/home`, or `scheme:with/path`.\n   *\n   * @param value A string which represents an URI (see `URI#toString`).\n   */\n\n\n  URI.parse = function (value, _strict) {\n    if (_strict === void 0) {\n      _strict = false;\n    }\n\n    var match = _regexp.exec(value);\n\n    if (!match) {\n      return new _URI(_empty, _empty, _empty, _empty, _empty);\n    }\n\n    return new _URI(match[2] || _empty, decodeURIComponent(match[4] || _empty), decodeURIComponent(match[5] || _empty), decodeURIComponent(match[7] || _empty), decodeURIComponent(match[9] || _empty), _strict);\n  };\n  /**\n   * Creates a new URI from a file system path, e.g. `c:\\my\\files`,\n   * `/usr/home`, or `\\\\server\\share\\some\\path`.\n   *\n   * The *difference* between `URI#parse` and `URI#file` is that the latter treats the argument\n   * as path, not as stringified-uri. E.g. `URI.file(path)` is **not the same as**\n   * `URI.parse('file://' + path)` because the path might contain characters that are\n   * interpreted (# and ?). See the following sample:\n   * ```ts\n  const good = URI.file('/coding/c#/project1');\n  good.scheme === 'file';\n  good.path === '/coding/c#/project1';\n  good.fragment === '';\n  const bad = URI.parse('file://' + '/coding/c#/project1');\n  bad.scheme === 'file';\n  bad.path === '/coding/c'; // path is now broken\n  bad.fragment === '/project1';\n  ```\n   *\n   * @param path A file system path (see `URI#fsPath`)\n   */\n\n\n  URI.file = function (path) {\n    var authority = _empty; // normalize to fwd-slashes on windows,\n    // on other systems bwd-slashes are valid\n    // filename character, eg /f\\oo/ba\\r.txt\n\n    if (isWindows) {\n      path = path.replace(/\\\\/g, _slash);\n    } // check for authority as used in UNC shares\n    // or use the path as given\n\n\n    if (path[0] === _slash && path[1] === _slash) {\n      var idx = path.indexOf(_slash, 2);\n\n      if (idx === -1) {\n        authority = path.substring(2);\n        path = _slash;\n      } else {\n        authority = path.substring(2, idx);\n        path = path.substring(idx) || _slash;\n      }\n    }\n\n    return new _URI('file', authority, path, _empty, _empty);\n  };\n\n  URI.from = function (components) {\n    return new _URI(components.scheme, components.authority, components.path, components.query, components.fragment);\n  }; // ---- printing/externalize ---------------------------\n\n  /**\n   * Creates a string representation for this URI. It's guaranteed that calling\n   * `URI.parse` with the result of this function creates an URI which is equal\n   * to this URI.\n   *\n   * * The result shall *not* be used for display purposes but for externalization or transport.\n   * * The result will be encoded using the percentage encoding and encoding happens mostly\n   * ignore the scheme-specific encoding rules.\n   *\n   * @param skipEncoding Do not encode the result, default is `false`\n   */\n\n\n  URI.prototype.toString = function (skipEncoding) {\n    if (skipEncoding === void 0) {\n      skipEncoding = false;\n    }\n\n    return _asFormatted(this, skipEncoding);\n  };\n\n  URI.prototype.toJSON = function () {\n    return this;\n  };\n\n  URI.revive = function (data) {\n    if (!data) {\n      return data;\n    } else if (data instanceof URI) {\n      return data;\n    } else {\n      var result = new _URI(data);\n      result._fsPath = data.fsPath;\n      result._formatted = data.external;\n      return result;\n    }\n  };\n\n  return URI;\n}();\n\nexport { URI }; // tslint:disable-next-line:class-name\n\nvar _URI =\n/** @class */\nfunction (_super) {\n  __extends(_URI, _super);\n\n  function _URI() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this._formatted = null;\n    _this._fsPath = null;\n    return _this;\n  }\n\n  Object.defineProperty(_URI.prototype, \"fsPath\", {\n    get: function get() {\n      if (!this._fsPath) {\n        this._fsPath = _makeFsPath(this);\n      }\n\n      return this._fsPath;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  _URI.prototype.toString = function (skipEncoding) {\n    if (skipEncoding === void 0) {\n      skipEncoding = false;\n    }\n\n    if (!skipEncoding) {\n      if (!this._formatted) {\n        this._formatted = _asFormatted(this, false);\n      }\n\n      return this._formatted;\n    } else {\n      // we don't cache that\n      return _asFormatted(this, true);\n    }\n  };\n\n  _URI.prototype.toJSON = function () {\n    var res = {\n      $mid: 1\n    }; // cached state\n\n    if (this._fsPath) {\n      res.fsPath = this._fsPath;\n    }\n\n    if (this._formatted) {\n      res.external = this._formatted;\n    } // uri components\n\n\n    if (this.path) {\n      res.path = this.path;\n    }\n\n    if (this.scheme) {\n      res.scheme = this.scheme;\n    }\n\n    if (this.authority) {\n      res.authority = this.authority;\n    }\n\n    if (this.query) {\n      res.query = this.query;\n    }\n\n    if (this.fragment) {\n      res.fragment = this.fragment;\n    }\n\n    return res;\n  };\n\n  return _URI;\n}(URI); // reserved characters: https://tools.ietf.org/html/rfc3986#section-2.2\n\n\nvar encodeTable = (_a = {}, _a[58\n/* Colon */\n] = '%3A', _a[47\n/* Slash */\n] = '%2F', _a[63\n/* QuestionMark */\n] = '%3F', _a[35\n/* Hash */\n] = '%23', _a[91\n/* OpenSquareBracket */\n] = '%5B', _a[93\n/* CloseSquareBracket */\n] = '%5D', _a[64\n/* AtSign */\n] = '%40', _a[33\n/* ExclamationMark */\n] = '%21', _a[36\n/* DollarSign */\n] = '%24', _a[38\n/* Ampersand */\n] = '%26', _a[39\n/* SingleQuote */\n] = '%27', _a[40\n/* OpenParen */\n] = '%28', _a[41\n/* CloseParen */\n] = '%29', _a[42\n/* Asterisk */\n] = '%2A', _a[43\n/* Plus */\n] = '%2B', _a[44\n/* Comma */\n] = '%2C', _a[59\n/* Semicolon */\n] = '%3B', _a[61\n/* Equals */\n] = '%3D', _a[32\n/* Space */\n] = '%20', _a);\n\nfunction encodeURIComponentFast(uriComponent, allowSlash) {\n  var res = undefined;\n  var nativeEncodePos = -1;\n\n  for (var pos = 0; pos < uriComponent.length; pos++) {\n    var code = uriComponent.charCodeAt(pos); // unreserved characters: https://tools.ietf.org/html/rfc3986#section-2.3\n\n    if (code >= 97\n    /* a */\n    && code <= 122\n    /* z */\n    || code >= 65\n    /* A */\n    && code <= 90\n    /* Z */\n    || code >= 48\n    /* Digit0 */\n    && code <= 57\n    /* Digit9 */\n    || code === 45\n    /* Dash */\n    || code === 46\n    /* Period */\n    || code === 95\n    /* Underline */\n    || code === 126\n    /* Tilde */\n    || allowSlash && code === 47\n    /* Slash */\n    ) {\n      // check if we are delaying native encode\n      if (nativeEncodePos !== -1) {\n        res += encodeURIComponent(uriComponent.substring(nativeEncodePos, pos));\n        nativeEncodePos = -1;\n      } // check if we write into a new string (by default we try to return the param)\n\n\n      if (res !== undefined) {\n        res += uriComponent.charAt(pos);\n      }\n    } else {\n      // encoding needed, we need to allocate a new string\n      if (res === undefined) {\n        res = uriComponent.substr(0, pos);\n      } // check with default table first\n\n\n      var escaped = encodeTable[code];\n\n      if (escaped !== undefined) {\n        // check if we are delaying native encode\n        if (nativeEncodePos !== -1) {\n          res += encodeURIComponent(uriComponent.substring(nativeEncodePos, pos));\n          nativeEncodePos = -1;\n        } // append escaped variant to result\n\n\n        res += escaped;\n      } else if (nativeEncodePos === -1) {\n        // use native encode only when needed\n        nativeEncodePos = pos;\n      }\n    }\n  }\n\n  if (nativeEncodePos !== -1) {\n    res += encodeURIComponent(uriComponent.substring(nativeEncodePos));\n  }\n\n  return res !== undefined ? res : uriComponent;\n}\n\nfunction encodeURIComponentMinimal(path) {\n  var res = undefined;\n\n  for (var pos = 0; pos < path.length; pos++) {\n    var code = path.charCodeAt(pos);\n\n    if (code === 35\n    /* Hash */\n    || code === 63\n    /* QuestionMark */\n    ) {\n        if (res === undefined) {\n          res = path.substr(0, pos);\n        }\n\n        res += encodeTable[code];\n      } else {\n      if (res !== undefined) {\n        res += path[pos];\n      }\n    }\n  }\n\n  return res !== undefined ? res : path;\n}\n/**\n * Compute `fsPath` for the given uri\n */\n\n\nfunction _makeFsPath(uri) {\n  var value;\n\n  if (uri.authority && uri.path.length > 1 && uri.scheme === 'file') {\n    // unc path: file://shares/c$/far/boo\n    value = \"//\" + uri.authority + uri.path;\n  } else if (uri.path.charCodeAt(0) === 47\n  /* Slash */\n  && (uri.path.charCodeAt(1) >= 65\n  /* A */\n  && uri.path.charCodeAt(1) <= 90\n  /* Z */\n  || uri.path.charCodeAt(1) >= 97\n  /* a */\n  && uri.path.charCodeAt(1) <= 122\n  /* z */\n  ) && uri.path.charCodeAt(2) === 58\n  /* Colon */\n  ) {\n      // windows drive letter: file:///c:/far/boo\n      value = uri.path[1].toLowerCase() + uri.path.substr(2);\n    } else {\n    // other path\n    value = uri.path;\n  }\n\n  if (isWindows) {\n    value = value.replace(/\\//g, '\\\\');\n  }\n\n  return value;\n}\n/**\n * Create the external version of a uri\n */\n\n\nfunction _asFormatted(uri, skipEncoding) {\n  var encoder = !skipEncoding ? encodeURIComponentFast : encodeURIComponentMinimal;\n  var res = '';\n  var scheme = uri.scheme,\n      authority = uri.authority,\n      path = uri.path,\n      query = uri.query,\n      fragment = uri.fragment;\n\n  if (scheme) {\n    res += scheme;\n    res += ':';\n  }\n\n  if (authority || scheme === 'file') {\n    res += _slash;\n    res += _slash;\n  }\n\n  if (authority) {\n    var idx = authority.indexOf('@');\n\n    if (idx !== -1) {\n      // <user>@<auth>\n      var userinfo = authority.substr(0, idx);\n      authority = authority.substr(idx + 1);\n      idx = userinfo.indexOf(':');\n\n      if (idx === -1) {\n        res += encoder(userinfo, false);\n      } else {\n        // <user>:<pass>@<auth>\n        res += encoder(userinfo.substr(0, idx), false);\n        res += ':';\n        res += encoder(userinfo.substr(idx + 1), false);\n      }\n\n      res += '@';\n    }\n\n    authority = authority.toLowerCase();\n    idx = authority.indexOf(':');\n\n    if (idx === -1) {\n      res += encoder(authority, false);\n    } else {\n      // <auth>:<port>\n      res += encoder(authority.substr(0, idx), false);\n      res += authority.substr(idx);\n    }\n  }\n\n  if (path) {\n    // lower-case windows drive letters in /C:/fff or C:/fff\n    if (path.length >= 3 && path.charCodeAt(0) === 47\n    /* Slash */\n    && path.charCodeAt(2) === 58\n    /* Colon */\n    ) {\n        var code = path.charCodeAt(1);\n\n        if (code >= 65\n        /* A */\n        && code <= 90\n        /* Z */\n        ) {\n            path = \"/\" + String.fromCharCode(code + 32) + \":\" + path.substr(3); // \"/c:\".length === 3\n          }\n      } else if (path.length >= 2 && path.charCodeAt(1) === 58\n    /* Colon */\n    ) {\n        var code = path.charCodeAt(0);\n\n        if (code >= 65\n        /* A */\n        && code <= 90\n        /* Z */\n        ) {\n            path = String.fromCharCode(code + 32) + \":\" + path.substr(2); // \"/c:\".length === 3\n          }\n      } // encode the rest of the path\n\n\n    res += encoder(path, true);\n  }\n\n  if (query) {\n    res += '?';\n    res += encoder(query, false);\n  }\n\n  if (fragment) {\n    res += '#';\n    res += !skipEncoding ? encodeURIComponentFast(fragment, false) : fragment;\n  }\n\n  return res;\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n/**\n * A position in the editor.\n */\nvar Position =\n/** @class */\nfunction () {\n  function Position(lineNumber, column) {\n    this.lineNumber = lineNumber;\n    this.column = column;\n  }\n  /**\n   * Create a new postion from this position.\n   *\n   * @param newLineNumber new line number\n   * @param newColumn new column\n   */\n\n\n  Position.prototype.with = function (newLineNumber, newColumn) {\n    if (newLineNumber === void 0) {\n      newLineNumber = this.lineNumber;\n    }\n\n    if (newColumn === void 0) {\n      newColumn = this.column;\n    }\n\n    if (newLineNumber === this.lineNumber && newColumn === this.column) {\n      return this;\n    } else {\n      return new Position(newLineNumber, newColumn);\n    }\n  };\n  /**\n   * Derive a new position from this position.\n   *\n   * @param deltaLineNumber line number delta\n   * @param deltaColumn column delta\n   */\n\n\n  Position.prototype.delta = function (deltaLineNumber, deltaColumn) {\n    if (deltaLineNumber === void 0) {\n      deltaLineNumber = 0;\n    }\n\n    if (deltaColumn === void 0) {\n      deltaColumn = 0;\n    }\n\n    return this.with(this.lineNumber + deltaLineNumber, this.column + deltaColumn);\n  };\n  /**\n   * Test if this position equals other position\n   */\n\n\n  Position.prototype.equals = function (other) {\n    return Position.equals(this, other);\n  };\n  /**\n   * Test if position `a` equals position `b`\n   */\n\n\n  Position.equals = function (a, b) {\n    if (!a && !b) {\n      return true;\n    }\n\n    return !!a && !!b && a.lineNumber === b.lineNumber && a.column === b.column;\n  };\n  /**\n   * Test if this position is before other position.\n   * If the two positions are equal, the result will be false.\n   */\n\n\n  Position.prototype.isBefore = function (other) {\n    return Position.isBefore(this, other);\n  };\n  /**\n   * Test if position `a` is before position `b`.\n   * If the two positions are equal, the result will be false.\n   */\n\n\n  Position.isBefore = function (a, b) {\n    if (a.lineNumber < b.lineNumber) {\n      return true;\n    }\n\n    if (b.lineNumber < a.lineNumber) {\n      return false;\n    }\n\n    return a.column < b.column;\n  };\n  /**\n   * Test if this position is before other position.\n   * If the two positions are equal, the result will be true.\n   */\n\n\n  Position.prototype.isBeforeOrEqual = function (other) {\n    return Position.isBeforeOrEqual(this, other);\n  };\n  /**\n   * Test if position `a` is before position `b`.\n   * If the two positions are equal, the result will be true.\n   */\n\n\n  Position.isBeforeOrEqual = function (a, b) {\n    if (a.lineNumber < b.lineNumber) {\n      return true;\n    }\n\n    if (b.lineNumber < a.lineNumber) {\n      return false;\n    }\n\n    return a.column <= b.column;\n  };\n  /**\n   * A function that compares positions, useful for sorting\n   */\n\n\n  Position.compare = function (a, b) {\n    var aLineNumber = a.lineNumber | 0;\n    var bLineNumber = b.lineNumber | 0;\n\n    if (aLineNumber === bLineNumber) {\n      var aColumn = a.column | 0;\n      var bColumn = b.column | 0;\n      return aColumn - bColumn;\n    }\n\n    return aLineNumber - bLineNumber;\n  };\n  /**\n   * Clone this position.\n   */\n\n\n  Position.prototype.clone = function () {\n    return new Position(this.lineNumber, this.column);\n  };\n  /**\n   * Convert to a human-readable representation.\n   */\n\n\n  Position.prototype.toString = function () {\n    return '(' + this.lineNumber + ',' + this.column + ')';\n  }; // ---\n\n  /**\n   * Create a `Position` from an `IPosition`.\n   */\n\n\n  Position.lift = function (pos) {\n    return new Position(pos.lineNumber, pos.column);\n  };\n  /**\n   * Test if `obj` is an `IPosition`.\n   */\n\n\n  Position.isIPosition = function (obj) {\n    return obj && typeof obj.lineNumber === 'number' && typeof obj.column === 'number';\n  };\n\n  return Position;\n}();\n\nexport { Position };","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Position } from './position.js';\n/**\n * A range in the editor. (startLineNumber,startColumn) is <= (endLineNumber,endColumn)\n */\n\nvar Range =\n/** @class */\nfunction () {\n  function Range(startLineNumber, startColumn, endLineNumber, endColumn) {\n    if (startLineNumber > endLineNumber || startLineNumber === endLineNumber && startColumn > endColumn) {\n      this.startLineNumber = endLineNumber;\n      this.startColumn = endColumn;\n      this.endLineNumber = startLineNumber;\n      this.endColumn = startColumn;\n    } else {\n      this.startLineNumber = startLineNumber;\n      this.startColumn = startColumn;\n      this.endLineNumber = endLineNumber;\n      this.endColumn = endColumn;\n    }\n  }\n  /**\n   * Test if this range is empty.\n   */\n\n\n  Range.prototype.isEmpty = function () {\n    return Range.isEmpty(this);\n  };\n  /**\n   * Test if `range` is empty.\n   */\n\n\n  Range.isEmpty = function (range) {\n    return range.startLineNumber === range.endLineNumber && range.startColumn === range.endColumn;\n  };\n  /**\n   * Test if position is in this range. If the position is at the edges, will return true.\n   */\n\n\n  Range.prototype.containsPosition = function (position) {\n    return Range.containsPosition(this, position);\n  };\n  /**\n   * Test if `position` is in `range`. If the position is at the edges, will return true.\n   */\n\n\n  Range.containsPosition = function (range, position) {\n    if (position.lineNumber < range.startLineNumber || position.lineNumber > range.endLineNumber) {\n      return false;\n    }\n\n    if (position.lineNumber === range.startLineNumber && position.column < range.startColumn) {\n      return false;\n    }\n\n    if (position.lineNumber === range.endLineNumber && position.column > range.endColumn) {\n      return false;\n    }\n\n    return true;\n  };\n  /**\n   * Test if range is in this range. If the range is equal to this range, will return true.\n   */\n\n\n  Range.prototype.containsRange = function (range) {\n    return Range.containsRange(this, range);\n  };\n  /**\n   * Test if `otherRange` is in `range`. If the ranges are equal, will return true.\n   */\n\n\n  Range.containsRange = function (range, otherRange) {\n    if (otherRange.startLineNumber < range.startLineNumber || otherRange.endLineNumber < range.startLineNumber) {\n      return false;\n    }\n\n    if (otherRange.startLineNumber > range.endLineNumber || otherRange.endLineNumber > range.endLineNumber) {\n      return false;\n    }\n\n    if (otherRange.startLineNumber === range.startLineNumber && otherRange.startColumn < range.startColumn) {\n      return false;\n    }\n\n    if (otherRange.endLineNumber === range.endLineNumber && otherRange.endColumn > range.endColumn) {\n      return false;\n    }\n\n    return true;\n  };\n  /**\n   * A reunion of the two ranges.\n   * The smallest position will be used as the start point, and the largest one as the end point.\n   */\n\n\n  Range.prototype.plusRange = function (range) {\n    return Range.plusRange(this, range);\n  };\n  /**\n   * A reunion of the two ranges.\n   * The smallest position will be used as the start point, and the largest one as the end point.\n   */\n\n\n  Range.plusRange = function (a, b) {\n    var startLineNumber;\n    var startColumn;\n    var endLineNumber;\n    var endColumn;\n\n    if (b.startLineNumber < a.startLineNumber) {\n      startLineNumber = b.startLineNumber;\n      startColumn = b.startColumn;\n    } else if (b.startLineNumber === a.startLineNumber) {\n      startLineNumber = b.startLineNumber;\n      startColumn = Math.min(b.startColumn, a.startColumn);\n    } else {\n      startLineNumber = a.startLineNumber;\n      startColumn = a.startColumn;\n    }\n\n    if (b.endLineNumber > a.endLineNumber) {\n      endLineNumber = b.endLineNumber;\n      endColumn = b.endColumn;\n    } else if (b.endLineNumber === a.endLineNumber) {\n      endLineNumber = b.endLineNumber;\n      endColumn = Math.max(b.endColumn, a.endColumn);\n    } else {\n      endLineNumber = a.endLineNumber;\n      endColumn = a.endColumn;\n    }\n\n    return new Range(startLineNumber, startColumn, endLineNumber, endColumn);\n  };\n  /**\n   * A intersection of the two ranges.\n   */\n\n\n  Range.prototype.intersectRanges = function (range) {\n    return Range.intersectRanges(this, range);\n  };\n  /**\n   * A intersection of the two ranges.\n   */\n\n\n  Range.intersectRanges = function (a, b) {\n    var resultStartLineNumber = a.startLineNumber;\n    var resultStartColumn = a.startColumn;\n    var resultEndLineNumber = a.endLineNumber;\n    var resultEndColumn = a.endColumn;\n    var otherStartLineNumber = b.startLineNumber;\n    var otherStartColumn = b.startColumn;\n    var otherEndLineNumber = b.endLineNumber;\n    var otherEndColumn = b.endColumn;\n\n    if (resultStartLineNumber < otherStartLineNumber) {\n      resultStartLineNumber = otherStartLineNumber;\n      resultStartColumn = otherStartColumn;\n    } else if (resultStartLineNumber === otherStartLineNumber) {\n      resultStartColumn = Math.max(resultStartColumn, otherStartColumn);\n    }\n\n    if (resultEndLineNumber > otherEndLineNumber) {\n      resultEndLineNumber = otherEndLineNumber;\n      resultEndColumn = otherEndColumn;\n    } else if (resultEndLineNumber === otherEndLineNumber) {\n      resultEndColumn = Math.min(resultEndColumn, otherEndColumn);\n    } // Check if selection is now empty\n\n\n    if (resultStartLineNumber > resultEndLineNumber) {\n      return null;\n    }\n\n    if (resultStartLineNumber === resultEndLineNumber && resultStartColumn > resultEndColumn) {\n      return null;\n    }\n\n    return new Range(resultStartLineNumber, resultStartColumn, resultEndLineNumber, resultEndColumn);\n  };\n  /**\n   * Test if this range equals other.\n   */\n\n\n  Range.prototype.equalsRange = function (other) {\n    return Range.equalsRange(this, other);\n  };\n  /**\n   * Test if range `a` equals `b`.\n   */\n\n\n  Range.equalsRange = function (a, b) {\n    return !!a && !!b && a.startLineNumber === b.startLineNumber && a.startColumn === b.startColumn && a.endLineNumber === b.endLineNumber && a.endColumn === b.endColumn;\n  };\n  /**\n   * Return the end position (which will be after or equal to the start position)\n   */\n\n\n  Range.prototype.getEndPosition = function () {\n    return new Position(this.endLineNumber, this.endColumn);\n  };\n  /**\n   * Return the start position (which will be before or equal to the end position)\n   */\n\n\n  Range.prototype.getStartPosition = function () {\n    return new Position(this.startLineNumber, this.startColumn);\n  };\n  /**\n   * Transform to a user presentable string representation.\n   */\n\n\n  Range.prototype.toString = function () {\n    return '[' + this.startLineNumber + ',' + this.startColumn + ' -> ' + this.endLineNumber + ',' + this.endColumn + ']';\n  };\n  /**\n   * Create a new range using this range's start position, and using endLineNumber and endColumn as the end position.\n   */\n\n\n  Range.prototype.setEndPosition = function (endLineNumber, endColumn) {\n    return new Range(this.startLineNumber, this.startColumn, endLineNumber, endColumn);\n  };\n  /**\n   * Create a new range using this range's end position, and using startLineNumber and startColumn as the start position.\n   */\n\n\n  Range.prototype.setStartPosition = function (startLineNumber, startColumn) {\n    return new Range(startLineNumber, startColumn, this.endLineNumber, this.endColumn);\n  };\n  /**\n   * Create a new empty range using this range's start position.\n   */\n\n\n  Range.prototype.collapseToStart = function () {\n    return Range.collapseToStart(this);\n  };\n  /**\n   * Create a new empty range using this range's start position.\n   */\n\n\n  Range.collapseToStart = function (range) {\n    return new Range(range.startLineNumber, range.startColumn, range.startLineNumber, range.startColumn);\n  }; // ---\n\n\n  Range.fromPositions = function (start, end) {\n    if (end === void 0) {\n      end = start;\n    }\n\n    return new Range(start.lineNumber, start.column, end.lineNumber, end.column);\n  };\n\n  Range.lift = function (range) {\n    if (!range) {\n      return null;\n    }\n\n    return new Range(range.startLineNumber, range.startColumn, range.endLineNumber, range.endColumn);\n  };\n  /**\n   * Test if `obj` is an `IRange`.\n   */\n\n\n  Range.isIRange = function (obj) {\n    return obj && typeof obj.startLineNumber === 'number' && typeof obj.startColumn === 'number' && typeof obj.endLineNumber === 'number' && typeof obj.endColumn === 'number';\n  };\n  /**\n   * Test if the two ranges are touching in any way.\n   */\n\n\n  Range.areIntersectingOrTouching = function (a, b) {\n    // Check if `a` is before `b`\n    if (a.endLineNumber < b.startLineNumber || a.endLineNumber === b.startLineNumber && a.endColumn < b.startColumn) {\n      return false;\n    } // Check if `b` is before `a`\n\n\n    if (b.endLineNumber < a.startLineNumber || b.endLineNumber === a.startLineNumber && b.endColumn < a.startColumn) {\n      return false;\n    } // These ranges must intersect\n\n\n    return true;\n  };\n  /**\n   * Test if the two ranges are intersecting. If the ranges are touching it returns true.\n   */\n\n\n  Range.areIntersecting = function (a, b) {\n    // Check if `a` is before `b`\n    if (a.endLineNumber < b.startLineNumber || a.endLineNumber === b.startLineNumber && a.endColumn <= b.startColumn) {\n      return false;\n    } // Check if `b` is before `a`\n\n\n    if (b.endLineNumber < a.startLineNumber || b.endLineNumber === a.startLineNumber && b.endColumn <= a.startColumn) {\n      return false;\n    } // These ranges must intersect\n\n\n    return true;\n  };\n  /**\n   * A function that compares ranges, useful for sorting ranges\n   * It will first compare ranges on the startPosition and then on the endPosition\n   */\n\n\n  Range.compareRangesUsingStarts = function (a, b) {\n    if (a && b) {\n      var aStartLineNumber = a.startLineNumber | 0;\n      var bStartLineNumber = b.startLineNumber | 0;\n\n      if (aStartLineNumber === bStartLineNumber) {\n        var aStartColumn = a.startColumn | 0;\n        var bStartColumn = b.startColumn | 0;\n\n        if (aStartColumn === bStartColumn) {\n          var aEndLineNumber = a.endLineNumber | 0;\n          var bEndLineNumber = b.endLineNumber | 0;\n\n          if (aEndLineNumber === bEndLineNumber) {\n            var aEndColumn = a.endColumn | 0;\n            var bEndColumn = b.endColumn | 0;\n            return aEndColumn - bEndColumn;\n          }\n\n          return aEndLineNumber - bEndLineNumber;\n        }\n\n        return aStartColumn - bStartColumn;\n      }\n\n      return aStartLineNumber - bStartLineNumber;\n    }\n\n    var aExists = a ? 1 : 0;\n    var bExists = b ? 1 : 0;\n    return aExists - bExists;\n  };\n  /**\n   * A function that compares ranges, useful for sorting ranges\n   * It will first compare ranges on the endPosition and then on the startPosition\n   */\n\n\n  Range.compareRangesUsingEnds = function (a, b) {\n    if (a.endLineNumber === b.endLineNumber) {\n      if (a.endColumn === b.endColumn) {\n        if (a.startLineNumber === b.startLineNumber) {\n          return a.startColumn - b.startColumn;\n        }\n\n        return a.startLineNumber - b.startLineNumber;\n      }\n\n      return a.endColumn - b.endColumn;\n    }\n\n    return a.endLineNumber - b.endLineNumber;\n  };\n  /**\n   * Test if the range spans multiple lines.\n   */\n\n\n  Range.spansMultipleLines = function (range) {\n    return range.endLineNumber > range.startLineNumber;\n  };\n\n  return Range;\n}();\n\nexport { Range };","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n/**\n * The empty string.\n */\nexport var empty = '';\nexport function isFalsyOrWhitespace(str) {\n  if (!str || typeof str !== 'string') {\n    return true;\n  }\n\n  return str.trim().length === 0;\n}\n/**\n * @returns the provided number with the given number of preceding zeros.\n */\n\nexport function pad(n, l, char) {\n  if (char === void 0) {\n    char = '0';\n  }\n\n  var str = '' + n;\n  var r = [str];\n\n  for (var i = str.length; i < l; i++) {\n    r.push(char);\n  }\n\n  return r.reverse().join('');\n}\nvar _formatRegexp = /{(\\d+)}/g;\n/**\n * Helper to produce a string with a variable number of arguments. Insert variable segments\n * into the string using the {n} notation where N is the index of the argument following the string.\n * @param value string to which formatting is applied\n * @param args replacements for {n}-entries\n */\n\nexport function format(value) {\n  var args = [];\n\n  for (var _i = 1; _i < arguments.length; _i++) {\n    args[_i - 1] = arguments[_i];\n  }\n\n  if (args.length === 0) {\n    return value;\n  }\n\n  return value.replace(_formatRegexp, function (match, group) {\n    var idx = parseInt(group, 10);\n    return isNaN(idx) || idx < 0 || idx >= args.length ? match : args[idx];\n  });\n}\n/**\n * Converts HTML characters inside the string to use entities instead. Makes the string safe from\n * being used e.g. in HTMLElement.innerHTML.\n */\n\nexport function escape(html) {\n  return html.replace(/[<>&]/g, function (match) {\n    switch (match) {\n      case '<':\n        return '&lt;';\n\n      case '>':\n        return '&gt;';\n\n      case '&':\n        return '&amp;';\n\n      default:\n        return match;\n    }\n  });\n}\n/**\n * Escapes regular expression characters in a given string\n */\n\nexport function escapeRegExpCharacters(value) {\n  return value.replace(/[\\-\\\\\\{\\}\\*\\+\\?\\|\\^\\$\\.\\[\\]\\(\\)\\#]/g, '\\\\$&');\n}\n/**\n * Removes all occurrences of needle from the beginning and end of haystack.\n * @param haystack string to trim\n * @param needle the thing to trim (default is a blank)\n */\n\nexport function trim(haystack, needle) {\n  if (needle === void 0) {\n    needle = ' ';\n  }\n\n  var trimmed = ltrim(haystack, needle);\n  return rtrim(trimmed, needle);\n}\n/**\n * Removes all occurrences of needle from the beginning of haystack.\n * @param haystack string to trim\n * @param needle the thing to trim\n */\n\nexport function ltrim(haystack, needle) {\n  if (!haystack || !needle) {\n    return haystack;\n  }\n\n  var needleLen = needle.length;\n\n  if (needleLen === 0 || haystack.length === 0) {\n    return haystack;\n  }\n\n  var offset = 0;\n\n  while (haystack.indexOf(needle, offset) === offset) {\n    offset = offset + needleLen;\n  }\n\n  return haystack.substring(offset);\n}\n/**\n * Removes all occurrences of needle from the end of haystack.\n * @param haystack string to trim\n * @param needle the thing to trim\n */\n\nexport function rtrim(haystack, needle) {\n  if (!haystack || !needle) {\n    return haystack;\n  }\n\n  var needleLen = needle.length,\n      haystackLen = haystack.length;\n\n  if (needleLen === 0 || haystackLen === 0) {\n    return haystack;\n  }\n\n  var offset = haystackLen,\n      idx = -1;\n\n  while (true) {\n    idx = haystack.lastIndexOf(needle, offset - 1);\n\n    if (idx === -1 || idx + needleLen !== offset) {\n      break;\n    }\n\n    if (idx === 0) {\n      return '';\n    }\n\n    offset = idx;\n  }\n\n  return haystack.substring(0, offset);\n}\nexport function convertSimple2RegExpPattern(pattern) {\n  return pattern.replace(/[\\-\\\\\\{\\}\\+\\?\\|\\^\\$\\.\\,\\[\\]\\(\\)\\#\\s]/g, '\\\\$&').replace(/[\\*]/g, '.*');\n}\n/**\n * Determines if haystack starts with needle.\n */\n\nexport function startsWith(haystack, needle) {\n  if (haystack.length < needle.length) {\n    return false;\n  }\n\n  if (haystack === needle) {\n    return true;\n  }\n\n  for (var i = 0; i < needle.length; i++) {\n    if (haystack[i] !== needle[i]) {\n      return false;\n    }\n  }\n\n  return true;\n}\n/**\n * Determines if haystack ends with needle.\n */\n\nexport function endsWith(haystack, needle) {\n  var diff = haystack.length - needle.length;\n\n  if (diff > 0) {\n    return haystack.indexOf(needle, diff) === diff;\n  } else if (diff === 0) {\n    return haystack === needle;\n  } else {\n    return false;\n  }\n}\nexport function createRegExp(searchString, isRegex, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  if (!searchString) {\n    throw new Error('Cannot create regex from empty string');\n  }\n\n  if (!isRegex) {\n    searchString = escapeRegExpCharacters(searchString);\n  }\n\n  if (options.wholeWord) {\n    if (!/\\B/.test(searchString.charAt(0))) {\n      searchString = '\\\\b' + searchString;\n    }\n\n    if (!/\\B/.test(searchString.charAt(searchString.length - 1))) {\n      searchString = searchString + '\\\\b';\n    }\n  }\n\n  var modifiers = '';\n\n  if (options.global) {\n    modifiers += 'g';\n  }\n\n  if (!options.matchCase) {\n    modifiers += 'i';\n  }\n\n  if (options.multiline) {\n    modifiers += 'm';\n  }\n\n  if (options.unicode) {\n    modifiers += 'u';\n  }\n\n  return new RegExp(searchString, modifiers);\n}\nexport function regExpLeadsToEndlessLoop(regexp) {\n  // Exit early if it's one of these special cases which are meant to match\n  // against an empty string\n  if (regexp.source === '^' || regexp.source === '^$' || regexp.source === '$' || regexp.source === '^\\\\s*$') {\n    return false;\n  } // We check against an empty string. If the regular expression doesn't advance\n  // (e.g. ends in an endless loop) it will match an empty string.\n\n\n  var match = regexp.exec('');\n  return !!(match && regexp.lastIndex === 0);\n}\nexport function regExpFlags(regexp) {\n  return (regexp.global ? 'g' : '') + (regexp.ignoreCase ? 'i' : '') + (regexp.multiline ? 'm' : '') + (regexp.unicode ? 'u' : '');\n}\n/**\n * Returns first index of the string that is not whitespace.\n * If string is empty or contains only whitespaces, returns -1\n */\n\nexport function firstNonWhitespaceIndex(str) {\n  for (var i = 0, len = str.length; i < len; i++) {\n    var chCode = str.charCodeAt(i);\n\n    if (chCode !== 32\n    /* Space */\n    && chCode !== 9\n    /* Tab */\n    ) {\n        return i;\n      }\n  }\n\n  return -1;\n}\n/**\n * Returns the leading whitespace of the string.\n * If the string contains only whitespaces, returns entire string\n */\n\nexport function getLeadingWhitespace(str, start, end) {\n  if (start === void 0) {\n    start = 0;\n  }\n\n  if (end === void 0) {\n    end = str.length;\n  }\n\n  for (var i = start; i < end; i++) {\n    var chCode = str.charCodeAt(i);\n\n    if (chCode !== 32\n    /* Space */\n    && chCode !== 9\n    /* Tab */\n    ) {\n        return str.substring(start, i);\n      }\n  }\n\n  return str.substring(start, end);\n}\n/**\n * Returns last index of the string that is not whitespace.\n * If string is empty or contains only whitespaces, returns -1\n */\n\nexport function lastNonWhitespaceIndex(str, startIndex) {\n  if (startIndex === void 0) {\n    startIndex = str.length - 1;\n  }\n\n  for (var i = startIndex; i >= 0; i--) {\n    var chCode = str.charCodeAt(i);\n\n    if (chCode !== 32\n    /* Space */\n    && chCode !== 9\n    /* Tab */\n    ) {\n        return i;\n      }\n  }\n\n  return -1;\n}\nexport function compare(a, b) {\n  if (a < b) {\n    return -1;\n  } else if (a > b) {\n    return 1;\n  } else {\n    return 0;\n  }\n}\nexport function isLowerAsciiLetter(code) {\n  return code >= 97\n  /* a */\n  && code <= 122\n  /* z */\n  ;\n}\nexport function isUpperAsciiLetter(code) {\n  return code >= 65\n  /* A */\n  && code <= 90\n  /* Z */\n  ;\n}\n\nfunction isAsciiLetter(code) {\n  return isLowerAsciiLetter(code) || isUpperAsciiLetter(code);\n}\n\nexport function equalsIgnoreCase(a, b) {\n  var len1 = a ? a.length : 0;\n  var len2 = b ? b.length : 0;\n\n  if (len1 !== len2) {\n    return false;\n  }\n\n  return doEqualsIgnoreCase(a, b);\n}\n\nfunction doEqualsIgnoreCase(a, b, stopAt) {\n  if (stopAt === void 0) {\n    stopAt = a.length;\n  }\n\n  if (typeof a !== 'string' || typeof b !== 'string') {\n    return false;\n  }\n\n  for (var i = 0; i < stopAt; i++) {\n    var codeA = a.charCodeAt(i);\n    var codeB = b.charCodeAt(i);\n\n    if (codeA === codeB) {\n      continue;\n    } // a-z A-Z\n\n\n    if (isAsciiLetter(codeA) && isAsciiLetter(codeB)) {\n      var diff = Math.abs(codeA - codeB);\n\n      if (diff !== 0 && diff !== 32) {\n        return false;\n      }\n    } // Any other charcode\n    else {\n        if (String.fromCharCode(codeA).toLowerCase() !== String.fromCharCode(codeB).toLowerCase()) {\n          return false;\n        }\n      }\n  }\n\n  return true;\n}\n\nexport function startsWithIgnoreCase(str, candidate) {\n  var candidateLength = candidate.length;\n\n  if (candidate.length > str.length) {\n    return false;\n  }\n\n  return doEqualsIgnoreCase(str, candidate, candidateLength);\n}\n/**\n * @returns the length of the common prefix of the two strings.\n */\n\nexport function commonPrefixLength(a, b) {\n  var i,\n      len = Math.min(a.length, b.length);\n\n  for (i = 0; i < len; i++) {\n    if (a.charCodeAt(i) !== b.charCodeAt(i)) {\n      return i;\n    }\n  }\n\n  return len;\n}\n/**\n * @returns the length of the common suffix of the two strings.\n */\n\nexport function commonSuffixLength(a, b) {\n  var i,\n      len = Math.min(a.length, b.length);\n  var aLastIndex = a.length - 1;\n  var bLastIndex = b.length - 1;\n\n  for (i = 0; i < len; i++) {\n    if (a.charCodeAt(aLastIndex - i) !== b.charCodeAt(bLastIndex - i)) {\n      return i;\n    }\n  }\n\n  return len;\n} // --- unicode\n// http://en.wikipedia.org/wiki/Surrogate_pair\n// Returns the code point starting at a specified index in a string\n// Code points U+0000 to U+D7FF and U+E000 to U+FFFF are represented on a single character\n// Code points U+10000 to U+10FFFF are represented on two consecutive characters\n//export function getUnicodePoint(str:string, index:number, len:number):number {\n//\tlet chrCode = str.charCodeAt(index);\n//\tif (0xD800 <= chrCode && chrCode <= 0xDBFF && index + 1 < len) {\n//\t\tlet nextChrCode = str.charCodeAt(index + 1);\n//\t\tif (0xDC00 <= nextChrCode && nextChrCode <= 0xDFFF) {\n//\t\t\treturn (chrCode - 0xD800) << 10 + (nextChrCode - 0xDC00) + 0x10000;\n//\t\t}\n//\t}\n//\treturn chrCode;\n//}\n\nexport function isHighSurrogate(charCode) {\n  return 0xD800 <= charCode && charCode <= 0xDBFF;\n}\nexport function isLowSurrogate(charCode) {\n  return 0xDC00 <= charCode && charCode <= 0xDFFF;\n}\n/**\n * Generated using https://github.com/alexandrudima/unicode-utils/blob/master/generate-rtl-test.js\n */\n\nvar CONTAINS_RTL = /(?:[\\u05BE\\u05C0\\u05C3\\u05C6\\u05D0-\\u05F4\\u0608\\u060B\\u060D\\u061B-\\u064A\\u066D-\\u066F\\u0671-\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1-\\u07EA\\u07F4\\u07F5\\u07FA-\\u0815\\u081A\\u0824\\u0828\\u0830-\\u0858\\u085E-\\u08BD\\u200F\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFD3D\\uFD50-\\uFDFC\\uFE70-\\uFEFC]|\\uD802[\\uDC00-\\uDD1B\\uDD20-\\uDE00\\uDE10-\\uDE33\\uDE40-\\uDEE4\\uDEEB-\\uDF35\\uDF40-\\uDFFF]|\\uD803[\\uDC00-\\uDCFF]|\\uD83A[\\uDC00-\\uDCCF\\uDD00-\\uDD43\\uDD50-\\uDFFF]|\\uD83B[\\uDC00-\\uDEBB])/;\n/**\n * Returns true if `str` contains any Unicode character that is classified as \"R\" or \"AL\".\n */\n\nexport function containsRTL(str) {\n  return CONTAINS_RTL.test(str);\n}\n/**\n * Generated using https://github.com/alexandrudima/unicode-utils/blob/master/generate-emoji-test.js\n */\n\nvar CONTAINS_EMOJI = /(?:[\\u231A\\u231B\\u23F0\\u23F3\\u2600-\\u27BF\\u2B50\\u2B55]|\\uD83C[\\uDDE6-\\uDDFF\\uDF00-\\uDFFF]|\\uD83D[\\uDC00-\\uDE4F\\uDE80-\\uDEF8]|\\uD83E[\\uDD00-\\uDDE6])/;\nexport function containsEmoji(str) {\n  return CONTAINS_EMOJI.test(str);\n}\nvar IS_BASIC_ASCII = /^[\\t\\n\\r\\x20-\\x7E]*$/;\n/**\n * Returns true if `str` contains only basic ASCII characters in the range 32 - 126 (including 32 and 126) or \\n, \\r, \\t\n */\n\nexport function isBasicASCII(str) {\n  return IS_BASIC_ASCII.test(str);\n}\nexport function containsFullWidthCharacter(str) {\n  for (var i = 0, len = str.length; i < len; i++) {\n    if (isFullWidthCharacter(str.charCodeAt(i))) {\n      return true;\n    }\n  }\n\n  return false;\n}\nexport function isFullWidthCharacter(charCode) {\n  // Do a cheap trick to better support wrapping of wide characters, treat them as 2 columns\n  // http://jrgraphix.net/research/unicode_blocks.php\n  //          2E80 — 2EFF   CJK Radicals Supplement\n  //          2F00 — 2FDF   Kangxi Radicals\n  //          2FF0 — 2FFF   Ideographic Description Characters\n  //          3000 — 303F   CJK Symbols and Punctuation\n  //          3040 — 309F   Hiragana\n  //          30A0 — 30FF   Katakana\n  //          3100 — 312F   Bopomofo\n  //          3130 — 318F   Hangul Compatibility Jamo\n  //          3190 — 319F   Kanbun\n  //          31A0 — 31BF   Bopomofo Extended\n  //          31F0 — 31FF   Katakana Phonetic Extensions\n  //          3200 — 32FF   Enclosed CJK Letters and Months\n  //          3300 — 33FF   CJK Compatibility\n  //          3400 — 4DBF   CJK Unified Ideographs Extension A\n  //          4DC0 — 4DFF   Yijing Hexagram Symbols\n  //          4E00 — 9FFF   CJK Unified Ideographs\n  //          A000 — A48F   Yi Syllables\n  //          A490 — A4CF   Yi Radicals\n  //          AC00 — D7AF   Hangul Syllables\n  // [IGNORE] D800 — DB7F   High Surrogates\n  // [IGNORE] DB80 — DBFF   High Private Use Surrogates\n  // [IGNORE] DC00 — DFFF   Low Surrogates\n  // [IGNORE] E000 — F8FF   Private Use Area\n  //          F900 — FAFF   CJK Compatibility Ideographs\n  // [IGNORE] FB00 — FB4F   Alphabetic Presentation Forms\n  // [IGNORE] FB50 — FDFF   Arabic Presentation Forms-A\n  // [IGNORE] FE00 — FE0F   Variation Selectors\n  // [IGNORE] FE20 — FE2F   Combining Half Marks\n  // [IGNORE] FE30 — FE4F   CJK Compatibility Forms\n  // [IGNORE] FE50 — FE6F   Small Form Variants\n  // [IGNORE] FE70 — FEFF   Arabic Presentation Forms-B\n  //          FF00 — FFEF   Halfwidth and Fullwidth Forms\n  //               [https://en.wikipedia.org/wiki/Halfwidth_and_fullwidth_forms]\n  //               of which FF01 - FF5E fullwidth ASCII of 21 to 7E\n  // [IGNORE]    and FF65 - FFDC halfwidth of Katakana and Hangul\n  // [IGNORE] FFF0 — FFFF   Specials\n  charCode = +charCode; // @perf\n\n  return charCode >= 0x2E80 && charCode <= 0xD7AF || charCode >= 0xF900 && charCode <= 0xFAFF || charCode >= 0xFF01 && charCode <= 0xFF5E;\n} // -- UTF-8 BOM\n\nexport var UTF8_BOM_CHARACTER = String.fromCharCode(65279\n/* UTF8_BOM */\n);\nexport function startsWithUTF8BOM(str) {\n  return !!(str && str.length > 0 && str.charCodeAt(0) === 65279\n  /* UTF8_BOM */\n  );\n}\nexport function safeBtoa(str) {\n  return btoa(encodeURIComponent(str)); // we use encodeURIComponent because btoa fails for non Latin 1 values\n}\nexport function repeat(s, count) {\n  var result = '';\n\n  for (var i = 0; i < count; i++) {\n    result += s;\n  }\n\n  return result;\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { LcsDiff } from '../../../base/common/diff/diff.js';\nimport * as strings from '../../../base/common/strings.js';\nvar MAXIMUM_RUN_TIME = 5000; // 5 seconds\n\nvar MINIMUM_MATCHING_CHARACTER_LENGTH = 3;\n\nfunction computeDiff(originalSequence, modifiedSequence, continueProcessingPredicate, pretty) {\n  var diffAlgo = new LcsDiff(originalSequence, modifiedSequence, continueProcessingPredicate);\n  return diffAlgo.ComputeDiff(pretty);\n}\n\nvar LineMarkerSequence =\n/** @class */\nfunction () {\n  function LineMarkerSequence(lines) {\n    var startColumns = [];\n    var endColumns = [];\n\n    for (var i = 0, length_1 = lines.length; i < length_1; i++) {\n      startColumns[i] = LineMarkerSequence._getFirstNonBlankColumn(lines[i], 1);\n      endColumns[i] = LineMarkerSequence._getLastNonBlankColumn(lines[i], 1);\n    }\n\n    this._lines = lines;\n    this._startColumns = startColumns;\n    this._endColumns = endColumns;\n  }\n\n  LineMarkerSequence.prototype.getLength = function () {\n    return this._lines.length;\n  };\n\n  LineMarkerSequence.prototype.getElementAtIndex = function (i) {\n    return this._lines[i].substring(this._startColumns[i] - 1, this._endColumns[i] - 1);\n  };\n\n  LineMarkerSequence.prototype.getStartLineNumber = function (i) {\n    return i + 1;\n  };\n\n  LineMarkerSequence.prototype.getEndLineNumber = function (i) {\n    return i + 1;\n  };\n\n  LineMarkerSequence._getFirstNonBlankColumn = function (txt, defaultValue) {\n    var r = strings.firstNonWhitespaceIndex(txt);\n\n    if (r === -1) {\n      return defaultValue;\n    }\n\n    return r + 1;\n  };\n\n  LineMarkerSequence._getLastNonBlankColumn = function (txt, defaultValue) {\n    var r = strings.lastNonWhitespaceIndex(txt);\n\n    if (r === -1) {\n      return defaultValue;\n    }\n\n    return r + 2;\n  };\n\n  LineMarkerSequence.prototype.getCharSequence = function (shouldIgnoreTrimWhitespace, startIndex, endIndex) {\n    var charCodes = [];\n    var lineNumbers = [];\n    var columns = [];\n    var len = 0;\n\n    for (var index = startIndex; index <= endIndex; index++) {\n      var lineContent = this._lines[index];\n      var startColumn = shouldIgnoreTrimWhitespace ? this._startColumns[index] : 1;\n      var endColumn = shouldIgnoreTrimWhitespace ? this._endColumns[index] : lineContent.length + 1;\n\n      for (var col = startColumn; col < endColumn; col++) {\n        charCodes[len] = lineContent.charCodeAt(col - 1);\n        lineNumbers[len] = index + 1;\n        columns[len] = col;\n        len++;\n      }\n    }\n\n    return new CharSequence(charCodes, lineNumbers, columns);\n  };\n\n  return LineMarkerSequence;\n}();\n\nvar CharSequence =\n/** @class */\nfunction () {\n  function CharSequence(charCodes, lineNumbers, columns) {\n    this._charCodes = charCodes;\n    this._lineNumbers = lineNumbers;\n    this._columns = columns;\n  }\n\n  CharSequence.prototype.getLength = function () {\n    return this._charCodes.length;\n  };\n\n  CharSequence.prototype.getElementAtIndex = function (i) {\n    return this._charCodes[i];\n  };\n\n  CharSequence.prototype.getStartLineNumber = function (i) {\n    return this._lineNumbers[i];\n  };\n\n  CharSequence.prototype.getStartColumn = function (i) {\n    return this._columns[i];\n  };\n\n  CharSequence.prototype.getEndLineNumber = function (i) {\n    return this._lineNumbers[i];\n  };\n\n  CharSequence.prototype.getEndColumn = function (i) {\n    return this._columns[i] + 1;\n  };\n\n  return CharSequence;\n}();\n\nvar CharChange =\n/** @class */\nfunction () {\n  function CharChange(originalStartLineNumber, originalStartColumn, originalEndLineNumber, originalEndColumn, modifiedStartLineNumber, modifiedStartColumn, modifiedEndLineNumber, modifiedEndColumn) {\n    this.originalStartLineNumber = originalStartLineNumber;\n    this.originalStartColumn = originalStartColumn;\n    this.originalEndLineNumber = originalEndLineNumber;\n    this.originalEndColumn = originalEndColumn;\n    this.modifiedStartLineNumber = modifiedStartLineNumber;\n    this.modifiedStartColumn = modifiedStartColumn;\n    this.modifiedEndLineNumber = modifiedEndLineNumber;\n    this.modifiedEndColumn = modifiedEndColumn;\n  }\n\n  CharChange.createFromDiffChange = function (diffChange, originalCharSequence, modifiedCharSequence) {\n    var originalStartLineNumber;\n    var originalStartColumn;\n    var originalEndLineNumber;\n    var originalEndColumn;\n    var modifiedStartLineNumber;\n    var modifiedStartColumn;\n    var modifiedEndLineNumber;\n    var modifiedEndColumn;\n\n    if (diffChange.originalLength === 0) {\n      originalStartLineNumber = 0;\n      originalStartColumn = 0;\n      originalEndLineNumber = 0;\n      originalEndColumn = 0;\n    } else {\n      originalStartLineNumber = originalCharSequence.getStartLineNumber(diffChange.originalStart);\n      originalStartColumn = originalCharSequence.getStartColumn(diffChange.originalStart);\n      originalEndLineNumber = originalCharSequence.getEndLineNumber(diffChange.originalStart + diffChange.originalLength - 1);\n      originalEndColumn = originalCharSequence.getEndColumn(diffChange.originalStart + diffChange.originalLength - 1);\n    }\n\n    if (diffChange.modifiedLength === 0) {\n      modifiedStartLineNumber = 0;\n      modifiedStartColumn = 0;\n      modifiedEndLineNumber = 0;\n      modifiedEndColumn = 0;\n    } else {\n      modifiedStartLineNumber = modifiedCharSequence.getStartLineNumber(diffChange.modifiedStart);\n      modifiedStartColumn = modifiedCharSequence.getStartColumn(diffChange.modifiedStart);\n      modifiedEndLineNumber = modifiedCharSequence.getEndLineNumber(diffChange.modifiedStart + diffChange.modifiedLength - 1);\n      modifiedEndColumn = modifiedCharSequence.getEndColumn(diffChange.modifiedStart + diffChange.modifiedLength - 1);\n    }\n\n    return new CharChange(originalStartLineNumber, originalStartColumn, originalEndLineNumber, originalEndColumn, modifiedStartLineNumber, modifiedStartColumn, modifiedEndLineNumber, modifiedEndColumn);\n  };\n\n  return CharChange;\n}();\n\nfunction postProcessCharChanges(rawChanges) {\n  if (rawChanges.length <= 1) {\n    return rawChanges;\n  }\n\n  var result = [rawChanges[0]];\n  var prevChange = result[0];\n\n  for (var i = 1, len = rawChanges.length; i < len; i++) {\n    var currChange = rawChanges[i];\n    var originalMatchingLength = currChange.originalStart - (prevChange.originalStart + prevChange.originalLength);\n    var modifiedMatchingLength = currChange.modifiedStart - (prevChange.modifiedStart + prevChange.modifiedLength); // Both of the above should be equal, but the continueProcessingPredicate may prevent this from being true\n\n    var matchingLength = Math.min(originalMatchingLength, modifiedMatchingLength);\n\n    if (matchingLength < MINIMUM_MATCHING_CHARACTER_LENGTH) {\n      // Merge the current change into the previous one\n      prevChange.originalLength = currChange.originalStart + currChange.originalLength - prevChange.originalStart;\n      prevChange.modifiedLength = currChange.modifiedStart + currChange.modifiedLength - prevChange.modifiedStart;\n    } else {\n      // Add the current change\n      result.push(currChange);\n      prevChange = currChange;\n    }\n  }\n\n  return result;\n}\n\nvar LineChange =\n/** @class */\nfunction () {\n  function LineChange(originalStartLineNumber, originalEndLineNumber, modifiedStartLineNumber, modifiedEndLineNumber, charChanges) {\n    this.originalStartLineNumber = originalStartLineNumber;\n    this.originalEndLineNumber = originalEndLineNumber;\n    this.modifiedStartLineNumber = modifiedStartLineNumber;\n    this.modifiedEndLineNumber = modifiedEndLineNumber;\n    this.charChanges = charChanges;\n  }\n\n  LineChange.createFromDiffResult = function (shouldIgnoreTrimWhitespace, diffChange, originalLineSequence, modifiedLineSequence, continueProcessingPredicate, shouldComputeCharChanges, shouldPostProcessCharChanges) {\n    var originalStartLineNumber;\n    var originalEndLineNumber;\n    var modifiedStartLineNumber;\n    var modifiedEndLineNumber;\n    var charChanges = undefined;\n\n    if (diffChange.originalLength === 0) {\n      originalStartLineNumber = originalLineSequence.getStartLineNumber(diffChange.originalStart) - 1;\n      originalEndLineNumber = 0;\n    } else {\n      originalStartLineNumber = originalLineSequence.getStartLineNumber(diffChange.originalStart);\n      originalEndLineNumber = originalLineSequence.getEndLineNumber(diffChange.originalStart + diffChange.originalLength - 1);\n    }\n\n    if (diffChange.modifiedLength === 0) {\n      modifiedStartLineNumber = modifiedLineSequence.getStartLineNumber(diffChange.modifiedStart) - 1;\n      modifiedEndLineNumber = 0;\n    } else {\n      modifiedStartLineNumber = modifiedLineSequence.getStartLineNumber(diffChange.modifiedStart);\n      modifiedEndLineNumber = modifiedLineSequence.getEndLineNumber(diffChange.modifiedStart + diffChange.modifiedLength - 1);\n    }\n\n    if (shouldComputeCharChanges && diffChange.originalLength !== 0 && diffChange.modifiedLength !== 0 && continueProcessingPredicate()) {\n      var originalCharSequence = originalLineSequence.getCharSequence(shouldIgnoreTrimWhitespace, diffChange.originalStart, diffChange.originalStart + diffChange.originalLength - 1);\n      var modifiedCharSequence = modifiedLineSequence.getCharSequence(shouldIgnoreTrimWhitespace, diffChange.modifiedStart, diffChange.modifiedStart + diffChange.modifiedLength - 1);\n      var rawChanges = computeDiff(originalCharSequence, modifiedCharSequence, continueProcessingPredicate, true);\n\n      if (shouldPostProcessCharChanges) {\n        rawChanges = postProcessCharChanges(rawChanges);\n      }\n\n      charChanges = [];\n\n      for (var i = 0, length_2 = rawChanges.length; i < length_2; i++) {\n        charChanges.push(CharChange.createFromDiffChange(rawChanges[i], originalCharSequence, modifiedCharSequence));\n      }\n    }\n\n    return new LineChange(originalStartLineNumber, originalEndLineNumber, modifiedStartLineNumber, modifiedEndLineNumber, charChanges);\n  };\n\n  return LineChange;\n}();\n\nvar DiffComputer =\n/** @class */\nfunction () {\n  function DiffComputer(originalLines, modifiedLines, opts) {\n    this.shouldComputeCharChanges = opts.shouldComputeCharChanges;\n    this.shouldPostProcessCharChanges = opts.shouldPostProcessCharChanges;\n    this.shouldIgnoreTrimWhitespace = opts.shouldIgnoreTrimWhitespace;\n    this.shouldMakePrettyDiff = opts.shouldMakePrettyDiff;\n    this.maximumRunTimeMs = MAXIMUM_RUN_TIME;\n    this.originalLines = originalLines;\n    this.modifiedLines = modifiedLines;\n    this.original = new LineMarkerSequence(originalLines);\n    this.modified = new LineMarkerSequence(modifiedLines);\n  }\n\n  DiffComputer.prototype.computeDiff = function () {\n    if (this.original.getLength() === 1 && this.original.getElementAtIndex(0).length === 0) {\n      // empty original => fast path\n      return [{\n        originalStartLineNumber: 1,\n        originalEndLineNumber: 1,\n        modifiedStartLineNumber: 1,\n        modifiedEndLineNumber: this.modified.getLength(),\n        charChanges: [{\n          modifiedEndColumn: 0,\n          modifiedEndLineNumber: 0,\n          modifiedStartColumn: 0,\n          modifiedStartLineNumber: 0,\n          originalEndColumn: 0,\n          originalEndLineNumber: 0,\n          originalStartColumn: 0,\n          originalStartLineNumber: 0\n        }]\n      }];\n    }\n\n    if (this.modified.getLength() === 1 && this.modified.getElementAtIndex(0).length === 0) {\n      // empty modified => fast path\n      return [{\n        originalStartLineNumber: 1,\n        originalEndLineNumber: this.original.getLength(),\n        modifiedStartLineNumber: 1,\n        modifiedEndLineNumber: 1,\n        charChanges: [{\n          modifiedEndColumn: 0,\n          modifiedEndLineNumber: 0,\n          modifiedStartColumn: 0,\n          modifiedStartLineNumber: 0,\n          originalEndColumn: 0,\n          originalEndLineNumber: 0,\n          originalStartColumn: 0,\n          originalStartLineNumber: 0\n        }]\n      }];\n    }\n\n    this.computationStartTime = new Date().getTime();\n    var rawChanges = computeDiff(this.original, this.modified, this._continueProcessingPredicate.bind(this), this.shouldMakePrettyDiff); // The diff is always computed with ignoring trim whitespace\n    // This ensures we get the prettiest diff\n\n    if (this.shouldIgnoreTrimWhitespace) {\n      var lineChanges = [];\n\n      for (var i = 0, length_3 = rawChanges.length; i < length_3; i++) {\n        lineChanges.push(LineChange.createFromDiffResult(this.shouldIgnoreTrimWhitespace, rawChanges[i], this.original, this.modified, this._continueProcessingPredicate.bind(this), this.shouldComputeCharChanges, this.shouldPostProcessCharChanges));\n      }\n\n      return lineChanges;\n    } // Need to post-process and introduce changes where the trim whitespace is different\n    // Note that we are looping starting at -1 to also cover the lines before the first change\n\n\n    var result = [];\n    var originalLineIndex = 0;\n    var modifiedLineIndex = 0;\n\n    for (var i = -1\n    /* !!!! */\n    , len = rawChanges.length; i < len; i++) {\n      var nextChange = i + 1 < len ? rawChanges[i + 1] : null;\n      var originalStop = nextChange ? nextChange.originalStart : this.originalLines.length;\n      var modifiedStop = nextChange ? nextChange.modifiedStart : this.modifiedLines.length;\n\n      while (originalLineIndex < originalStop && modifiedLineIndex < modifiedStop) {\n        var originalLine = this.originalLines[originalLineIndex];\n        var modifiedLine = this.modifiedLines[modifiedLineIndex];\n\n        if (originalLine !== modifiedLine) {\n          // These lines differ only in trim whitespace\n          // Check the leading whitespace\n          {\n            var originalStartColumn = LineMarkerSequence._getFirstNonBlankColumn(originalLine, 1);\n\n            var modifiedStartColumn = LineMarkerSequence._getFirstNonBlankColumn(modifiedLine, 1);\n\n            while (originalStartColumn > 1 && modifiedStartColumn > 1) {\n              var originalChar = originalLine.charCodeAt(originalStartColumn - 2);\n              var modifiedChar = modifiedLine.charCodeAt(modifiedStartColumn - 2);\n\n              if (originalChar !== modifiedChar) {\n                break;\n              }\n\n              originalStartColumn--;\n              modifiedStartColumn--;\n            }\n\n            if (originalStartColumn > 1 || modifiedStartColumn > 1) {\n              this._pushTrimWhitespaceCharChange(result, originalLineIndex + 1, 1, originalStartColumn, modifiedLineIndex + 1, 1, modifiedStartColumn);\n            }\n          } // Check the trailing whitespace\n\n          {\n            var originalEndColumn = LineMarkerSequence._getLastNonBlankColumn(originalLine, 1);\n\n            var modifiedEndColumn = LineMarkerSequence._getLastNonBlankColumn(modifiedLine, 1);\n\n            var originalMaxColumn = originalLine.length + 1;\n            var modifiedMaxColumn = modifiedLine.length + 1;\n\n            while (originalEndColumn < originalMaxColumn && modifiedEndColumn < modifiedMaxColumn) {\n              var originalChar = originalLine.charCodeAt(originalEndColumn - 1);\n              var modifiedChar = originalLine.charCodeAt(modifiedEndColumn - 1);\n\n              if (originalChar !== modifiedChar) {\n                break;\n              }\n\n              originalEndColumn++;\n              modifiedEndColumn++;\n            }\n\n            if (originalEndColumn < originalMaxColumn || modifiedEndColumn < modifiedMaxColumn) {\n              this._pushTrimWhitespaceCharChange(result, originalLineIndex + 1, originalEndColumn, originalMaxColumn, modifiedLineIndex + 1, modifiedEndColumn, modifiedMaxColumn);\n            }\n          }\n        }\n\n        originalLineIndex++;\n        modifiedLineIndex++;\n      }\n\n      if (nextChange) {\n        // Emit the actual change\n        result.push(LineChange.createFromDiffResult(this.shouldIgnoreTrimWhitespace, nextChange, this.original, this.modified, this._continueProcessingPredicate.bind(this), this.shouldComputeCharChanges, this.shouldPostProcessCharChanges));\n        originalLineIndex += nextChange.originalLength;\n        modifiedLineIndex += nextChange.modifiedLength;\n      }\n    }\n\n    return result;\n  };\n\n  DiffComputer.prototype._pushTrimWhitespaceCharChange = function (result, originalLineNumber, originalStartColumn, originalEndColumn, modifiedLineNumber, modifiedStartColumn, modifiedEndColumn) {\n    if (this._mergeTrimWhitespaceCharChange(result, originalLineNumber, originalStartColumn, originalEndColumn, modifiedLineNumber, modifiedStartColumn, modifiedEndColumn)) {\n      // Merged into previous\n      return;\n    }\n\n    var charChanges = undefined;\n\n    if (this.shouldComputeCharChanges) {\n      charChanges = [new CharChange(originalLineNumber, originalStartColumn, originalLineNumber, originalEndColumn, modifiedLineNumber, modifiedStartColumn, modifiedLineNumber, modifiedEndColumn)];\n    }\n\n    result.push(new LineChange(originalLineNumber, originalLineNumber, modifiedLineNumber, modifiedLineNumber, charChanges));\n  };\n\n  DiffComputer.prototype._mergeTrimWhitespaceCharChange = function (result, originalLineNumber, originalStartColumn, originalEndColumn, modifiedLineNumber, modifiedStartColumn, modifiedEndColumn) {\n    var len = result.length;\n\n    if (len === 0) {\n      return false;\n    }\n\n    var prevChange = result[len - 1];\n\n    if (prevChange.originalEndLineNumber === 0 || prevChange.modifiedEndLineNumber === 0) {\n      // Don't merge with inserts/deletes\n      return false;\n    }\n\n    if (prevChange.originalEndLineNumber + 1 === originalLineNumber && prevChange.modifiedEndLineNumber + 1 === modifiedLineNumber) {\n      prevChange.originalEndLineNumber = originalLineNumber;\n      prevChange.modifiedEndLineNumber = modifiedLineNumber;\n\n      if (this.shouldComputeCharChanges) {\n        prevChange.charChanges.push(new CharChange(originalLineNumber, originalStartColumn, originalLineNumber, originalEndColumn, modifiedLineNumber, modifiedStartColumn, modifiedLineNumber, modifiedEndColumn));\n      }\n\n      return true;\n    }\n\n    return false;\n  };\n\n  DiffComputer.prototype._continueProcessingPredicate = function () {\n    if (this.maximumRunTimeMs === 0) {\n      return true;\n    }\n\n    var now = new Date().getTime();\n    return now - this.computationStartTime < this.maximumRunTimeMs;\n  };\n\n  return DiffComputer;\n}();\n\nexport { DiffComputer };","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar Uint8Matrix =\n/** @class */\nfunction () {\n  function Uint8Matrix(rows, cols, defaultValue) {\n    var data = new Uint8Array(rows * cols);\n\n    for (var i = 0, len = rows * cols; i < len; i++) {\n      data[i] = defaultValue;\n    }\n\n    this._data = data;\n    this.rows = rows;\n    this.cols = cols;\n  }\n\n  Uint8Matrix.prototype.get = function (row, col) {\n    return this._data[row * this.cols + col];\n  };\n\n  Uint8Matrix.prototype.set = function (row, col, value) {\n    this._data[row * this.cols + col] = value;\n  };\n\n  return Uint8Matrix;\n}();\n\nexport { Uint8Matrix };\nexport function toUint8(v) {\n  if (v < 0) {\n    return 0;\n  }\n\n  if (v > 255\n  /* MAX_UINT_8 */\n  ) {\n      return 255\n      /* MAX_UINT_8 */\n      ;\n    }\n\n  return v | 0;\n}\nexport function toUint32(v) {\n  if (v < 0) {\n    return 0;\n  }\n\n  if (v > 4294967295\n  /* MAX_UINT_32 */\n  ) {\n      return 4294967295\n      /* MAX_UINT_32 */\n      ;\n    }\n\n  return v | 0;\n}\nexport function toUint32Array(arr) {\n  var len = arr.length;\n  var r = new Uint32Array(len);\n\n  for (var i = 0; i < len; i++) {\n    r[i] = toUint32(arr[i]);\n  }\n\n  return r;\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { toUint32 } from '../core/uint.js';\n\nvar PrefixSumIndexOfResult =\n/** @class */\nfunction () {\n  function PrefixSumIndexOfResult(index, remainder) {\n    this.index = index;\n    this.remainder = remainder;\n  }\n\n  return PrefixSumIndexOfResult;\n}();\n\nexport { PrefixSumIndexOfResult };\n\nvar PrefixSumComputer =\n/** @class */\nfunction () {\n  function PrefixSumComputer(values) {\n    this.values = values;\n    this.prefixSum = new Uint32Array(values.length);\n    this.prefixSumValidIndex = new Int32Array(1);\n    this.prefixSumValidIndex[0] = -1;\n  }\n\n  PrefixSumComputer.prototype.getCount = function () {\n    return this.values.length;\n  };\n\n  PrefixSumComputer.prototype.insertValues = function (insertIndex, insertValues) {\n    insertIndex = toUint32(insertIndex);\n    var oldValues = this.values;\n    var oldPrefixSum = this.prefixSum;\n    var insertValuesLen = insertValues.length;\n\n    if (insertValuesLen === 0) {\n      return false;\n    }\n\n    this.values = new Uint32Array(oldValues.length + insertValuesLen);\n    this.values.set(oldValues.subarray(0, insertIndex), 0);\n    this.values.set(oldValues.subarray(insertIndex), insertIndex + insertValuesLen);\n    this.values.set(insertValues, insertIndex);\n\n    if (insertIndex - 1 < this.prefixSumValidIndex[0]) {\n      this.prefixSumValidIndex[0] = insertIndex - 1;\n    }\n\n    this.prefixSum = new Uint32Array(this.values.length);\n\n    if (this.prefixSumValidIndex[0] >= 0) {\n      this.prefixSum.set(oldPrefixSum.subarray(0, this.prefixSumValidIndex[0] + 1));\n    }\n\n    return true;\n  };\n\n  PrefixSumComputer.prototype.changeValue = function (index, value) {\n    index = toUint32(index);\n    value = toUint32(value);\n\n    if (this.values[index] === value) {\n      return false;\n    }\n\n    this.values[index] = value;\n\n    if (index - 1 < this.prefixSumValidIndex[0]) {\n      this.prefixSumValidIndex[0] = index - 1;\n    }\n\n    return true;\n  };\n\n  PrefixSumComputer.prototype.removeValues = function (startIndex, cnt) {\n    startIndex = toUint32(startIndex);\n    cnt = toUint32(cnt);\n    var oldValues = this.values;\n    var oldPrefixSum = this.prefixSum;\n\n    if (startIndex >= oldValues.length) {\n      return false;\n    }\n\n    var maxCnt = oldValues.length - startIndex;\n\n    if (cnt >= maxCnt) {\n      cnt = maxCnt;\n    }\n\n    if (cnt === 0) {\n      return false;\n    }\n\n    this.values = new Uint32Array(oldValues.length - cnt);\n    this.values.set(oldValues.subarray(0, startIndex), 0);\n    this.values.set(oldValues.subarray(startIndex + cnt), startIndex);\n    this.prefixSum = new Uint32Array(this.values.length);\n\n    if (startIndex - 1 < this.prefixSumValidIndex[0]) {\n      this.prefixSumValidIndex[0] = startIndex - 1;\n    }\n\n    if (this.prefixSumValidIndex[0] >= 0) {\n      this.prefixSum.set(oldPrefixSum.subarray(0, this.prefixSumValidIndex[0] + 1));\n    }\n\n    return true;\n  };\n\n  PrefixSumComputer.prototype.getTotalValue = function () {\n    if (this.values.length === 0) {\n      return 0;\n    }\n\n    return this._getAccumulatedValue(this.values.length - 1);\n  };\n\n  PrefixSumComputer.prototype.getAccumulatedValue = function (index) {\n    if (index < 0) {\n      return 0;\n    }\n\n    index = toUint32(index);\n    return this._getAccumulatedValue(index);\n  };\n\n  PrefixSumComputer.prototype._getAccumulatedValue = function (index) {\n    if (index <= this.prefixSumValidIndex[0]) {\n      return this.prefixSum[index];\n    }\n\n    var startIndex = this.prefixSumValidIndex[0] + 1;\n\n    if (startIndex === 0) {\n      this.prefixSum[0] = this.values[0];\n      startIndex++;\n    }\n\n    if (index >= this.values.length) {\n      index = this.values.length - 1;\n    }\n\n    for (var i = startIndex; i <= index; i++) {\n      this.prefixSum[i] = this.prefixSum[i - 1] + this.values[i];\n    }\n\n    this.prefixSumValidIndex[0] = Math.max(this.prefixSumValidIndex[0], index);\n    return this.prefixSum[index];\n  };\n\n  PrefixSumComputer.prototype.getIndexOf = function (accumulatedValue) {\n    accumulatedValue = Math.floor(accumulatedValue); //@perf\n    // Compute all sums (to get a fully valid prefixSum)\n\n    this.getTotalValue();\n    var low = 0;\n    var high = this.values.length - 1;\n    var mid = 0;\n    var midStop = 0;\n    var midStart = 0;\n\n    while (low <= high) {\n      mid = low + (high - low) / 2 | 0;\n      midStop = this.prefixSum[mid];\n      midStart = midStop - this.values[mid];\n\n      if (accumulatedValue < midStart) {\n        high = mid - 1;\n      } else if (accumulatedValue >= midStop) {\n        low = mid + 1;\n      } else {\n        break;\n      }\n    }\n\n    return new PrefixSumIndexOfResult(mid, accumulatedValue - midStart);\n  };\n\n  return PrefixSumComputer;\n}();\n\nexport { PrefixSumComputer };\n\nvar PrefixSumComputerWithCache =\n/** @class */\nfunction () {\n  function PrefixSumComputerWithCache(values) {\n    this._cacheAccumulatedValueStart = 0;\n    this._cache = null;\n    this._actual = new PrefixSumComputer(values);\n\n    this._bustCache();\n  }\n\n  PrefixSumComputerWithCache.prototype._bustCache = function () {\n    this._cacheAccumulatedValueStart = 0;\n    this._cache = null;\n  };\n\n  PrefixSumComputerWithCache.prototype.insertValues = function (insertIndex, insertValues) {\n    if (this._actual.insertValues(insertIndex, insertValues)) {\n      this._bustCache();\n    }\n  };\n\n  PrefixSumComputerWithCache.prototype.changeValue = function (index, value) {\n    if (this._actual.changeValue(index, value)) {\n      this._bustCache();\n    }\n  };\n\n  PrefixSumComputerWithCache.prototype.removeValues = function (startIndex, cnt) {\n    if (this._actual.removeValues(startIndex, cnt)) {\n      this._bustCache();\n    }\n  };\n\n  PrefixSumComputerWithCache.prototype.getTotalValue = function () {\n    return this._actual.getTotalValue();\n  };\n\n  PrefixSumComputerWithCache.prototype.getAccumulatedValue = function (index) {\n    return this._actual.getAccumulatedValue(index);\n  };\n\n  PrefixSumComputerWithCache.prototype.getIndexOf = function (accumulatedValue) {\n    accumulatedValue = Math.floor(accumulatedValue); //@perf\n\n    if (this._cache !== null) {\n      var cacheIndex = accumulatedValue - this._cacheAccumulatedValueStart;\n\n      if (cacheIndex >= 0 && cacheIndex < this._cache.length) {\n        // Cache hit!\n        return this._cache[cacheIndex];\n      }\n    } // Cache miss!\n\n\n    return this._actual.getIndexOf(accumulatedValue);\n  };\n  /**\n   * Gives a hint that a lot of requests are about to come in for these accumulated values.\n   */\n\n\n  PrefixSumComputerWithCache.prototype.warmUpCache = function (accumulatedValueStart, accumulatedValueEnd) {\n    var newCache = [];\n\n    for (var accumulatedValue = accumulatedValueStart; accumulatedValue <= accumulatedValueEnd; accumulatedValue++) {\n      newCache[accumulatedValue - accumulatedValueStart] = this.getIndexOf(accumulatedValue);\n    }\n\n    this._cache = newCache;\n    this._cacheAccumulatedValueStart = accumulatedValueStart;\n  };\n\n  return PrefixSumComputerWithCache;\n}();\n\nexport { PrefixSumComputerWithCache };","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Position } from '../core/position.js';\nimport { PrefixSumComputer } from '../viewModel/prefixSumComputer.js';\n\nvar MirrorTextModel =\n/** @class */\nfunction () {\n  function MirrorTextModel(uri, lines, eol, versionId) {\n    this._uri = uri;\n    this._lines = lines;\n    this._eol = eol;\n    this._versionId = versionId;\n    this._lineStarts = null;\n  }\n\n  MirrorTextModel.prototype.dispose = function () {\n    this._lines.length = 0;\n  };\n\n  MirrorTextModel.prototype.getText = function () {\n    return this._lines.join(this._eol);\n  };\n\n  MirrorTextModel.prototype.onEvents = function (e) {\n    if (e.eol && e.eol !== this._eol) {\n      this._eol = e.eol;\n      this._lineStarts = null;\n    } // Update my lines\n\n\n    var changes = e.changes;\n\n    for (var _i = 0, changes_1 = changes; _i < changes_1.length; _i++) {\n      var change = changes_1[_i];\n\n      this._acceptDeleteRange(change.range);\n\n      this._acceptInsertText(new Position(change.range.startLineNumber, change.range.startColumn), change.text);\n    }\n\n    this._versionId = e.versionId;\n  };\n\n  MirrorTextModel.prototype._ensureLineStarts = function () {\n    if (!this._lineStarts) {\n      var eolLength = this._eol.length;\n      var linesLength = this._lines.length;\n      var lineStartValues = new Uint32Array(linesLength);\n\n      for (var i = 0; i < linesLength; i++) {\n        lineStartValues[i] = this._lines[i].length + eolLength;\n      }\n\n      this._lineStarts = new PrefixSumComputer(lineStartValues);\n    }\n  };\n  /**\n   * All changes to a line's text go through this method\n   */\n\n\n  MirrorTextModel.prototype._setLineText = function (lineIndex, newValue) {\n    this._lines[lineIndex] = newValue;\n\n    if (this._lineStarts) {\n      // update prefix sum\n      this._lineStarts.changeValue(lineIndex, this._lines[lineIndex].length + this._eol.length);\n    }\n  };\n\n  MirrorTextModel.prototype._acceptDeleteRange = function (range) {\n    if (range.startLineNumber === range.endLineNumber) {\n      if (range.startColumn === range.endColumn) {\n        // Nothing to delete\n        return;\n      } // Delete text on the affected line\n\n\n      this._setLineText(range.startLineNumber - 1, this._lines[range.startLineNumber - 1].substring(0, range.startColumn - 1) + this._lines[range.startLineNumber - 1].substring(range.endColumn - 1));\n\n      return;\n    } // Take remaining text on last line and append it to remaining text on first line\n\n\n    this._setLineText(range.startLineNumber - 1, this._lines[range.startLineNumber - 1].substring(0, range.startColumn - 1) + this._lines[range.endLineNumber - 1].substring(range.endColumn - 1)); // Delete middle lines\n\n\n    this._lines.splice(range.startLineNumber, range.endLineNumber - range.startLineNumber);\n\n    if (this._lineStarts) {\n      // update prefix sum\n      this._lineStarts.removeValues(range.startLineNumber, range.endLineNumber - range.startLineNumber);\n    }\n  };\n\n  MirrorTextModel.prototype._acceptInsertText = function (position, insertText) {\n    if (insertText.length === 0) {\n      // Nothing to insert\n      return;\n    }\n\n    var insertLines = insertText.split(/\\r\\n|\\r|\\n/);\n\n    if (insertLines.length === 1) {\n      // Inserting text on one line\n      this._setLineText(position.lineNumber - 1, this._lines[position.lineNumber - 1].substring(0, position.column - 1) + insertLines[0] + this._lines[position.lineNumber - 1].substring(position.column - 1));\n\n      return;\n    } // Append overflowing text from first line to the end of text to insert\n\n\n    insertLines[insertLines.length - 1] += this._lines[position.lineNumber - 1].substring(position.column - 1); // Delete overflowing text from first line and insert text on first line\n\n    this._setLineText(position.lineNumber - 1, this._lines[position.lineNumber - 1].substring(0, position.column - 1) + insertLines[0]); // Insert new lines & store lengths\n\n\n    var newLengths = new Uint32Array(insertLines.length - 1);\n\n    for (var i = 1; i < insertLines.length; i++) {\n      this._lines.splice(position.lineNumber + i - 1, 0, insertLines[i]);\n\n      newLengths[i - 1] = insertLines[i].length + this._eol.length;\n    }\n\n    if (this._lineStarts) {\n      // update prefix sum\n      this._lineStarts.insertValues(position.lineNumber, newLengths);\n    }\n  };\n\n  return MirrorTextModel;\n}();\n\nexport { MirrorTextModel };","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport var USUAL_WORD_SEPARATORS = '`~!@#$%^&*()-=+[{]}\\\\|;:\\'\",.<>/?';\n/**\n * Create a word definition regular expression based on default word separators.\n * Optionally provide allowed separators that should be included in words.\n *\n * The default would look like this:\n * /(-?\\d*\\.\\d\\w*)|([^\\`\\~\\!\\@\\#\\$\\%\\^\\&\\*\\(\\)\\-\\=\\+\\[\\{\\]\\}\\\\\\|\\;\\:\\'\\\"\\,\\.\\<\\>\\/\\?\\s]+)/g\n */\n\nfunction createWordRegExp(allowInWords) {\n  if (allowInWords === void 0) {\n    allowInWords = '';\n  }\n\n  var source = '(-?\\\\d*\\\\.\\\\d\\\\w*)|([^';\n\n  for (var _i = 0, USUAL_WORD_SEPARATORS_1 = USUAL_WORD_SEPARATORS; _i < USUAL_WORD_SEPARATORS_1.length; _i++) {\n    var sep = USUAL_WORD_SEPARATORS_1[_i];\n\n    if (allowInWords.indexOf(sep) >= 0) {\n      continue;\n    }\n\n    source += '\\\\' + sep;\n  }\n\n  source += '\\\\s]+)';\n  return new RegExp(source, 'g');\n} // catches numbers (including floating numbers) in the first group, and alphanum in the second\n\n\nexport var DEFAULT_WORD_REGEXP = createWordRegExp();\nexport function ensureValidWordDefinition(wordDefinition) {\n  var result = DEFAULT_WORD_REGEXP;\n\n  if (wordDefinition && wordDefinition instanceof RegExp) {\n    if (!wordDefinition.global) {\n      var flags = 'g';\n\n      if (wordDefinition.ignoreCase) {\n        flags += 'i';\n      }\n\n      if (wordDefinition.multiline) {\n        flags += 'm';\n      }\n\n      if (wordDefinition.unicode) {\n        flags += 'u';\n      }\n\n      result = new RegExp(wordDefinition.source, flags);\n    } else {\n      result = wordDefinition;\n    }\n  }\n\n  result.lastIndex = 0;\n  return result;\n}\n\nfunction getWordAtPosFast(column, wordDefinition, text, textOffset) {\n  // find whitespace enclosed text around column and match from there\n  var pos = column - 1 - textOffset;\n  var start = text.lastIndexOf(' ', pos - 1) + 1;\n  wordDefinition.lastIndex = start;\n  var match;\n\n  while (match = wordDefinition.exec(text)) {\n    var matchIndex = match.index || 0;\n\n    if (matchIndex <= pos && wordDefinition.lastIndex >= pos) {\n      return {\n        word: match[0],\n        startColumn: textOffset + 1 + matchIndex,\n        endColumn: textOffset + 1 + wordDefinition.lastIndex\n      };\n    }\n  }\n\n  return null;\n}\n\nfunction getWordAtPosSlow(column, wordDefinition, text, textOffset) {\n  // matches all words starting at the beginning\n  // of the input until it finds a match that encloses\n  // the desired column. slow but correct\n  var pos = column - 1 - textOffset;\n  wordDefinition.lastIndex = 0;\n  var match;\n\n  while (match = wordDefinition.exec(text)) {\n    var matchIndex = match.index || 0;\n\n    if (matchIndex > pos) {\n      // |nW -> matched only after the pos\n      return null;\n    } else if (wordDefinition.lastIndex >= pos) {\n      // W|W -> match encloses pos\n      return {\n        word: match[0],\n        startColumn: textOffset + 1 + matchIndex,\n        endColumn: textOffset + 1 + wordDefinition.lastIndex\n      };\n    }\n  }\n\n  return null;\n}\n\nexport function getWordAtText(column, wordDefinition, text, textOffset) {\n  // if `words` can contain whitespace character we have to use the slow variant\n  // otherwise we use the fast variant of finding a word\n  wordDefinition.lastIndex = 0;\n  var match = wordDefinition.exec(text);\n\n  if (!match) {\n    return null;\n  } // todo@joh the `match` could already be the (first) word\n\n\n  var ret = match[0].indexOf(' ') >= 0 // did match a word which contains a space character -> use slow word find\n  ? getWordAtPosSlow(column, wordDefinition, text, textOffset) // sane word definition -> use fast word find\n  : getWordAtPosFast(column, wordDefinition, text, textOffset); // both (getWordAtPosFast and getWordAtPosSlow) leave the wordDefinition-RegExp\n  // in an undefined state and to not confuse other users of the wordDefinition\n  // we reset the lastIndex\n\n  wordDefinition.lastIndex = 0;\n  return ret;\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { toUint8 } from './uint.js';\n/**\n * A fast character classifier that uses a compact array for ASCII values.\n */\n\nvar CharacterClassifier =\n/** @class */\nfunction () {\n  function CharacterClassifier(_defaultValue) {\n    var defaultValue = toUint8(_defaultValue);\n    this._defaultValue = defaultValue;\n    this._asciiMap = CharacterClassifier._createAsciiMap(defaultValue);\n    this._map = new Map();\n  }\n\n  CharacterClassifier._createAsciiMap = function (defaultValue) {\n    var asciiMap = new Uint8Array(256);\n\n    for (var i = 0; i < 256; i++) {\n      asciiMap[i] = defaultValue;\n    }\n\n    return asciiMap;\n  };\n\n  CharacterClassifier.prototype.set = function (charCode, _value) {\n    var value = toUint8(_value);\n\n    if (charCode >= 0 && charCode < 256) {\n      this._asciiMap[charCode] = value;\n    } else {\n      this._map.set(charCode, value);\n    }\n  };\n\n  CharacterClassifier.prototype.get = function (charCode) {\n    if (charCode >= 0 && charCode < 256) {\n      return this._asciiMap[charCode];\n    } else {\n      return this._map.get(charCode) || this._defaultValue;\n    }\n  };\n\n  return CharacterClassifier;\n}();\n\nexport { CharacterClassifier };\n\nvar CharacterSet =\n/** @class */\nfunction () {\n  function CharacterSet() {\n    this._actual = new CharacterClassifier(0\n    /* False */\n    );\n  }\n\n  CharacterSet.prototype.add = function (charCode) {\n    this._actual.set(charCode, 1\n    /* True */\n    );\n  };\n\n  CharacterSet.prototype.has = function (charCode) {\n    return this._actual.get(charCode) === 1\n    /* True */\n    ;\n  };\n\n  return CharacterSet;\n}();\n\nexport { CharacterSet };","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { CharacterClassifier } from '../core/characterClassifier.js';\nimport { Uint8Matrix } from '../core/uint.js';\n\nvar StateMachine =\n/** @class */\nfunction () {\n  function StateMachine(edges) {\n    var maxCharCode = 0;\n    var maxState = 0\n    /* Invalid */\n    ;\n\n    for (var i = 0, len = edges.length; i < len; i++) {\n      var _a = edges[i],\n          from = _a[0],\n          chCode = _a[1],\n          to = _a[2];\n\n      if (chCode > maxCharCode) {\n        maxCharCode = chCode;\n      }\n\n      if (from > maxState) {\n        maxState = from;\n      }\n\n      if (to > maxState) {\n        maxState = to;\n      }\n    }\n\n    maxCharCode++;\n    maxState++;\n    var states = new Uint8Matrix(maxState, maxCharCode, 0\n    /* Invalid */\n    );\n\n    for (var i = 0, len = edges.length; i < len; i++) {\n      var _b = edges[i],\n          from = _b[0],\n          chCode = _b[1],\n          to = _b[2];\n      states.set(from, chCode, to);\n    }\n\n    this._states = states;\n    this._maxCharCode = maxCharCode;\n  }\n\n  StateMachine.prototype.nextState = function (currentState, chCode) {\n    if (chCode < 0 || chCode >= this._maxCharCode) {\n      return 0\n      /* Invalid */\n      ;\n    }\n\n    return this._states.get(currentState, chCode);\n  };\n\n  return StateMachine;\n}();\n\nexport { StateMachine }; // State machine for http:// or https:// or file://\n\nvar _stateMachine = null;\n\nfunction getStateMachine() {\n  if (_stateMachine === null) {\n    _stateMachine = new StateMachine([[1\n    /* Start */\n    , 104\n    /* h */\n    , 2\n    /* H */\n    ], [1\n    /* Start */\n    , 72\n    /* H */\n    , 2\n    /* H */\n    ], [1\n    /* Start */\n    , 102\n    /* f */\n    , 6\n    /* F */\n    ], [1\n    /* Start */\n    , 70\n    /* F */\n    , 6\n    /* F */\n    ], [2\n    /* H */\n    , 116\n    /* t */\n    , 3\n    /* HT */\n    ], [2\n    /* H */\n    , 84\n    /* T */\n    , 3\n    /* HT */\n    ], [3\n    /* HT */\n    , 116\n    /* t */\n    , 4\n    /* HTT */\n    ], [3\n    /* HT */\n    , 84\n    /* T */\n    , 4\n    /* HTT */\n    ], [4\n    /* HTT */\n    , 112\n    /* p */\n    , 5\n    /* HTTP */\n    ], [4\n    /* HTT */\n    , 80\n    /* P */\n    , 5\n    /* HTTP */\n    ], [5\n    /* HTTP */\n    , 115\n    /* s */\n    , 9\n    /* BeforeColon */\n    ], [5\n    /* HTTP */\n    , 83\n    /* S */\n    , 9\n    /* BeforeColon */\n    ], [5\n    /* HTTP */\n    , 58\n    /* Colon */\n    , 10\n    /* AfterColon */\n    ], [6\n    /* F */\n    , 105\n    /* i */\n    , 7\n    /* FI */\n    ], [6\n    /* F */\n    , 73\n    /* I */\n    , 7\n    /* FI */\n    ], [7\n    /* FI */\n    , 108\n    /* l */\n    , 8\n    /* FIL */\n    ], [7\n    /* FI */\n    , 76\n    /* L */\n    , 8\n    /* FIL */\n    ], [8\n    /* FIL */\n    , 101\n    /* e */\n    , 9\n    /* BeforeColon */\n    ], [8\n    /* FIL */\n    , 69\n    /* E */\n    , 9\n    /* BeforeColon */\n    ], [9\n    /* BeforeColon */\n    , 58\n    /* Colon */\n    , 10\n    /* AfterColon */\n    ], [10\n    /* AfterColon */\n    , 47\n    /* Slash */\n    , 11\n    /* AlmostThere */\n    ], [11\n    /* AlmostThere */\n    , 47\n    /* Slash */\n    , 12\n    /* End */\n    ]]);\n  }\n\n  return _stateMachine;\n}\n\nvar _classifier = null;\n\nfunction getClassifier() {\n  if (_classifier === null) {\n    _classifier = new CharacterClassifier(0\n    /* None */\n    );\n    var FORCE_TERMINATION_CHARACTERS = ' \\t<>\\'\\\"、。｡､，．：；？！＠＃＄％＆＊‘“〈《「『【〔（［｛｢｣｝］）〕】』」》〉”’｀～…';\n\n    for (var i = 0; i < FORCE_TERMINATION_CHARACTERS.length; i++) {\n      _classifier.set(FORCE_TERMINATION_CHARACTERS.charCodeAt(i), 1\n      /* ForceTermination */\n      );\n    }\n\n    var CANNOT_END_WITH_CHARACTERS = '.,;';\n\n    for (var i = 0; i < CANNOT_END_WITH_CHARACTERS.length; i++) {\n      _classifier.set(CANNOT_END_WITH_CHARACTERS.charCodeAt(i), 2\n      /* CannotEndIn */\n      );\n    }\n  }\n\n  return _classifier;\n}\n\nvar LinkComputer =\n/** @class */\nfunction () {\n  function LinkComputer() {}\n\n  LinkComputer._createLink = function (classifier, line, lineNumber, linkBeginIndex, linkEndIndex) {\n    // Do not allow to end link in certain characters...\n    var lastIncludedCharIndex = linkEndIndex - 1;\n\n    do {\n      var chCode = line.charCodeAt(lastIncludedCharIndex);\n      var chClass = classifier.get(chCode);\n\n      if (chClass !== 2\n      /* CannotEndIn */\n      ) {\n          break;\n        }\n\n      lastIncludedCharIndex--;\n    } while (lastIncludedCharIndex > linkBeginIndex); // Handle links enclosed in parens, square brackets and curlys.\n\n\n    if (linkBeginIndex > 0) {\n      var charCodeBeforeLink = line.charCodeAt(linkBeginIndex - 1);\n      var lastCharCodeInLink = line.charCodeAt(lastIncludedCharIndex);\n\n      if (charCodeBeforeLink === 40\n      /* OpenParen */\n      && lastCharCodeInLink === 41\n      /* CloseParen */\n      || charCodeBeforeLink === 91\n      /* OpenSquareBracket */\n      && lastCharCodeInLink === 93\n      /* CloseSquareBracket */\n      || charCodeBeforeLink === 123\n      /* OpenCurlyBrace */\n      && lastCharCodeInLink === 125\n      /* CloseCurlyBrace */\n      ) {\n        // Do not end in ) if ( is before the link start\n        // Do not end in ] if [ is before the link start\n        // Do not end in } if { is before the link start\n        lastIncludedCharIndex--;\n      }\n    }\n\n    return {\n      range: {\n        startLineNumber: lineNumber,\n        startColumn: linkBeginIndex + 1,\n        endLineNumber: lineNumber,\n        endColumn: lastIncludedCharIndex + 2\n      },\n      url: line.substring(linkBeginIndex, lastIncludedCharIndex + 1)\n    };\n  };\n\n  LinkComputer.computeLinks = function (model, stateMachine) {\n    if (stateMachine === void 0) {\n      stateMachine = getStateMachine();\n    }\n\n    var classifier = getClassifier();\n    var result = [];\n\n    for (var i = 1, lineCount = model.getLineCount(); i <= lineCount; i++) {\n      var line = model.getLineContent(i);\n      var len = line.length;\n      var j = 0;\n      var linkBeginIndex = 0;\n      var linkBeginChCode = 0;\n      var state = 1\n      /* Start */\n      ;\n      var hasOpenParens = false;\n      var hasOpenSquareBracket = false;\n      var hasOpenCurlyBracket = false;\n\n      while (j < len) {\n        var resetStateMachine = false;\n        var chCode = line.charCodeAt(j);\n\n        if (state === 13\n        /* Accept */\n        ) {\n            var chClass = void 0;\n\n            switch (chCode) {\n              case 40\n              /* OpenParen */\n              :\n                hasOpenParens = true;\n                chClass = 0\n                /* None */\n                ;\n                break;\n\n              case 41\n              /* CloseParen */\n              :\n                chClass = hasOpenParens ? 0\n                /* None */\n                : 1\n                /* ForceTermination */\n                ;\n                break;\n\n              case 91\n              /* OpenSquareBracket */\n              :\n                hasOpenSquareBracket = true;\n                chClass = 0\n                /* None */\n                ;\n                break;\n\n              case 93\n              /* CloseSquareBracket */\n              :\n                chClass = hasOpenSquareBracket ? 0\n                /* None */\n                : 1\n                /* ForceTermination */\n                ;\n                break;\n\n              case 123\n              /* OpenCurlyBrace */\n              :\n                hasOpenCurlyBracket = true;\n                chClass = 0\n                /* None */\n                ;\n                break;\n\n              case 125\n              /* CloseCurlyBrace */\n              :\n                chClass = hasOpenCurlyBracket ? 0\n                /* None */\n                : 1\n                /* ForceTermination */\n                ;\n                break;\n\n              /* The following three rules make it that ' or \" or ` are allowed inside links if the link began with a different one */\n\n              case 39\n              /* SingleQuote */\n              :\n                chClass = linkBeginChCode === 34\n                /* DoubleQuote */\n                || linkBeginChCode === 96\n                /* BackTick */\n                ? 0\n                /* None */\n                : 1\n                /* ForceTermination */\n                ;\n                break;\n\n              case 34\n              /* DoubleQuote */\n              :\n                chClass = linkBeginChCode === 39\n                /* SingleQuote */\n                || linkBeginChCode === 96\n                /* BackTick */\n                ? 0\n                /* None */\n                : 1\n                /* ForceTermination */\n                ;\n                break;\n\n              case 96\n              /* BackTick */\n              :\n                chClass = linkBeginChCode === 39\n                /* SingleQuote */\n                || linkBeginChCode === 34\n                /* DoubleQuote */\n                ? 0\n                /* None */\n                : 1\n                /* ForceTermination */\n                ;\n                break;\n\n              default:\n                chClass = classifier.get(chCode);\n            } // Check if character terminates link\n\n\n            if (chClass === 1\n            /* ForceTermination */\n            ) {\n                result.push(LinkComputer._createLink(classifier, line, i, linkBeginIndex, j));\n                resetStateMachine = true;\n              }\n          } else if (state === 12\n        /* End */\n        ) {\n            var chClass = void 0;\n\n            if (chCode === 91\n            /* OpenSquareBracket */\n            ) {\n                // Allow for the authority part to contain ipv6 addresses which contain [ and ]\n                hasOpenSquareBracket = true;\n                chClass = 0\n                /* None */\n                ;\n              } else {\n              chClass = classifier.get(chCode);\n            } // Check if character terminates link\n\n\n            if (chClass === 1\n            /* ForceTermination */\n            ) {\n                resetStateMachine = true;\n              } else {\n              state = 13\n              /* Accept */\n              ;\n            }\n          } else {\n          state = stateMachine.nextState(state, chCode);\n\n          if (state === 0\n          /* Invalid */\n          ) {\n              resetStateMachine = true;\n            }\n        }\n\n        if (resetStateMachine) {\n          state = 1\n          /* Start */\n          ;\n          hasOpenParens = false;\n          hasOpenSquareBracket = false;\n          hasOpenCurlyBracket = false; // Record where the link started\n\n          linkBeginIndex = j + 1;\n          linkBeginChCode = chCode;\n        }\n\n        j++;\n      }\n\n      if (state === 13\n      /* Accept */\n      ) {\n          result.push(LinkComputer._createLink(classifier, line, i, linkBeginIndex, len));\n        }\n    }\n\n    return result;\n  };\n\n  return LinkComputer;\n}();\n\nexport { LinkComputer };\n/**\n * Returns an array of all links contains in the provided\n * document. *Note* that this operation is computational\n * expensive and should not run in the UI thread.\n */\n\nexport function computeLinks(model) {\n  if (!model || typeof model.getLineCount !== 'function' || typeof model.getLineContent !== 'function') {\n    // Unknown caller!\n    return [];\n  }\n\n  return LinkComputer.computeLinks(model);\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar BasicInplaceReplace =\n/** @class */\nfunction () {\n  function BasicInplaceReplace() {\n    this._defaultValueSet = [['true', 'false'], ['True', 'False'], ['Private', 'Public', 'Friend', 'ReadOnly', 'Partial', 'Protected', 'WriteOnly'], ['public', 'protected', 'private']];\n  }\n\n  BasicInplaceReplace.prototype.navigateValueSet = function (range1, text1, range2, text2, up) {\n    if (range1 && text1) {\n      var result = this.doNavigateValueSet(text1, up);\n\n      if (result) {\n        return {\n          range: range1,\n          value: result\n        };\n      }\n    }\n\n    if (range2 && text2) {\n      var result = this.doNavigateValueSet(text2, up);\n\n      if (result) {\n        return {\n          range: range2,\n          value: result\n        };\n      }\n    }\n\n    return null;\n  };\n\n  BasicInplaceReplace.prototype.doNavigateValueSet = function (text, up) {\n    var numberResult = this.numberReplace(text, up);\n\n    if (numberResult !== null) {\n      return numberResult;\n    }\n\n    return this.textReplace(text, up);\n  };\n\n  BasicInplaceReplace.prototype.numberReplace = function (value, up) {\n    var precision = Math.pow(10, value.length - (value.lastIndexOf('.') + 1));\n    var n1 = Number(value);\n    var n2 = parseFloat(value);\n\n    if (!isNaN(n1) && !isNaN(n2) && n1 === n2) {\n      if (n1 === 0 && !up) {\n        return null; // don't do negative\n        //\t\t\t} else if(n1 === 9 && up) {\n        //\t\t\t\treturn null; // don't insert 10 into a number\n      } else {\n        n1 = Math.floor(n1 * precision);\n        n1 += up ? precision : -precision;\n        return String(n1 / precision);\n      }\n    }\n\n    return null;\n  };\n\n  BasicInplaceReplace.prototype.textReplace = function (value, up) {\n    return this.valueSetsReplace(this._defaultValueSet, value, up);\n  };\n\n  BasicInplaceReplace.prototype.valueSetsReplace = function (valueSets, value, up) {\n    var result = null;\n\n    for (var i = 0, len = valueSets.length; result === null && i < len; i++) {\n      result = this.valueSetReplace(valueSets[i], value, up);\n    }\n\n    return result;\n  };\n\n  BasicInplaceReplace.prototype.valueSetReplace = function (valueSet, value, up) {\n    var idx = valueSet.indexOf(value);\n\n    if (idx >= 0) {\n      idx += up ? +1 : -1;\n\n      if (idx < 0) {\n        idx = valueSet.length - 1;\n      } else {\n        idx %= valueSet.length;\n      }\n\n      return valueSet[idx];\n    }\n\n    return null;\n  };\n\n  BasicInplaceReplace.INSTANCE = new BasicInplaceReplace();\n  return BasicInplaceReplace;\n}();\n\nexport { BasicInplaceReplace };","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { FIN } from './iterator.js';\n\nvar Node =\n/** @class */\nfunction () {\n  function Node(element) {\n    this.element = element;\n  }\n\n  return Node;\n}();\n\nvar LinkedList =\n/** @class */\nfunction () {\n  function LinkedList() {\n    this._size = 0;\n  }\n\n  Object.defineProperty(LinkedList.prototype, \"size\", {\n    get: function get() {\n      return this._size;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  LinkedList.prototype.isEmpty = function () {\n    return !this._first;\n  };\n\n  LinkedList.prototype.unshift = function (element) {\n    return this._insert(element, false);\n  };\n\n  LinkedList.prototype.push = function (element) {\n    return this._insert(element, true);\n  };\n\n  LinkedList.prototype._insert = function (element, atTheEnd) {\n    var newNode = new Node(element);\n\n    if (!this._first) {\n      this._first = newNode;\n      this._last = newNode;\n    } else if (atTheEnd) {\n      // push\n      var oldLast = this._last;\n      this._last = newNode;\n      newNode.prev = oldLast;\n      oldLast.next = newNode;\n    } else {\n      // unshift\n      var oldFirst = this._first;\n      this._first = newNode;\n      newNode.next = oldFirst;\n      oldFirst.prev = newNode;\n    }\n\n    this._size += 1;\n    return this._remove.bind(this, newNode);\n  };\n\n  LinkedList.prototype.shift = function () {\n    if (!this._first) {\n      return undefined;\n    } else {\n      var res = this._first.element;\n\n      this._remove(this._first);\n\n      return res;\n    }\n  };\n\n  LinkedList.prototype._remove = function (node) {\n    var candidate = this._first;\n\n    while (candidate instanceof Node) {\n      if (candidate !== node) {\n        candidate = candidate.next;\n        continue;\n      }\n\n      if (candidate.prev && candidate.next) {\n        // middle\n        var anchor = candidate.prev;\n        anchor.next = candidate.next;\n        candidate.next.prev = anchor;\n      } else if (!candidate.prev && !candidate.next) {\n        // only node\n        this._first = undefined;\n        this._last = undefined;\n      } else if (!candidate.next) {\n        // last\n        this._last = this._last.prev;\n        this._last.next = undefined;\n      } else if (!candidate.prev) {\n        // first\n        this._first = this._first.next;\n        this._first.prev = undefined;\n      } // done\n\n\n      this._size -= 1;\n      break;\n    }\n  };\n\n  LinkedList.prototype.iterator = function () {\n    var element;\n    var node = this._first;\n    return {\n      next: function next() {\n        if (!node) {\n          return FIN;\n        }\n\n        if (!element) {\n          element = {\n            done: false,\n            value: node.element\n          };\n        } else {\n          element.value = node.element;\n        }\n\n        node = node.next;\n        return element;\n      }\n    };\n  };\n\n  return LinkedList;\n}();\n\nexport { LinkedList };","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { onUnexpectedError } from './errors.js';\nimport { once as onceFn } from './functional.js';\nimport { combinedDisposable, Disposable, toDisposable } from './lifecycle.js';\nimport { LinkedList } from './linkedList.js';\nexport var Event;\n\n(function (Event) {\n  var _disposable = {\n    dispose: function dispose() {}\n  };\n\n  Event.None = function () {\n    return _disposable;\n  };\n  /**\n   * Given an event, returns another event which only fires once.\n   */\n\n\n  function once(event) {\n    return function (listener, thisArgs, disposables) {\n      if (thisArgs === void 0) {\n        thisArgs = null;\n      } // we need this, in case the event fires during the listener call\n\n\n      var didFire = false;\n      var result;\n      result = event(function (e) {\n        if (didFire) {\n          return;\n        } else if (result) {\n          result.dispose();\n        } else {\n          didFire = true;\n        }\n\n        return listener.call(thisArgs, e);\n      }, null, disposables);\n\n      if (didFire) {\n        result.dispose();\n      }\n\n      return result;\n    };\n  }\n\n  Event.once = once;\n  /**\n   * Given an event and a `map` function, returns another event which maps each element\n   * throught the mapping function.\n   */\n\n  function map(event, map) {\n    return snapshot(function (listener, thisArgs, disposables) {\n      if (thisArgs === void 0) {\n        thisArgs = null;\n      }\n\n      return event(function (i) {\n        return listener.call(thisArgs, map(i));\n      }, null, disposables);\n    });\n  }\n\n  Event.map = map;\n  /**\n   * Given an event and an `each` function, returns another identical event and calls\n   * the `each` function per each element.\n   */\n\n  function forEach(event, each) {\n    return snapshot(function (listener, thisArgs, disposables) {\n      if (thisArgs === void 0) {\n        thisArgs = null;\n      }\n\n      return event(function (i) {\n        each(i);\n        listener.call(thisArgs, i);\n      }, null, disposables);\n    });\n  }\n\n  Event.forEach = forEach;\n\n  function filter(event, filter) {\n    return snapshot(function (listener, thisArgs, disposables) {\n      if (thisArgs === void 0) {\n        thisArgs = null;\n      }\n\n      return event(function (e) {\n        return filter(e) && listener.call(thisArgs, e);\n      }, null, disposables);\n    });\n  }\n\n  Event.filter = filter;\n  /**\n   * Given an event, returns the same event but typed as `Event<void>`.\n   */\n\n  function signal(event) {\n    return event;\n  }\n\n  Event.signal = signal;\n  /**\n   * Given a collection of events, returns a single event which emits\n   * whenever any of the provided events emit.\n   */\n\n  function any() {\n    var events = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      events[_i] = arguments[_i];\n    }\n\n    return function (listener, thisArgs, disposables) {\n      if (thisArgs === void 0) {\n        thisArgs = null;\n      }\n\n      return combinedDisposable(events.map(function (event) {\n        return event(function (e) {\n          return listener.call(thisArgs, e);\n        }, null, disposables);\n      }));\n    };\n  }\n\n  Event.any = any;\n  /**\n   * Given an event and a `merge` function, returns another event which maps each element\n   * and the cummulative result throught the `merge` function. Similar to `map`, but with memory.\n   */\n\n  function reduce(event, merge, initial) {\n    var output = initial;\n    return map(event, function (e) {\n      output = merge(output, e);\n      return output;\n    });\n  }\n\n  Event.reduce = reduce;\n  /**\n   * Given a chain of event processing functions (filter, map, etc), each\n   * function will be invoked per event & per listener. Snapshotting an event\n   * chain allows each function to be invoked just once per event.\n   */\n\n  function snapshot(event) {\n    var listener;\n    var emitter = new Emitter({\n      onFirstListenerAdd: function onFirstListenerAdd() {\n        listener = event(emitter.fire, emitter);\n      },\n      onLastListenerRemove: function onLastListenerRemove() {\n        listener.dispose();\n      }\n    });\n    return emitter.event;\n  }\n\n  Event.snapshot = snapshot;\n\n  function debounce(event, merge, delay, leading, leakWarningThreshold) {\n    if (delay === void 0) {\n      delay = 100;\n    }\n\n    if (leading === void 0) {\n      leading = false;\n    }\n\n    var subscription;\n    var output = undefined;\n    var handle = undefined;\n    var numDebouncedCalls = 0;\n    var emitter = new Emitter({\n      leakWarningThreshold: leakWarningThreshold,\n      onFirstListenerAdd: function onFirstListenerAdd() {\n        subscription = event(function (cur) {\n          numDebouncedCalls++;\n          output = merge(output, cur);\n\n          if (leading && !handle) {\n            emitter.fire(output);\n          }\n\n          clearTimeout(handle);\n          handle = setTimeout(function () {\n            var _output = output;\n            output = undefined;\n            handle = undefined;\n\n            if (!leading || numDebouncedCalls > 1) {\n              emitter.fire(_output);\n            }\n\n            numDebouncedCalls = 0;\n          }, delay);\n        });\n      },\n      onLastListenerRemove: function onLastListenerRemove() {\n        subscription.dispose();\n      }\n    });\n    return emitter.event;\n  }\n\n  Event.debounce = debounce;\n  /**\n   * Given an event, it returns another event which fires only once and as soon as\n   * the input event emits. The event data is the number of millis it took for the\n   * event to fire.\n   */\n\n  function stopwatch(event) {\n    var start = new Date().getTime();\n    return map(once(event), function (_) {\n      return new Date().getTime() - start;\n    });\n  }\n\n  Event.stopwatch = stopwatch;\n  /**\n   * Given an event, it returns another event which fires only when the event\n   * element changes.\n   */\n\n  function latch(event) {\n    var firstCall = true;\n    var cache;\n    return filter(event, function (value) {\n      var shouldEmit = firstCall || value !== cache;\n      firstCall = false;\n      cache = value;\n      return shouldEmit;\n    });\n  }\n\n  Event.latch = latch;\n  /**\n   * Buffers the provided event until a first listener comes\n   * along, at which point fire all the events at once and\n   * pipe the event from then on.\n   *\n   * ```typescript\n   * const emitter = new Emitter<number>();\n   * const event = emitter.event;\n   * const bufferedEvent = buffer(event);\n   *\n   * emitter.fire(1);\n   * emitter.fire(2);\n   * emitter.fire(3);\n   * // nothing...\n   *\n   * const listener = bufferedEvent(num => console.log(num));\n   * // 1, 2, 3\n   *\n   * emitter.fire(4);\n   * // 4\n   * ```\n   */\n\n  function buffer(event, nextTick, _buffer) {\n    if (nextTick === void 0) {\n      nextTick = false;\n    }\n\n    if (_buffer === void 0) {\n      _buffer = [];\n    }\n\n    var buffer = _buffer.slice();\n\n    var listener = event(function (e) {\n      if (buffer) {\n        buffer.push(e);\n      } else {\n        emitter.fire(e);\n      }\n    });\n\n    var flush = function flush() {\n      if (buffer) {\n        buffer.forEach(function (e) {\n          return emitter.fire(e);\n        });\n      }\n\n      buffer = null;\n    };\n\n    var emitter = new Emitter({\n      onFirstListenerAdd: function onFirstListenerAdd() {\n        if (!listener) {\n          listener = event(function (e) {\n            return emitter.fire(e);\n          });\n        }\n      },\n      onFirstListenerDidAdd: function onFirstListenerDidAdd() {\n        if (buffer) {\n          if (nextTick) {\n            setTimeout(flush);\n          } else {\n            flush();\n          }\n        }\n      },\n      onLastListenerRemove: function onLastListenerRemove() {\n        if (listener) {\n          listener.dispose();\n        }\n\n        listener = null;\n      }\n    });\n    return emitter.event;\n  }\n\n  Event.buffer = buffer;\n  /**\n   * Similar to `buffer` but it buffers indefinitely and repeats\n   * the buffered events to every new listener.\n   */\n\n  function echo(event, nextTick, buffer) {\n    if (nextTick === void 0) {\n      nextTick = false;\n    }\n\n    if (buffer === void 0) {\n      buffer = [];\n    }\n\n    buffer = buffer.slice();\n    event(function (e) {\n      buffer.push(e);\n      emitter.fire(e);\n    });\n\n    var flush = function flush(listener, thisArgs) {\n      return buffer.forEach(function (e) {\n        return listener.call(thisArgs, e);\n      });\n    };\n\n    var emitter = new Emitter({\n      onListenerDidAdd: function onListenerDidAdd(emitter, listener, thisArgs) {\n        if (nextTick) {\n          setTimeout(function () {\n            return flush(listener, thisArgs);\n          });\n        } else {\n          flush(listener, thisArgs);\n        }\n      }\n    });\n    return emitter.event;\n  }\n\n  Event.echo = echo;\n\n  var ChainableEvent =\n  /** @class */\n  function () {\n    function ChainableEvent(event) {\n      this.event = event;\n    }\n\n    ChainableEvent.prototype.map = function (fn) {\n      return new ChainableEvent(map(this.event, fn));\n    };\n\n    ChainableEvent.prototype.forEach = function (fn) {\n      return new ChainableEvent(forEach(this.event, fn));\n    };\n\n    ChainableEvent.prototype.filter = function (fn) {\n      return new ChainableEvent(filter(this.event, fn));\n    };\n\n    ChainableEvent.prototype.reduce = function (merge, initial) {\n      return new ChainableEvent(reduce(this.event, merge, initial));\n    };\n\n    ChainableEvent.prototype.latch = function () {\n      return new ChainableEvent(latch(this.event));\n    };\n\n    ChainableEvent.prototype.on = function (listener, thisArgs, disposables) {\n      return this.event(listener, thisArgs, disposables);\n    };\n\n    ChainableEvent.prototype.once = function (listener, thisArgs, disposables) {\n      return once(this.event)(listener, thisArgs, disposables);\n    };\n\n    return ChainableEvent;\n  }();\n\n  function chain(event) {\n    return new ChainableEvent(event);\n  }\n\n  Event.chain = chain;\n\n  function fromNodeEventEmitter(emitter, eventName, map) {\n    if (map === void 0) {\n      map = function map(id) {\n        return id;\n      };\n    }\n\n    var fn = function fn() {\n      var args = [];\n\n      for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n      }\n\n      return result.fire(map.apply(void 0, args));\n    };\n\n    var onFirstListenerAdd = function onFirstListenerAdd() {\n      return emitter.on(eventName, fn);\n    };\n\n    var onLastListenerRemove = function onLastListenerRemove() {\n      return emitter.removeListener(eventName, fn);\n    };\n\n    var result = new Emitter({\n      onFirstListenerAdd: onFirstListenerAdd,\n      onLastListenerRemove: onLastListenerRemove\n    });\n    return result.event;\n  }\n\n  Event.fromNodeEventEmitter = fromNodeEventEmitter;\n\n  function fromPromise(promise) {\n    var emitter = new Emitter();\n    var shouldEmit = false;\n    promise.then(undefined, function () {\n      return null;\n    }).then(function () {\n      if (!shouldEmit) {\n        setTimeout(function () {\n          return emitter.fire(undefined);\n        }, 0);\n      } else {\n        emitter.fire(undefined);\n      }\n    });\n    shouldEmit = true;\n    return emitter.event;\n  }\n\n  Event.fromPromise = fromPromise;\n\n  function toPromise(event) {\n    return new Promise(function (c) {\n      return once(event)(c);\n    });\n  }\n\n  Event.toPromise = toPromise;\n})(Event || (Event = {}));\n\nvar _globalLeakWarningThreshold = -1;\n\nvar LeakageMonitor =\n/** @class */\nfunction () {\n  function LeakageMonitor(customThreshold, name) {\n    if (name === void 0) {\n      name = Math.random().toString(18).slice(2, 5);\n    }\n\n    this.customThreshold = customThreshold;\n    this.name = name;\n    this._warnCountdown = 0;\n  }\n\n  LeakageMonitor.prototype.dispose = function () {\n    if (this._stacks) {\n      this._stacks.clear();\n    }\n  };\n\n  LeakageMonitor.prototype.check = function (listenerCount) {\n    var _this = this;\n\n    var threshold = _globalLeakWarningThreshold;\n\n    if (typeof this.customThreshold === 'number') {\n      threshold = this.customThreshold;\n    }\n\n    if (threshold <= 0 || listenerCount < threshold) {\n      return undefined;\n    }\n\n    if (!this._stacks) {\n      this._stacks = new Map();\n    }\n\n    var stack = new Error().stack.split('\\n').slice(3).join('\\n');\n    var count = this._stacks.get(stack) || 0;\n\n    this._stacks.set(stack, count + 1);\n\n    this._warnCountdown -= 1;\n\n    if (this._warnCountdown <= 0) {\n      // only warn on first exceed and then every time the limit\n      // is exceeded by 50% again\n      this._warnCountdown = threshold * 0.5; // find most frequent listener and print warning\n\n      var topStack_1;\n      var topCount_1 = 0;\n\n      this._stacks.forEach(function (count, stack) {\n        if (!topStack_1 || topCount_1 < count) {\n          topStack_1 = stack;\n          topCount_1 = count;\n        }\n      });\n\n      console.warn(\"[\" + this.name + \"] potential listener LEAK detected, having \" + listenerCount + \" listeners already. MOST frequent listener (\" + topCount_1 + \"):\");\n      console.warn(topStack_1);\n    }\n\n    return function () {\n      var count = _this._stacks.get(stack) || 0;\n\n      _this._stacks.set(stack, count - 1);\n    };\n  };\n\n  return LeakageMonitor;\n}();\n/**\n * The Emitter can be used to expose an Event to the public\n * to fire it from the insides.\n * Sample:\n    class Document {\n\n        private _onDidChange = new Emitter<(value:string)=>any>();\n\n        public onDidChange = this._onDidChange.event;\n\n        // getter-style\n        // get onDidChange(): Event<(value:string)=>any> {\n        // \treturn this._onDidChange.event;\n        // }\n\n        private _doIt() {\n            //...\n            this._onDidChange.fire(value);\n        }\n    }\n */\n\n\nvar Emitter =\n/** @class */\nfunction () {\n  function Emitter(options) {\n    this._disposed = false;\n    this._options = options;\n    this._leakageMon = _globalLeakWarningThreshold > 0 ? new LeakageMonitor(this._options && this._options.leakWarningThreshold) : undefined;\n  }\n\n  Object.defineProperty(Emitter.prototype, \"event\", {\n    /**\n     * For the public to allow to subscribe\n     * to events from this Emitter\n     */\n    get: function get() {\n      var _this = this;\n\n      if (!this._event) {\n        this._event = function (listener, thisArgs, disposables) {\n          if (!_this._listeners) {\n            _this._listeners = new LinkedList();\n          }\n\n          var firstListener = _this._listeners.isEmpty();\n\n          if (firstListener && _this._options && _this._options.onFirstListenerAdd) {\n            _this._options.onFirstListenerAdd(_this);\n          }\n\n          var remove = _this._listeners.push(!thisArgs ? listener : [listener, thisArgs]);\n\n          if (firstListener && _this._options && _this._options.onFirstListenerDidAdd) {\n            _this._options.onFirstListenerDidAdd(_this);\n          }\n\n          if (_this._options && _this._options.onListenerDidAdd) {\n            _this._options.onListenerDidAdd(_this, listener, thisArgs);\n          } // check and record this emitter for potential leakage\n\n\n          var removeMonitor;\n\n          if (_this._leakageMon) {\n            removeMonitor = _this._leakageMon.check(_this._listeners.size);\n          }\n\n          var result;\n          result = {\n            dispose: function dispose() {\n              if (removeMonitor) {\n                removeMonitor();\n              }\n\n              result.dispose = Emitter._noop;\n\n              if (!_this._disposed) {\n                remove();\n\n                if (_this._options && _this._options.onLastListenerRemove) {\n                  var hasListeners = _this._listeners && !_this._listeners.isEmpty();\n\n                  if (!hasListeners) {\n                    _this._options.onLastListenerRemove(_this);\n                  }\n                }\n              }\n            }\n          };\n\n          if (Array.isArray(disposables)) {\n            disposables.push(result);\n          }\n\n          return result;\n        };\n      }\n\n      return this._event;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\n   * To be kept private to fire an event to\n   * subscribers\n   */\n\n  Emitter.prototype.fire = function (event) {\n    if (this._listeners) {\n      // put all [listener,event]-pairs into delivery queue\n      // then emit all event. an inner/nested event might be\n      // the driver of this\n      if (!this._deliveryQueue) {\n        this._deliveryQueue = [];\n      }\n\n      for (var iter = this._listeners.iterator(), e = iter.next(); !e.done; e = iter.next()) {\n        this._deliveryQueue.push([e.value, event]);\n      }\n\n      while (this._deliveryQueue.length > 0) {\n        var _a = this._deliveryQueue.shift(),\n            listener = _a[0],\n            event_1 = _a[1];\n\n        try {\n          if (typeof listener === 'function') {\n            listener.call(undefined, event_1);\n          } else {\n            listener[0].call(listener[1], event_1);\n          }\n        } catch (e) {\n          onUnexpectedError(e);\n        }\n      }\n    }\n  };\n\n  Emitter.prototype.dispose = function () {\n    if (this._listeners) {\n      this._listeners = undefined;\n    }\n\n    if (this._deliveryQueue) {\n      this._deliveryQueue.length = 0;\n    }\n\n    if (this._leakageMon) {\n      this._leakageMon.dispose();\n    }\n\n    this._disposed = true;\n  };\n\n  Emitter._noop = function () {};\n\n  return Emitter;\n}();\n\nexport { Emitter };\n\nvar EventMultiplexer =\n/** @class */\nfunction () {\n  function EventMultiplexer() {\n    var _this = this;\n\n    this.hasListeners = false;\n    this.events = [];\n    this.emitter = new Emitter({\n      onFirstListenerAdd: function onFirstListenerAdd() {\n        return _this.onFirstListenerAdd();\n      },\n      onLastListenerRemove: function onLastListenerRemove() {\n        return _this.onLastListenerRemove();\n      }\n    });\n  }\n\n  Object.defineProperty(EventMultiplexer.prototype, \"event\", {\n    get: function get() {\n      return this.emitter.event;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  EventMultiplexer.prototype.add = function (event) {\n    var _this = this;\n\n    var e = {\n      event: event,\n      listener: null\n    };\n    this.events.push(e);\n\n    if (this.hasListeners) {\n      this.hook(e);\n    }\n\n    var dispose = function dispose() {\n      if (_this.hasListeners) {\n        _this.unhook(e);\n      }\n\n      var idx = _this.events.indexOf(e);\n\n      _this.events.splice(idx, 1);\n    };\n\n    return toDisposable(onceFn(dispose));\n  };\n\n  EventMultiplexer.prototype.onFirstListenerAdd = function () {\n    var _this = this;\n\n    this.hasListeners = true;\n    this.events.forEach(function (e) {\n      return _this.hook(e);\n    });\n  };\n\n  EventMultiplexer.prototype.onLastListenerRemove = function () {\n    var _this = this;\n\n    this.hasListeners = false;\n    this.events.forEach(function (e) {\n      return _this.unhook(e);\n    });\n  };\n\n  EventMultiplexer.prototype.hook = function (e) {\n    var _this = this;\n\n    e.listener = e.event(function (r) {\n      return _this.emitter.fire(r);\n    });\n  };\n\n  EventMultiplexer.prototype.unhook = function (e) {\n    if (e.listener) {\n      e.listener.dispose();\n    }\n\n    e.listener = null;\n  };\n\n  EventMultiplexer.prototype.dispose = function () {\n    this.emitter.dispose();\n  };\n\n  return EventMultiplexer;\n}();\n\nexport { EventMultiplexer };\n/**\n * The EventBufferer is useful in situations in which you want\n * to delay firing your events during some code.\n * You can wrap that code and be sure that the event will not\n * be fired during that wrap.\n *\n * ```\n * const emitter: Emitter;\n * const delayer = new EventDelayer();\n * const delayedEvent = delayer.wrapEvent(emitter.event);\n *\n * delayedEvent(console.log);\n *\n * delayer.bufferEvents(() => {\n *   emitter.fire(); // event will not be fired yet\n * });\n *\n * // event will only be fired at this point\n * ```\n */\n\nvar EventBufferer =\n/** @class */\nfunction () {\n  function EventBufferer() {\n    this.buffers = [];\n  }\n\n  EventBufferer.prototype.wrapEvent = function (event) {\n    var _this = this;\n\n    return function (listener, thisArgs, disposables) {\n      return event(function (i) {\n        var buffer = _this.buffers[_this.buffers.length - 1];\n\n        if (buffer) {\n          buffer.push(function () {\n            return listener.call(thisArgs, i);\n          });\n        } else {\n          listener.call(thisArgs, i);\n        }\n      }, undefined, disposables);\n    };\n  };\n\n  EventBufferer.prototype.bufferEvents = function (fn) {\n    var buffer = [];\n    this.buffers.push(buffer);\n    var r = fn();\n    this.buffers.pop();\n    buffer.forEach(function (flush) {\n      return flush();\n    });\n    return r;\n  };\n\n  return EventBufferer;\n}();\n\nexport { EventBufferer };\n/**\n * A Relay is an event forwarder which functions as a replugabble event pipe.\n * Once created, you can connect an input event to it and it will simply forward\n * events from that input event through its own `event` property. The `input`\n * can be changed at any point in time.\n */\n\nvar Relay =\n/** @class */\nfunction () {\n  function Relay() {\n    var _this = this;\n\n    this.listening = false;\n    this.inputEvent = Event.None;\n    this.inputEventListener = Disposable.None;\n    this.emitter = new Emitter({\n      onFirstListenerDidAdd: function onFirstListenerDidAdd() {\n        _this.listening = true;\n        _this.inputEventListener = _this.inputEvent(_this.emitter.fire, _this.emitter);\n      },\n      onLastListenerRemove: function onLastListenerRemove() {\n        _this.listening = false;\n\n        _this.inputEventListener.dispose();\n      }\n    });\n    this.event = this.emitter.event;\n  }\n\n  Object.defineProperty(Relay.prototype, \"input\", {\n    set: function set(event) {\n      this.inputEvent = event;\n\n      if (this.listening) {\n        this.inputEventListener.dispose();\n        this.inputEventListener = event(this.emitter.fire, this.emitter);\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  Relay.prototype.dispose = function () {\n    this.inputEventListener.dispose();\n    this.emitter.dispose();\n  };\n\n  return Relay;\n}();\n\nexport { Relay };","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Emitter, Event } from './event.js';\nvar shortcutEvent = Object.freeze(function (callback, context) {\n  var handle = setTimeout(callback.bind(context), 0);\n  return {\n    dispose: function dispose() {\n      clearTimeout(handle);\n    }\n  };\n});\nexport var CancellationToken;\n\n(function (CancellationToken) {\n  function isCancellationToken(thing) {\n    if (thing === CancellationToken.None || thing === CancellationToken.Cancelled) {\n      return true;\n    }\n\n    if (thing instanceof MutableToken) {\n      return true;\n    }\n\n    if (!thing || typeof thing !== 'object') {\n      return false;\n    }\n\n    return typeof thing.isCancellationRequested === 'boolean' && typeof thing.onCancellationRequested === 'function';\n  }\n\n  CancellationToken.isCancellationToken = isCancellationToken;\n  CancellationToken.None = Object.freeze({\n    isCancellationRequested: false,\n    onCancellationRequested: Event.None\n  });\n  CancellationToken.Cancelled = Object.freeze({\n    isCancellationRequested: true,\n    onCancellationRequested: shortcutEvent\n  });\n})(CancellationToken || (CancellationToken = {}));\n\nvar MutableToken =\n/** @class */\nfunction () {\n  function MutableToken() {\n    this._isCancelled = false;\n    this._emitter = null;\n  }\n\n  MutableToken.prototype.cancel = function () {\n    if (!this._isCancelled) {\n      this._isCancelled = true;\n\n      if (this._emitter) {\n        this._emitter.fire(undefined);\n\n        this.dispose();\n      }\n    }\n  };\n\n  Object.defineProperty(MutableToken.prototype, \"isCancellationRequested\", {\n    get: function get() {\n      return this._isCancelled;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(MutableToken.prototype, \"onCancellationRequested\", {\n    get: function get() {\n      if (this._isCancelled) {\n        return shortcutEvent;\n      }\n\n      if (!this._emitter) {\n        this._emitter = new Emitter();\n      }\n\n      return this._emitter.event;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  MutableToken.prototype.dispose = function () {\n    if (this._emitter) {\n      this._emitter.dispose();\n\n      this._emitter = null;\n    }\n  };\n\n  return MutableToken;\n}();\n\nvar CancellationTokenSource =\n/** @class */\nfunction () {\n  function CancellationTokenSource() {}\n\n  Object.defineProperty(CancellationTokenSource.prototype, \"token\", {\n    get: function get() {\n      if (!this._token) {\n        // be lazy and create the token only when\n        // actually needed\n        this._token = new MutableToken();\n      }\n\n      return this._token;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  CancellationTokenSource.prototype.cancel = function () {\n    if (!this._token) {\n      // save an object by returning the default\n      // cancelled token when cancellation happens\n      // before someone asks for the token\n      this._token = CancellationToken.Cancelled;\n    } else if (this._token instanceof MutableToken) {\n      // actually cancel\n      this._token.cancel();\n    }\n  };\n\n  CancellationTokenSource.prototype.dispose = function () {\n    if (!this._token) {\n      // ensure to initialize with an empty token if we had none\n      this._token = CancellationToken.None;\n    } else if (this._token instanceof MutableToken) {\n      // actually dispose\n      this._token.dispose();\n    }\n  };\n\n  return CancellationTokenSource;\n}();\n\nexport { CancellationTokenSource };","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport function once(fn) {\n  var _this = this;\n\n  var didCall = false;\n  var result;\n  return function () {\n    if (didCall) {\n      return result;\n    }\n\n    didCall = true;\n    result = fn.apply(_this, arguments);\n    return result;\n  };\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { illegalArgument } from './errors.js';\n\nvar KeyCodeStrMap =\n/** @class */\nfunction () {\n  function KeyCodeStrMap() {\n    this._keyCodeToStr = [];\n    this._strToKeyCode = Object.create(null);\n  }\n\n  KeyCodeStrMap.prototype.define = function (keyCode, str) {\n    this._keyCodeToStr[keyCode] = str;\n    this._strToKeyCode[str.toLowerCase()] = keyCode;\n  };\n\n  KeyCodeStrMap.prototype.keyCodeToStr = function (keyCode) {\n    return this._keyCodeToStr[keyCode];\n  };\n\n  KeyCodeStrMap.prototype.strToKeyCode = function (str) {\n    return this._strToKeyCode[str.toLowerCase()] || 0\n    /* Unknown */\n    ;\n  };\n\n  return KeyCodeStrMap;\n}();\n\nvar uiMap = new KeyCodeStrMap();\nvar userSettingsUSMap = new KeyCodeStrMap();\nvar userSettingsGeneralMap = new KeyCodeStrMap();\n\n(function () {\n  function define(keyCode, uiLabel, usUserSettingsLabel, generalUserSettingsLabel) {\n    if (usUserSettingsLabel === void 0) {\n      usUserSettingsLabel = uiLabel;\n    }\n\n    if (generalUserSettingsLabel === void 0) {\n      generalUserSettingsLabel = usUserSettingsLabel;\n    }\n\n    uiMap.define(keyCode, uiLabel);\n    userSettingsUSMap.define(keyCode, usUserSettingsLabel);\n    userSettingsGeneralMap.define(keyCode, generalUserSettingsLabel);\n  }\n\n  define(0\n  /* Unknown */\n  , 'unknown');\n  define(1\n  /* Backspace */\n  , 'Backspace');\n  define(2\n  /* Tab */\n  , 'Tab');\n  define(3\n  /* Enter */\n  , 'Enter');\n  define(4\n  /* Shift */\n  , 'Shift');\n  define(5\n  /* Ctrl */\n  , 'Ctrl');\n  define(6\n  /* Alt */\n  , 'Alt');\n  define(7\n  /* PauseBreak */\n  , 'PauseBreak');\n  define(8\n  /* CapsLock */\n  , 'CapsLock');\n  define(9\n  /* Escape */\n  , 'Escape');\n  define(10\n  /* Space */\n  , 'Space');\n  define(11\n  /* PageUp */\n  , 'PageUp');\n  define(12\n  /* PageDown */\n  , 'PageDown');\n  define(13\n  /* End */\n  , 'End');\n  define(14\n  /* Home */\n  , 'Home');\n  define(15\n  /* LeftArrow */\n  , 'LeftArrow', 'Left');\n  define(16\n  /* UpArrow */\n  , 'UpArrow', 'Up');\n  define(17\n  /* RightArrow */\n  , 'RightArrow', 'Right');\n  define(18\n  /* DownArrow */\n  , 'DownArrow', 'Down');\n  define(19\n  /* Insert */\n  , 'Insert');\n  define(20\n  /* Delete */\n  , 'Delete');\n  define(21\n  /* KEY_0 */\n  , '0');\n  define(22\n  /* KEY_1 */\n  , '1');\n  define(23\n  /* KEY_2 */\n  , '2');\n  define(24\n  /* KEY_3 */\n  , '3');\n  define(25\n  /* KEY_4 */\n  , '4');\n  define(26\n  /* KEY_5 */\n  , '5');\n  define(27\n  /* KEY_6 */\n  , '6');\n  define(28\n  /* KEY_7 */\n  , '7');\n  define(29\n  /* KEY_8 */\n  , '8');\n  define(30\n  /* KEY_9 */\n  , '9');\n  define(31\n  /* KEY_A */\n  , 'A');\n  define(32\n  /* KEY_B */\n  , 'B');\n  define(33\n  /* KEY_C */\n  , 'C');\n  define(34\n  /* KEY_D */\n  , 'D');\n  define(35\n  /* KEY_E */\n  , 'E');\n  define(36\n  /* KEY_F */\n  , 'F');\n  define(37\n  /* KEY_G */\n  , 'G');\n  define(38\n  /* KEY_H */\n  , 'H');\n  define(39\n  /* KEY_I */\n  , 'I');\n  define(40\n  /* KEY_J */\n  , 'J');\n  define(41\n  /* KEY_K */\n  , 'K');\n  define(42\n  /* KEY_L */\n  , 'L');\n  define(43\n  /* KEY_M */\n  , 'M');\n  define(44\n  /* KEY_N */\n  , 'N');\n  define(45\n  /* KEY_O */\n  , 'O');\n  define(46\n  /* KEY_P */\n  , 'P');\n  define(47\n  /* KEY_Q */\n  , 'Q');\n  define(48\n  /* KEY_R */\n  , 'R');\n  define(49\n  /* KEY_S */\n  , 'S');\n  define(50\n  /* KEY_T */\n  , 'T');\n  define(51\n  /* KEY_U */\n  , 'U');\n  define(52\n  /* KEY_V */\n  , 'V');\n  define(53\n  /* KEY_W */\n  , 'W');\n  define(54\n  /* KEY_X */\n  , 'X');\n  define(55\n  /* KEY_Y */\n  , 'Y');\n  define(56\n  /* KEY_Z */\n  , 'Z');\n  define(57\n  /* Meta */\n  , 'Meta');\n  define(58\n  /* ContextMenu */\n  , 'ContextMenu');\n  define(59\n  /* F1 */\n  , 'F1');\n  define(60\n  /* F2 */\n  , 'F2');\n  define(61\n  /* F3 */\n  , 'F3');\n  define(62\n  /* F4 */\n  , 'F4');\n  define(63\n  /* F5 */\n  , 'F5');\n  define(64\n  /* F6 */\n  , 'F6');\n  define(65\n  /* F7 */\n  , 'F7');\n  define(66\n  /* F8 */\n  , 'F8');\n  define(67\n  /* F9 */\n  , 'F9');\n  define(68\n  /* F10 */\n  , 'F10');\n  define(69\n  /* F11 */\n  , 'F11');\n  define(70\n  /* F12 */\n  , 'F12');\n  define(71\n  /* F13 */\n  , 'F13');\n  define(72\n  /* F14 */\n  , 'F14');\n  define(73\n  /* F15 */\n  , 'F15');\n  define(74\n  /* F16 */\n  , 'F16');\n  define(75\n  /* F17 */\n  , 'F17');\n  define(76\n  /* F18 */\n  , 'F18');\n  define(77\n  /* F19 */\n  , 'F19');\n  define(78\n  /* NumLock */\n  , 'NumLock');\n  define(79\n  /* ScrollLock */\n  , 'ScrollLock');\n  define(80\n  /* US_SEMICOLON */\n  , ';', ';', 'OEM_1');\n  define(81\n  /* US_EQUAL */\n  , '=', '=', 'OEM_PLUS');\n  define(82\n  /* US_COMMA */\n  , ',', ',', 'OEM_COMMA');\n  define(83\n  /* US_MINUS */\n  , '-', '-', 'OEM_MINUS');\n  define(84\n  /* US_DOT */\n  , '.', '.', 'OEM_PERIOD');\n  define(85\n  /* US_SLASH */\n  , '/', '/', 'OEM_2');\n  define(86\n  /* US_BACKTICK */\n  , '`', '`', 'OEM_3');\n  define(110\n  /* ABNT_C1 */\n  , 'ABNT_C1');\n  define(111\n  /* ABNT_C2 */\n  , 'ABNT_C2');\n  define(87\n  /* US_OPEN_SQUARE_BRACKET */\n  , '[', '[', 'OEM_4');\n  define(88\n  /* US_BACKSLASH */\n  , '\\\\', '\\\\', 'OEM_5');\n  define(89\n  /* US_CLOSE_SQUARE_BRACKET */\n  , ']', ']', 'OEM_6');\n  define(90\n  /* US_QUOTE */\n  , '\\'', '\\'', 'OEM_7');\n  define(91\n  /* OEM_8 */\n  , 'OEM_8');\n  define(92\n  /* OEM_102 */\n  , 'OEM_102');\n  define(93\n  /* NUMPAD_0 */\n  , 'NumPad0');\n  define(94\n  /* NUMPAD_1 */\n  , 'NumPad1');\n  define(95\n  /* NUMPAD_2 */\n  , 'NumPad2');\n  define(96\n  /* NUMPAD_3 */\n  , 'NumPad3');\n  define(97\n  /* NUMPAD_4 */\n  , 'NumPad4');\n  define(98\n  /* NUMPAD_5 */\n  , 'NumPad5');\n  define(99\n  /* NUMPAD_6 */\n  , 'NumPad6');\n  define(100\n  /* NUMPAD_7 */\n  , 'NumPad7');\n  define(101\n  /* NUMPAD_8 */\n  , 'NumPad8');\n  define(102\n  /* NUMPAD_9 */\n  , 'NumPad9');\n  define(103\n  /* NUMPAD_MULTIPLY */\n  , 'NumPad_Multiply');\n  define(104\n  /* NUMPAD_ADD */\n  , 'NumPad_Add');\n  define(105\n  /* NUMPAD_SEPARATOR */\n  , 'NumPad_Separator');\n  define(106\n  /* NUMPAD_SUBTRACT */\n  , 'NumPad_Subtract');\n  define(107\n  /* NUMPAD_DECIMAL */\n  , 'NumPad_Decimal');\n  define(108\n  /* NUMPAD_DIVIDE */\n  , 'NumPad_Divide');\n})();\n\nexport var KeyCodeUtils;\n\n(function (KeyCodeUtils) {\n  function toString(keyCode) {\n    return uiMap.keyCodeToStr(keyCode);\n  }\n\n  KeyCodeUtils.toString = toString;\n\n  function fromString(key) {\n    return uiMap.strToKeyCode(key);\n  }\n\n  KeyCodeUtils.fromString = fromString;\n\n  function toUserSettingsUS(keyCode) {\n    return userSettingsUSMap.keyCodeToStr(keyCode);\n  }\n\n  KeyCodeUtils.toUserSettingsUS = toUserSettingsUS;\n\n  function toUserSettingsGeneral(keyCode) {\n    return userSettingsGeneralMap.keyCodeToStr(keyCode);\n  }\n\n  KeyCodeUtils.toUserSettingsGeneral = toUserSettingsGeneral;\n\n  function fromUserSettings(key) {\n    return userSettingsUSMap.strToKeyCode(key) || userSettingsGeneralMap.strToKeyCode(key);\n  }\n\n  KeyCodeUtils.fromUserSettings = fromUserSettings;\n})(KeyCodeUtils || (KeyCodeUtils = {}));\n\nexport function KeyChord(firstPart, secondPart) {\n  var chordPart = (secondPart & 0x0000FFFF) << 16 >>> 0;\n  return (firstPart | chordPart) >>> 0;\n}\nexport function createKeybinding(keybinding, OS) {\n  if (keybinding === 0) {\n    return null;\n  }\n\n  var firstPart = (keybinding & 0x0000FFFF) >>> 0;\n  var chordPart = (keybinding & 0xFFFF0000) >>> 16;\n\n  if (chordPart !== 0) {\n    return new ChordKeybinding([createSimpleKeybinding(firstPart, OS), createSimpleKeybinding(chordPart, OS)]);\n  }\n\n  return new ChordKeybinding([createSimpleKeybinding(firstPart, OS)]);\n}\nexport function createSimpleKeybinding(keybinding, OS) {\n  var ctrlCmd = keybinding & 2048\n  /* CtrlCmd */\n  ? true : false;\n  var winCtrl = keybinding & 256\n  /* WinCtrl */\n  ? true : false;\n  var ctrlKey = OS === 2\n  /* Macintosh */\n  ? winCtrl : ctrlCmd;\n  var shiftKey = keybinding & 1024\n  /* Shift */\n  ? true : false;\n  var altKey = keybinding & 512\n  /* Alt */\n  ? true : false;\n  var metaKey = OS === 2\n  /* Macintosh */\n  ? ctrlCmd : winCtrl;\n  var keyCode = keybinding & 255\n  /* KeyCode */\n  ;\n  return new SimpleKeybinding(ctrlKey, shiftKey, altKey, metaKey, keyCode);\n}\n\nvar SimpleKeybinding =\n/** @class */\nfunction () {\n  function SimpleKeybinding(ctrlKey, shiftKey, altKey, metaKey, keyCode) {\n    this.ctrlKey = ctrlKey;\n    this.shiftKey = shiftKey;\n    this.altKey = altKey;\n    this.metaKey = metaKey;\n    this.keyCode = keyCode;\n  }\n\n  SimpleKeybinding.prototype.equals = function (other) {\n    return this.ctrlKey === other.ctrlKey && this.shiftKey === other.shiftKey && this.altKey === other.altKey && this.metaKey === other.metaKey && this.keyCode === other.keyCode;\n  };\n\n  SimpleKeybinding.prototype.isModifierKey = function () {\n    return this.keyCode === 0\n    /* Unknown */\n    || this.keyCode === 5\n    /* Ctrl */\n    || this.keyCode === 57\n    /* Meta */\n    || this.keyCode === 6\n    /* Alt */\n    || this.keyCode === 4\n    /* Shift */\n    ;\n  };\n\n  SimpleKeybinding.prototype.toChord = function () {\n    return new ChordKeybinding([this]);\n  };\n  /**\n   * Does this keybinding refer to the key code of a modifier and it also has the modifier flag?\n   */\n\n\n  SimpleKeybinding.prototype.isDuplicateModifierCase = function () {\n    return this.ctrlKey && this.keyCode === 5\n    /* Ctrl */\n    || this.shiftKey && this.keyCode === 4\n    /* Shift */\n    || this.altKey && this.keyCode === 6\n    /* Alt */\n    || this.metaKey && this.keyCode === 57\n    /* Meta */\n    ;\n  };\n\n  return SimpleKeybinding;\n}();\n\nexport { SimpleKeybinding };\n\nvar ChordKeybinding =\n/** @class */\nfunction () {\n  function ChordKeybinding(parts) {\n    if (parts.length === 0) {\n      throw illegalArgument(\"parts\");\n    }\n\n    this.parts = parts;\n  }\n\n  ChordKeybinding.prototype.equals = function (other) {\n    if (other === null) {\n      return false;\n    }\n\n    if (this.parts.length !== other.parts.length) {\n      return false;\n    }\n\n    for (var i = 0; i < this.parts.length; i++) {\n      if (!this.parts[i].equals(other.parts[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n\n  return ChordKeybinding;\n}();\n\nexport { ChordKeybinding };\n\nvar ResolvedKeybindingPart =\n/** @class */\nfunction () {\n  function ResolvedKeybindingPart(ctrlKey, shiftKey, altKey, metaKey, kbLabel, kbAriaLabel) {\n    this.ctrlKey = ctrlKey;\n    this.shiftKey = shiftKey;\n    this.altKey = altKey;\n    this.metaKey = metaKey;\n    this.keyLabel = kbLabel;\n    this.keyAriaLabel = kbAriaLabel;\n  }\n\n  return ResolvedKeybindingPart;\n}();\n\nexport { ResolvedKeybindingPart };\n/**\n * A resolved keybinding. Can be a simple keybinding or a chord keybinding.\n */\n\nvar ResolvedKeybinding =\n/** @class */\nfunction () {\n  function ResolvedKeybinding() {}\n\n  return ResolvedKeybinding;\n}();\n\nexport { ResolvedKeybinding };","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n// THIS IS A GENERATED FILE. DO NOT EDIT DIRECTLY.\nexport var MarkerTag;\n\n(function (MarkerTag) {\n  MarkerTag[MarkerTag[\"Unnecessary\"] = 1] = \"Unnecessary\";\n})(MarkerTag || (MarkerTag = {}));\n\nexport var MarkerSeverity;\n\n(function (MarkerSeverity) {\n  MarkerSeverity[MarkerSeverity[\"Hint\"] = 1] = \"Hint\";\n  MarkerSeverity[MarkerSeverity[\"Info\"] = 2] = \"Info\";\n  MarkerSeverity[MarkerSeverity[\"Warning\"] = 4] = \"Warning\";\n  MarkerSeverity[MarkerSeverity[\"Error\"] = 8] = \"Error\";\n})(MarkerSeverity || (MarkerSeverity = {}));\n/**\n * Virtual Key Codes, the value does not hold any inherent meaning.\n * Inspired somewhat from https://msdn.microsoft.com/en-us/library/windows/desktop/dd375731(v=vs.85).aspx\n * But these are \"more general\", as they should work across browsers & OS`s.\n */\n\n\nexport var KeyCode;\n\n(function (KeyCode) {\n  /**\n   * Placed first to cover the 0 value of the enum.\n   */\n  KeyCode[KeyCode[\"Unknown\"] = 0] = \"Unknown\";\n  KeyCode[KeyCode[\"Backspace\"] = 1] = \"Backspace\";\n  KeyCode[KeyCode[\"Tab\"] = 2] = \"Tab\";\n  KeyCode[KeyCode[\"Enter\"] = 3] = \"Enter\";\n  KeyCode[KeyCode[\"Shift\"] = 4] = \"Shift\";\n  KeyCode[KeyCode[\"Ctrl\"] = 5] = \"Ctrl\";\n  KeyCode[KeyCode[\"Alt\"] = 6] = \"Alt\";\n  KeyCode[KeyCode[\"PauseBreak\"] = 7] = \"PauseBreak\";\n  KeyCode[KeyCode[\"CapsLock\"] = 8] = \"CapsLock\";\n  KeyCode[KeyCode[\"Escape\"] = 9] = \"Escape\";\n  KeyCode[KeyCode[\"Space\"] = 10] = \"Space\";\n  KeyCode[KeyCode[\"PageUp\"] = 11] = \"PageUp\";\n  KeyCode[KeyCode[\"PageDown\"] = 12] = \"PageDown\";\n  KeyCode[KeyCode[\"End\"] = 13] = \"End\";\n  KeyCode[KeyCode[\"Home\"] = 14] = \"Home\";\n  KeyCode[KeyCode[\"LeftArrow\"] = 15] = \"LeftArrow\";\n  KeyCode[KeyCode[\"UpArrow\"] = 16] = \"UpArrow\";\n  KeyCode[KeyCode[\"RightArrow\"] = 17] = \"RightArrow\";\n  KeyCode[KeyCode[\"DownArrow\"] = 18] = \"DownArrow\";\n  KeyCode[KeyCode[\"Insert\"] = 19] = \"Insert\";\n  KeyCode[KeyCode[\"Delete\"] = 20] = \"Delete\";\n  KeyCode[KeyCode[\"KEY_0\"] = 21] = \"KEY_0\";\n  KeyCode[KeyCode[\"KEY_1\"] = 22] = \"KEY_1\";\n  KeyCode[KeyCode[\"KEY_2\"] = 23] = \"KEY_2\";\n  KeyCode[KeyCode[\"KEY_3\"] = 24] = \"KEY_3\";\n  KeyCode[KeyCode[\"KEY_4\"] = 25] = \"KEY_4\";\n  KeyCode[KeyCode[\"KEY_5\"] = 26] = \"KEY_5\";\n  KeyCode[KeyCode[\"KEY_6\"] = 27] = \"KEY_6\";\n  KeyCode[KeyCode[\"KEY_7\"] = 28] = \"KEY_7\";\n  KeyCode[KeyCode[\"KEY_8\"] = 29] = \"KEY_8\";\n  KeyCode[KeyCode[\"KEY_9\"] = 30] = \"KEY_9\";\n  KeyCode[KeyCode[\"KEY_A\"] = 31] = \"KEY_A\";\n  KeyCode[KeyCode[\"KEY_B\"] = 32] = \"KEY_B\";\n  KeyCode[KeyCode[\"KEY_C\"] = 33] = \"KEY_C\";\n  KeyCode[KeyCode[\"KEY_D\"] = 34] = \"KEY_D\";\n  KeyCode[KeyCode[\"KEY_E\"] = 35] = \"KEY_E\";\n  KeyCode[KeyCode[\"KEY_F\"] = 36] = \"KEY_F\";\n  KeyCode[KeyCode[\"KEY_G\"] = 37] = \"KEY_G\";\n  KeyCode[KeyCode[\"KEY_H\"] = 38] = \"KEY_H\";\n  KeyCode[KeyCode[\"KEY_I\"] = 39] = \"KEY_I\";\n  KeyCode[KeyCode[\"KEY_J\"] = 40] = \"KEY_J\";\n  KeyCode[KeyCode[\"KEY_K\"] = 41] = \"KEY_K\";\n  KeyCode[KeyCode[\"KEY_L\"] = 42] = \"KEY_L\";\n  KeyCode[KeyCode[\"KEY_M\"] = 43] = \"KEY_M\";\n  KeyCode[KeyCode[\"KEY_N\"] = 44] = \"KEY_N\";\n  KeyCode[KeyCode[\"KEY_O\"] = 45] = \"KEY_O\";\n  KeyCode[KeyCode[\"KEY_P\"] = 46] = \"KEY_P\";\n  KeyCode[KeyCode[\"KEY_Q\"] = 47] = \"KEY_Q\";\n  KeyCode[KeyCode[\"KEY_R\"] = 48] = \"KEY_R\";\n  KeyCode[KeyCode[\"KEY_S\"] = 49] = \"KEY_S\";\n  KeyCode[KeyCode[\"KEY_T\"] = 50] = \"KEY_T\";\n  KeyCode[KeyCode[\"KEY_U\"] = 51] = \"KEY_U\";\n  KeyCode[KeyCode[\"KEY_V\"] = 52] = \"KEY_V\";\n  KeyCode[KeyCode[\"KEY_W\"] = 53] = \"KEY_W\";\n  KeyCode[KeyCode[\"KEY_X\"] = 54] = \"KEY_X\";\n  KeyCode[KeyCode[\"KEY_Y\"] = 55] = \"KEY_Y\";\n  KeyCode[KeyCode[\"KEY_Z\"] = 56] = \"KEY_Z\";\n  KeyCode[KeyCode[\"Meta\"] = 57] = \"Meta\";\n  KeyCode[KeyCode[\"ContextMenu\"] = 58] = \"ContextMenu\";\n  KeyCode[KeyCode[\"F1\"] = 59] = \"F1\";\n  KeyCode[KeyCode[\"F2\"] = 60] = \"F2\";\n  KeyCode[KeyCode[\"F3\"] = 61] = \"F3\";\n  KeyCode[KeyCode[\"F4\"] = 62] = \"F4\";\n  KeyCode[KeyCode[\"F5\"] = 63] = \"F5\";\n  KeyCode[KeyCode[\"F6\"] = 64] = \"F6\";\n  KeyCode[KeyCode[\"F7\"] = 65] = \"F7\";\n  KeyCode[KeyCode[\"F8\"] = 66] = \"F8\";\n  KeyCode[KeyCode[\"F9\"] = 67] = \"F9\";\n  KeyCode[KeyCode[\"F10\"] = 68] = \"F10\";\n  KeyCode[KeyCode[\"F11\"] = 69] = \"F11\";\n  KeyCode[KeyCode[\"F12\"] = 70] = \"F12\";\n  KeyCode[KeyCode[\"F13\"] = 71] = \"F13\";\n  KeyCode[KeyCode[\"F14\"] = 72] = \"F14\";\n  KeyCode[KeyCode[\"F15\"] = 73] = \"F15\";\n  KeyCode[KeyCode[\"F16\"] = 74] = \"F16\";\n  KeyCode[KeyCode[\"F17\"] = 75] = \"F17\";\n  KeyCode[KeyCode[\"F18\"] = 76] = \"F18\";\n  KeyCode[KeyCode[\"F19\"] = 77] = \"F19\";\n  KeyCode[KeyCode[\"NumLock\"] = 78] = \"NumLock\";\n  KeyCode[KeyCode[\"ScrollLock\"] = 79] = \"ScrollLock\";\n  /**\n   * Used for miscellaneous characters; it can vary by keyboard.\n   * For the US standard keyboard, the ';:' key\n   */\n\n  KeyCode[KeyCode[\"US_SEMICOLON\"] = 80] = \"US_SEMICOLON\";\n  /**\n   * For any country/region, the '+' key\n   * For the US standard keyboard, the '=+' key\n   */\n\n  KeyCode[KeyCode[\"US_EQUAL\"] = 81] = \"US_EQUAL\";\n  /**\n   * For any country/region, the ',' key\n   * For the US standard keyboard, the ',<' key\n   */\n\n  KeyCode[KeyCode[\"US_COMMA\"] = 82] = \"US_COMMA\";\n  /**\n   * For any country/region, the '-' key\n   * For the US standard keyboard, the '-_' key\n   */\n\n  KeyCode[KeyCode[\"US_MINUS\"] = 83] = \"US_MINUS\";\n  /**\n   * For any country/region, the '.' key\n   * For the US standard keyboard, the '.>' key\n   */\n\n  KeyCode[KeyCode[\"US_DOT\"] = 84] = \"US_DOT\";\n  /**\n   * Used for miscellaneous characters; it can vary by keyboard.\n   * For the US standard keyboard, the '/?' key\n   */\n\n  KeyCode[KeyCode[\"US_SLASH\"] = 85] = \"US_SLASH\";\n  /**\n   * Used for miscellaneous characters; it can vary by keyboard.\n   * For the US standard keyboard, the '`~' key\n   */\n\n  KeyCode[KeyCode[\"US_BACKTICK\"] = 86] = \"US_BACKTICK\";\n  /**\n   * Used for miscellaneous characters; it can vary by keyboard.\n   * For the US standard keyboard, the '[{' key\n   */\n\n  KeyCode[KeyCode[\"US_OPEN_SQUARE_BRACKET\"] = 87] = \"US_OPEN_SQUARE_BRACKET\";\n  /**\n   * Used for miscellaneous characters; it can vary by keyboard.\n   * For the US standard keyboard, the '\\|' key\n   */\n\n  KeyCode[KeyCode[\"US_BACKSLASH\"] = 88] = \"US_BACKSLASH\";\n  /**\n   * Used for miscellaneous characters; it can vary by keyboard.\n   * For the US standard keyboard, the ']}' key\n   */\n\n  KeyCode[KeyCode[\"US_CLOSE_SQUARE_BRACKET\"] = 89] = \"US_CLOSE_SQUARE_BRACKET\";\n  /**\n   * Used for miscellaneous characters; it can vary by keyboard.\n   * For the US standard keyboard, the ''\"' key\n   */\n\n  KeyCode[KeyCode[\"US_QUOTE\"] = 90] = \"US_QUOTE\";\n  /**\n   * Used for miscellaneous characters; it can vary by keyboard.\n   */\n\n  KeyCode[KeyCode[\"OEM_8\"] = 91] = \"OEM_8\";\n  /**\n   * Either the angle bracket key or the backslash key on the RT 102-key keyboard.\n   */\n\n  KeyCode[KeyCode[\"OEM_102\"] = 92] = \"OEM_102\";\n  KeyCode[KeyCode[\"NUMPAD_0\"] = 93] = \"NUMPAD_0\";\n  KeyCode[KeyCode[\"NUMPAD_1\"] = 94] = \"NUMPAD_1\";\n  KeyCode[KeyCode[\"NUMPAD_2\"] = 95] = \"NUMPAD_2\";\n  KeyCode[KeyCode[\"NUMPAD_3\"] = 96] = \"NUMPAD_3\";\n  KeyCode[KeyCode[\"NUMPAD_4\"] = 97] = \"NUMPAD_4\";\n  KeyCode[KeyCode[\"NUMPAD_5\"] = 98] = \"NUMPAD_5\";\n  KeyCode[KeyCode[\"NUMPAD_6\"] = 99] = \"NUMPAD_6\";\n  KeyCode[KeyCode[\"NUMPAD_7\"] = 100] = \"NUMPAD_7\";\n  KeyCode[KeyCode[\"NUMPAD_8\"] = 101] = \"NUMPAD_8\";\n  KeyCode[KeyCode[\"NUMPAD_9\"] = 102] = \"NUMPAD_9\";\n  KeyCode[KeyCode[\"NUMPAD_MULTIPLY\"] = 103] = \"NUMPAD_MULTIPLY\";\n  KeyCode[KeyCode[\"NUMPAD_ADD\"] = 104] = \"NUMPAD_ADD\";\n  KeyCode[KeyCode[\"NUMPAD_SEPARATOR\"] = 105] = \"NUMPAD_SEPARATOR\";\n  KeyCode[KeyCode[\"NUMPAD_SUBTRACT\"] = 106] = \"NUMPAD_SUBTRACT\";\n  KeyCode[KeyCode[\"NUMPAD_DECIMAL\"] = 107] = \"NUMPAD_DECIMAL\";\n  KeyCode[KeyCode[\"NUMPAD_DIVIDE\"] = 108] = \"NUMPAD_DIVIDE\";\n  /**\n   * Cover all key codes when IME is processing input.\n   */\n\n  KeyCode[KeyCode[\"KEY_IN_COMPOSITION\"] = 109] = \"KEY_IN_COMPOSITION\";\n  KeyCode[KeyCode[\"ABNT_C1\"] = 110] = \"ABNT_C1\";\n  KeyCode[KeyCode[\"ABNT_C2\"] = 111] = \"ABNT_C2\";\n  /**\n   * Placed last to cover the length of the enum.\n   * Please do not depend on this value!\n   */\n\n  KeyCode[KeyCode[\"MAX_VALUE\"] = 112] = \"MAX_VALUE\";\n})(KeyCode || (KeyCode = {}));\n/**\n * The direction of a selection.\n */\n\n\nexport var SelectionDirection;\n\n(function (SelectionDirection) {\n  /**\n   * The selection starts above where it ends.\n   */\n  SelectionDirection[SelectionDirection[\"LTR\"] = 0] = \"LTR\";\n  /**\n   * The selection starts below where it ends.\n   */\n\n  SelectionDirection[SelectionDirection[\"RTL\"] = 1] = \"RTL\";\n})(SelectionDirection || (SelectionDirection = {}));\n\nexport var ScrollbarVisibility;\n\n(function (ScrollbarVisibility) {\n  ScrollbarVisibility[ScrollbarVisibility[\"Auto\"] = 1] = \"Auto\";\n  ScrollbarVisibility[ScrollbarVisibility[\"Hidden\"] = 2] = \"Hidden\";\n  ScrollbarVisibility[ScrollbarVisibility[\"Visible\"] = 3] = \"Visible\";\n})(ScrollbarVisibility || (ScrollbarVisibility = {}));\n/**\n * Vertical Lane in the overview ruler of the editor.\n */\n\n\nexport var OverviewRulerLane;\n\n(function (OverviewRulerLane) {\n  OverviewRulerLane[OverviewRulerLane[\"Left\"] = 1] = \"Left\";\n  OverviewRulerLane[OverviewRulerLane[\"Center\"] = 2] = \"Center\";\n  OverviewRulerLane[OverviewRulerLane[\"Right\"] = 4] = \"Right\";\n  OverviewRulerLane[OverviewRulerLane[\"Full\"] = 7] = \"Full\";\n})(OverviewRulerLane || (OverviewRulerLane = {}));\n/**\n * End of line character preference.\n */\n\n\nexport var EndOfLinePreference;\n\n(function (EndOfLinePreference) {\n  /**\n   * Use the end of line character identified in the text buffer.\n   */\n  EndOfLinePreference[EndOfLinePreference[\"TextDefined\"] = 0] = \"TextDefined\";\n  /**\n   * Use line feed (\\n) as the end of line character.\n   */\n\n  EndOfLinePreference[EndOfLinePreference[\"LF\"] = 1] = \"LF\";\n  /**\n   * Use carriage return and line feed (\\r\\n) as the end of line character.\n   */\n\n  EndOfLinePreference[EndOfLinePreference[\"CRLF\"] = 2] = \"CRLF\";\n})(EndOfLinePreference || (EndOfLinePreference = {}));\n/**\n * The default end of line to use when instantiating models.\n */\n\n\nexport var DefaultEndOfLine;\n\n(function (DefaultEndOfLine) {\n  /**\n   * Use line feed (\\n) as the end of line character.\n   */\n  DefaultEndOfLine[DefaultEndOfLine[\"LF\"] = 1] = \"LF\";\n  /**\n   * Use carriage return and line feed (\\r\\n) as the end of line character.\n   */\n\n  DefaultEndOfLine[DefaultEndOfLine[\"CRLF\"] = 2] = \"CRLF\";\n})(DefaultEndOfLine || (DefaultEndOfLine = {}));\n/**\n * End of line character preference.\n */\n\n\nexport var EndOfLineSequence;\n\n(function (EndOfLineSequence) {\n  /**\n   * Use line feed (\\n) as the end of line character.\n   */\n  EndOfLineSequence[EndOfLineSequence[\"LF\"] = 0] = \"LF\";\n  /**\n   * Use carriage return and line feed (\\r\\n) as the end of line character.\n   */\n\n  EndOfLineSequence[EndOfLineSequence[\"CRLF\"] = 1] = \"CRLF\";\n})(EndOfLineSequence || (EndOfLineSequence = {}));\n/**\n * Describes the behavior of decorations when typing/editing near their edges.\n * Note: Please do not edit the values, as they very carefully match `DecorationRangeBehavior`\n */\n\n\nexport var TrackedRangeStickiness;\n\n(function (TrackedRangeStickiness) {\n  TrackedRangeStickiness[TrackedRangeStickiness[\"AlwaysGrowsWhenTypingAtEdges\"] = 0] = \"AlwaysGrowsWhenTypingAtEdges\";\n  TrackedRangeStickiness[TrackedRangeStickiness[\"NeverGrowsWhenTypingAtEdges\"] = 1] = \"NeverGrowsWhenTypingAtEdges\";\n  TrackedRangeStickiness[TrackedRangeStickiness[\"GrowsOnlyWhenTypingBefore\"] = 2] = \"GrowsOnlyWhenTypingBefore\";\n  TrackedRangeStickiness[TrackedRangeStickiness[\"GrowsOnlyWhenTypingAfter\"] = 3] = \"GrowsOnlyWhenTypingAfter\";\n})(TrackedRangeStickiness || (TrackedRangeStickiness = {}));\n\nexport var ScrollType;\n\n(function (ScrollType) {\n  ScrollType[ScrollType[\"Smooth\"] = 0] = \"Smooth\";\n  ScrollType[ScrollType[\"Immediate\"] = 1] = \"Immediate\";\n})(ScrollType || (ScrollType = {}));\n/**\n * Describes the reason the cursor has changed its position.\n */\n\n\nexport var CursorChangeReason;\n\n(function (CursorChangeReason) {\n  /**\n   * Unknown or not set.\n   */\n  CursorChangeReason[CursorChangeReason[\"NotSet\"] = 0] = \"NotSet\";\n  /**\n   * A `model.setValue()` was called.\n   */\n\n  CursorChangeReason[CursorChangeReason[\"ContentFlush\"] = 1] = \"ContentFlush\";\n  /**\n   * The `model` has been changed outside of this cursor and the cursor recovers its position from associated markers.\n   */\n\n  CursorChangeReason[CursorChangeReason[\"RecoverFromMarkers\"] = 2] = \"RecoverFromMarkers\";\n  /**\n   * There was an explicit user gesture.\n   */\n\n  CursorChangeReason[CursorChangeReason[\"Explicit\"] = 3] = \"Explicit\";\n  /**\n   * There was a Paste.\n   */\n\n  CursorChangeReason[CursorChangeReason[\"Paste\"] = 4] = \"Paste\";\n  /**\n   * There was an Undo.\n   */\n\n  CursorChangeReason[CursorChangeReason[\"Undo\"] = 5] = \"Undo\";\n  /**\n   * There was a Redo.\n   */\n\n  CursorChangeReason[CursorChangeReason[\"Redo\"] = 6] = \"Redo\";\n})(CursorChangeReason || (CursorChangeReason = {}));\n\nexport var RenderMinimap;\n\n(function (RenderMinimap) {\n  RenderMinimap[RenderMinimap[\"None\"] = 0] = \"None\";\n  RenderMinimap[RenderMinimap[\"Small\"] = 1] = \"Small\";\n  RenderMinimap[RenderMinimap[\"Large\"] = 2] = \"Large\";\n  RenderMinimap[RenderMinimap[\"SmallBlocks\"] = 3] = \"SmallBlocks\";\n  RenderMinimap[RenderMinimap[\"LargeBlocks\"] = 4] = \"LargeBlocks\";\n})(RenderMinimap || (RenderMinimap = {}));\n/**\n * Describes how to indent wrapped lines.\n */\n\n\nexport var WrappingIndent;\n\n(function (WrappingIndent) {\n  /**\n   * No indentation => wrapped lines begin at column 1.\n   */\n  WrappingIndent[WrappingIndent[\"None\"] = 0] = \"None\";\n  /**\n   * Same => wrapped lines get the same indentation as the parent.\n   */\n\n  WrappingIndent[WrappingIndent[\"Same\"] = 1] = \"Same\";\n  /**\n   * Indent => wrapped lines get +1 indentation toward the parent.\n   */\n\n  WrappingIndent[WrappingIndent[\"Indent\"] = 2] = \"Indent\";\n  /**\n   * DeepIndent => wrapped lines get +2 indentation toward the parent.\n   */\n\n  WrappingIndent[WrappingIndent[\"DeepIndent\"] = 3] = \"DeepIndent\";\n})(WrappingIndent || (WrappingIndent = {}));\n/**\n * The kind of animation in which the editor's cursor should be rendered.\n */\n\n\nexport var TextEditorCursorBlinkingStyle;\n\n(function (TextEditorCursorBlinkingStyle) {\n  /**\n   * Hidden\n   */\n  TextEditorCursorBlinkingStyle[TextEditorCursorBlinkingStyle[\"Hidden\"] = 0] = \"Hidden\";\n  /**\n   * Blinking\n   */\n\n  TextEditorCursorBlinkingStyle[TextEditorCursorBlinkingStyle[\"Blink\"] = 1] = \"Blink\";\n  /**\n   * Blinking with smooth fading\n   */\n\n  TextEditorCursorBlinkingStyle[TextEditorCursorBlinkingStyle[\"Smooth\"] = 2] = \"Smooth\";\n  /**\n   * Blinking with prolonged filled state and smooth fading\n   */\n\n  TextEditorCursorBlinkingStyle[TextEditorCursorBlinkingStyle[\"Phase\"] = 3] = \"Phase\";\n  /**\n   * Expand collapse animation on the y axis\n   */\n\n  TextEditorCursorBlinkingStyle[TextEditorCursorBlinkingStyle[\"Expand\"] = 4] = \"Expand\";\n  /**\n   * No-Blinking\n   */\n\n  TextEditorCursorBlinkingStyle[TextEditorCursorBlinkingStyle[\"Solid\"] = 5] = \"Solid\";\n})(TextEditorCursorBlinkingStyle || (TextEditorCursorBlinkingStyle = {}));\n/**\n * The style in which the editor's cursor should be rendered.\n */\n\n\nexport var TextEditorCursorStyle;\n\n(function (TextEditorCursorStyle) {\n  /**\n   * As a vertical line (sitting between two characters).\n   */\n  TextEditorCursorStyle[TextEditorCursorStyle[\"Line\"] = 1] = \"Line\";\n  /**\n   * As a block (sitting on top of a character).\n   */\n\n  TextEditorCursorStyle[TextEditorCursorStyle[\"Block\"] = 2] = \"Block\";\n  /**\n   * As a horizontal line (sitting under a character).\n   */\n\n  TextEditorCursorStyle[TextEditorCursorStyle[\"Underline\"] = 3] = \"Underline\";\n  /**\n   * As a thin vertical line (sitting between two characters).\n   */\n\n  TextEditorCursorStyle[TextEditorCursorStyle[\"LineThin\"] = 4] = \"LineThin\";\n  /**\n   * As an outlined block (sitting on top of a character).\n   */\n\n  TextEditorCursorStyle[TextEditorCursorStyle[\"BlockOutline\"] = 5] = \"BlockOutline\";\n  /**\n   * As a thin horizontal line (sitting under a character).\n   */\n\n  TextEditorCursorStyle[TextEditorCursorStyle[\"UnderlineThin\"] = 6] = \"UnderlineThin\";\n})(TextEditorCursorStyle || (TextEditorCursorStyle = {}));\n\nexport var RenderLineNumbersType;\n\n(function (RenderLineNumbersType) {\n  RenderLineNumbersType[RenderLineNumbersType[\"Off\"] = 0] = \"Off\";\n  RenderLineNumbersType[RenderLineNumbersType[\"On\"] = 1] = \"On\";\n  RenderLineNumbersType[RenderLineNumbersType[\"Relative\"] = 2] = \"Relative\";\n  RenderLineNumbersType[RenderLineNumbersType[\"Interval\"] = 3] = \"Interval\";\n  RenderLineNumbersType[RenderLineNumbersType[\"Custom\"] = 4] = \"Custom\";\n})(RenderLineNumbersType || (RenderLineNumbersType = {}));\n/**\n * A positioning preference for rendering content widgets.\n */\n\n\nexport var ContentWidgetPositionPreference;\n\n(function (ContentWidgetPositionPreference) {\n  /**\n   * Place the content widget exactly at a position\n   */\n  ContentWidgetPositionPreference[ContentWidgetPositionPreference[\"EXACT\"] = 0] = \"EXACT\";\n  /**\n   * Place the content widget above a position\n   */\n\n  ContentWidgetPositionPreference[ContentWidgetPositionPreference[\"ABOVE\"] = 1] = \"ABOVE\";\n  /**\n   * Place the content widget below a position\n   */\n\n  ContentWidgetPositionPreference[ContentWidgetPositionPreference[\"BELOW\"] = 2] = \"BELOW\";\n})(ContentWidgetPositionPreference || (ContentWidgetPositionPreference = {}));\n/**\n * A positioning preference for rendering overlay widgets.\n */\n\n\nexport var OverlayWidgetPositionPreference;\n\n(function (OverlayWidgetPositionPreference) {\n  /**\n   * Position the overlay widget in the top right corner\n   */\n  OverlayWidgetPositionPreference[OverlayWidgetPositionPreference[\"TOP_RIGHT_CORNER\"] = 0] = \"TOP_RIGHT_CORNER\";\n  /**\n   * Position the overlay widget in the bottom right corner\n   */\n\n  OverlayWidgetPositionPreference[OverlayWidgetPositionPreference[\"BOTTOM_RIGHT_CORNER\"] = 1] = \"BOTTOM_RIGHT_CORNER\";\n  /**\n   * Position the overlay widget in the top center\n   */\n\n  OverlayWidgetPositionPreference[OverlayWidgetPositionPreference[\"TOP_CENTER\"] = 2] = \"TOP_CENTER\";\n})(OverlayWidgetPositionPreference || (OverlayWidgetPositionPreference = {}));\n/**\n * Type of hit element with the mouse in the editor.\n */\n\n\nexport var MouseTargetType;\n\n(function (MouseTargetType) {\n  /**\n   * Mouse is on top of an unknown element.\n   */\n  MouseTargetType[MouseTargetType[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\n  /**\n   * Mouse is on top of the textarea used for input.\n   */\n\n  MouseTargetType[MouseTargetType[\"TEXTAREA\"] = 1] = \"TEXTAREA\";\n  /**\n   * Mouse is on top of the glyph margin\n   */\n\n  MouseTargetType[MouseTargetType[\"GUTTER_GLYPH_MARGIN\"] = 2] = \"GUTTER_GLYPH_MARGIN\";\n  /**\n   * Mouse is on top of the line numbers\n   */\n\n  MouseTargetType[MouseTargetType[\"GUTTER_LINE_NUMBERS\"] = 3] = \"GUTTER_LINE_NUMBERS\";\n  /**\n   * Mouse is on top of the line decorations\n   */\n\n  MouseTargetType[MouseTargetType[\"GUTTER_LINE_DECORATIONS\"] = 4] = \"GUTTER_LINE_DECORATIONS\";\n  /**\n   * Mouse is on top of the whitespace left in the gutter by a view zone.\n   */\n\n  MouseTargetType[MouseTargetType[\"GUTTER_VIEW_ZONE\"] = 5] = \"GUTTER_VIEW_ZONE\";\n  /**\n   * Mouse is on top of text in the content.\n   */\n\n  MouseTargetType[MouseTargetType[\"CONTENT_TEXT\"] = 6] = \"CONTENT_TEXT\";\n  /**\n   * Mouse is on top of empty space in the content (e.g. after line text or below last line)\n   */\n\n  MouseTargetType[MouseTargetType[\"CONTENT_EMPTY\"] = 7] = \"CONTENT_EMPTY\";\n  /**\n   * Mouse is on top of a view zone in the content.\n   */\n\n  MouseTargetType[MouseTargetType[\"CONTENT_VIEW_ZONE\"] = 8] = \"CONTENT_VIEW_ZONE\";\n  /**\n   * Mouse is on top of a content widget.\n   */\n\n  MouseTargetType[MouseTargetType[\"CONTENT_WIDGET\"] = 9] = \"CONTENT_WIDGET\";\n  /**\n   * Mouse is on top of the decorations overview ruler.\n   */\n\n  MouseTargetType[MouseTargetType[\"OVERVIEW_RULER\"] = 10] = \"OVERVIEW_RULER\";\n  /**\n   * Mouse is on top of a scrollbar.\n   */\n\n  MouseTargetType[MouseTargetType[\"SCROLLBAR\"] = 11] = \"SCROLLBAR\";\n  /**\n   * Mouse is on top of an overlay widget.\n   */\n\n  MouseTargetType[MouseTargetType[\"OVERLAY_WIDGET\"] = 12] = \"OVERLAY_WIDGET\";\n  /**\n   * Mouse is outside of the editor.\n   */\n\n  MouseTargetType[MouseTargetType[\"OUTSIDE_EDITOR\"] = 13] = \"OUTSIDE_EDITOR\";\n})(MouseTargetType || (MouseTargetType = {}));\n/**\n * Describes what to do with the indentation when pressing Enter.\n */\n\n\nexport var IndentAction;\n\n(function (IndentAction) {\n  /**\n   * Insert new line and copy the previous line's indentation.\n   */\n  IndentAction[IndentAction[\"None\"] = 0] = \"None\";\n  /**\n   * Insert new line and indent once (relative to the previous line's indentation).\n   */\n\n  IndentAction[IndentAction[\"Indent\"] = 1] = \"Indent\";\n  /**\n   * Insert two new lines:\n   *  - the first one indented which will hold the cursor\n   *  - the second one at the same indentation level\n   */\n\n  IndentAction[IndentAction[\"IndentOutdent\"] = 2] = \"IndentOutdent\";\n  /**\n   * Insert new line and outdent once (relative to the previous line's indentation).\n   */\n\n  IndentAction[IndentAction[\"Outdent\"] = 3] = \"Outdent\";\n})(IndentAction || (IndentAction = {}));\n\nexport var CompletionItemKind;\n\n(function (CompletionItemKind) {\n  CompletionItemKind[CompletionItemKind[\"Method\"] = 0] = \"Method\";\n  CompletionItemKind[CompletionItemKind[\"Function\"] = 1] = \"Function\";\n  CompletionItemKind[CompletionItemKind[\"Constructor\"] = 2] = \"Constructor\";\n  CompletionItemKind[CompletionItemKind[\"Field\"] = 3] = \"Field\";\n  CompletionItemKind[CompletionItemKind[\"Variable\"] = 4] = \"Variable\";\n  CompletionItemKind[CompletionItemKind[\"Class\"] = 5] = \"Class\";\n  CompletionItemKind[CompletionItemKind[\"Struct\"] = 6] = \"Struct\";\n  CompletionItemKind[CompletionItemKind[\"Interface\"] = 7] = \"Interface\";\n  CompletionItemKind[CompletionItemKind[\"Module\"] = 8] = \"Module\";\n  CompletionItemKind[CompletionItemKind[\"Property\"] = 9] = \"Property\";\n  CompletionItemKind[CompletionItemKind[\"Event\"] = 10] = \"Event\";\n  CompletionItemKind[CompletionItemKind[\"Operator\"] = 11] = \"Operator\";\n  CompletionItemKind[CompletionItemKind[\"Unit\"] = 12] = \"Unit\";\n  CompletionItemKind[CompletionItemKind[\"Value\"] = 13] = \"Value\";\n  CompletionItemKind[CompletionItemKind[\"Constant\"] = 14] = \"Constant\";\n  CompletionItemKind[CompletionItemKind[\"Enum\"] = 15] = \"Enum\";\n  CompletionItemKind[CompletionItemKind[\"EnumMember\"] = 16] = \"EnumMember\";\n  CompletionItemKind[CompletionItemKind[\"Keyword\"] = 17] = \"Keyword\";\n  CompletionItemKind[CompletionItemKind[\"Text\"] = 18] = \"Text\";\n  CompletionItemKind[CompletionItemKind[\"Color\"] = 19] = \"Color\";\n  CompletionItemKind[CompletionItemKind[\"File\"] = 20] = \"File\";\n  CompletionItemKind[CompletionItemKind[\"Reference\"] = 21] = \"Reference\";\n  CompletionItemKind[CompletionItemKind[\"Customcolor\"] = 22] = \"Customcolor\";\n  CompletionItemKind[CompletionItemKind[\"Folder\"] = 23] = \"Folder\";\n  CompletionItemKind[CompletionItemKind[\"TypeParameter\"] = 24] = \"TypeParameter\";\n  CompletionItemKind[CompletionItemKind[\"Snippet\"] = 25] = \"Snippet\";\n})(CompletionItemKind || (CompletionItemKind = {}));\n\nexport var CompletionItemInsertTextRule;\n\n(function (CompletionItemInsertTextRule) {\n  /**\n   * Adjust whitespace/indentation of multiline insert texts to\n   * match the current line indentation.\n   */\n  CompletionItemInsertTextRule[CompletionItemInsertTextRule[\"KeepWhitespace\"] = 1] = \"KeepWhitespace\";\n  /**\n   * `insertText` is a snippet.\n   */\n\n  CompletionItemInsertTextRule[CompletionItemInsertTextRule[\"InsertAsSnippet\"] = 4] = \"InsertAsSnippet\";\n})(CompletionItemInsertTextRule || (CompletionItemInsertTextRule = {}));\n/**\n * How a suggest provider was triggered.\n */\n\n\nexport var CompletionTriggerKind;\n\n(function (CompletionTriggerKind) {\n  CompletionTriggerKind[CompletionTriggerKind[\"Invoke\"] = 0] = \"Invoke\";\n  CompletionTriggerKind[CompletionTriggerKind[\"TriggerCharacter\"] = 1] = \"TriggerCharacter\";\n  CompletionTriggerKind[CompletionTriggerKind[\"TriggerForIncompleteCompletions\"] = 2] = \"TriggerForIncompleteCompletions\";\n})(CompletionTriggerKind || (CompletionTriggerKind = {}));\n\nexport var SignatureHelpTriggerKind;\n\n(function (SignatureHelpTriggerKind) {\n  SignatureHelpTriggerKind[SignatureHelpTriggerKind[\"Invoke\"] = 1] = \"Invoke\";\n  SignatureHelpTriggerKind[SignatureHelpTriggerKind[\"TriggerCharacter\"] = 2] = \"TriggerCharacter\";\n  SignatureHelpTriggerKind[SignatureHelpTriggerKind[\"ContentChange\"] = 3] = \"ContentChange\";\n})(SignatureHelpTriggerKind || (SignatureHelpTriggerKind = {}));\n/**\n * A document highlight kind.\n */\n\n\nexport var DocumentHighlightKind;\n\n(function (DocumentHighlightKind) {\n  /**\n   * A textual occurrence.\n   */\n  DocumentHighlightKind[DocumentHighlightKind[\"Text\"] = 0] = \"Text\";\n  /**\n   * Read-access of a symbol, like reading a variable.\n   */\n\n  DocumentHighlightKind[DocumentHighlightKind[\"Read\"] = 1] = \"Read\";\n  /**\n   * Write-access of a symbol, like writing to a variable.\n   */\n\n  DocumentHighlightKind[DocumentHighlightKind[\"Write\"] = 2] = \"Write\";\n})(DocumentHighlightKind || (DocumentHighlightKind = {}));\n/**\n * A symbol kind.\n */\n\n\nexport var SymbolKind;\n\n(function (SymbolKind) {\n  SymbolKind[SymbolKind[\"File\"] = 0] = \"File\";\n  SymbolKind[SymbolKind[\"Module\"] = 1] = \"Module\";\n  SymbolKind[SymbolKind[\"Namespace\"] = 2] = \"Namespace\";\n  SymbolKind[SymbolKind[\"Package\"] = 3] = \"Package\";\n  SymbolKind[SymbolKind[\"Class\"] = 4] = \"Class\";\n  SymbolKind[SymbolKind[\"Method\"] = 5] = \"Method\";\n  SymbolKind[SymbolKind[\"Property\"] = 6] = \"Property\";\n  SymbolKind[SymbolKind[\"Field\"] = 7] = \"Field\";\n  SymbolKind[SymbolKind[\"Constructor\"] = 8] = \"Constructor\";\n  SymbolKind[SymbolKind[\"Enum\"] = 9] = \"Enum\";\n  SymbolKind[SymbolKind[\"Interface\"] = 10] = \"Interface\";\n  SymbolKind[SymbolKind[\"Function\"] = 11] = \"Function\";\n  SymbolKind[SymbolKind[\"Variable\"] = 12] = \"Variable\";\n  SymbolKind[SymbolKind[\"Constant\"] = 13] = \"Constant\";\n  SymbolKind[SymbolKind[\"String\"] = 14] = \"String\";\n  SymbolKind[SymbolKind[\"Number\"] = 15] = \"Number\";\n  SymbolKind[SymbolKind[\"Boolean\"] = 16] = \"Boolean\";\n  SymbolKind[SymbolKind[\"Array\"] = 17] = \"Array\";\n  SymbolKind[SymbolKind[\"Object\"] = 18] = \"Object\";\n  SymbolKind[SymbolKind[\"Key\"] = 19] = \"Key\";\n  SymbolKind[SymbolKind[\"Null\"] = 20] = \"Null\";\n  SymbolKind[SymbolKind[\"EnumMember\"] = 21] = \"EnumMember\";\n  SymbolKind[SymbolKind[\"Struct\"] = 22] = \"Struct\";\n  SymbolKind[SymbolKind[\"Event\"] = 23] = \"Event\";\n  SymbolKind[SymbolKind[\"Operator\"] = 24] = \"Operator\";\n  SymbolKind[SymbolKind[\"TypeParameter\"] = 25] = \"TypeParameter\";\n})(SymbolKind || (SymbolKind = {}));","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nimport { Position } from './position.js';\nimport { Range } from './range.js';\n/**\n * A selection in the editor.\n * The selection is a range that has an orientation.\n */\n\nvar Selection =\n/** @class */\nfunction (_super) {\n  __extends(Selection, _super);\n\n  function Selection(selectionStartLineNumber, selectionStartColumn, positionLineNumber, positionColumn) {\n    var _this = _super.call(this, selectionStartLineNumber, selectionStartColumn, positionLineNumber, positionColumn) || this;\n\n    _this.selectionStartLineNumber = selectionStartLineNumber;\n    _this.selectionStartColumn = selectionStartColumn;\n    _this.positionLineNumber = positionLineNumber;\n    _this.positionColumn = positionColumn;\n    return _this;\n  }\n  /**\n   * Clone this selection.\n   */\n\n\n  Selection.prototype.clone = function () {\n    return new Selection(this.selectionStartLineNumber, this.selectionStartColumn, this.positionLineNumber, this.positionColumn);\n  };\n  /**\n   * Transform to a human-readable representation.\n   */\n\n\n  Selection.prototype.toString = function () {\n    return '[' + this.selectionStartLineNumber + ',' + this.selectionStartColumn + ' -> ' + this.positionLineNumber + ',' + this.positionColumn + ']';\n  };\n  /**\n   * Test if equals other selection.\n   */\n\n\n  Selection.prototype.equalsSelection = function (other) {\n    return Selection.selectionsEqual(this, other);\n  };\n  /**\n   * Test if the two selections are equal.\n   */\n\n\n  Selection.selectionsEqual = function (a, b) {\n    return a.selectionStartLineNumber === b.selectionStartLineNumber && a.selectionStartColumn === b.selectionStartColumn && a.positionLineNumber === b.positionLineNumber && a.positionColumn === b.positionColumn;\n  };\n  /**\n   * Get directions (LTR or RTL).\n   */\n\n\n  Selection.prototype.getDirection = function () {\n    if (this.selectionStartLineNumber === this.startLineNumber && this.selectionStartColumn === this.startColumn) {\n      return 0\n      /* LTR */\n      ;\n    }\n\n    return 1\n    /* RTL */\n    ;\n  };\n  /**\n   * Create a new selection with a different `positionLineNumber` and `positionColumn`.\n   */\n\n\n  Selection.prototype.setEndPosition = function (endLineNumber, endColumn) {\n    if (this.getDirection() === 0\n    /* LTR */\n    ) {\n        return new Selection(this.startLineNumber, this.startColumn, endLineNumber, endColumn);\n      }\n\n    return new Selection(endLineNumber, endColumn, this.startLineNumber, this.startColumn);\n  };\n  /**\n   * Get the position at `positionLineNumber` and `positionColumn`.\n   */\n\n\n  Selection.prototype.getPosition = function () {\n    return new Position(this.positionLineNumber, this.positionColumn);\n  };\n  /**\n   * Create a new selection with a different `selectionStartLineNumber` and `selectionStartColumn`.\n   */\n\n\n  Selection.prototype.setStartPosition = function (startLineNumber, startColumn) {\n    if (this.getDirection() === 0\n    /* LTR */\n    ) {\n        return new Selection(startLineNumber, startColumn, this.endLineNumber, this.endColumn);\n      }\n\n    return new Selection(this.endLineNumber, this.endColumn, startLineNumber, startColumn);\n  }; // ----\n\n  /**\n   * Create a `Selection` from one or two positions\n   */\n\n\n  Selection.fromPositions = function (start, end) {\n    if (end === void 0) {\n      end = start;\n    }\n\n    return new Selection(start.lineNumber, start.column, end.lineNumber, end.column);\n  };\n  /**\n   * Create a `Selection` from an `ISelection`.\n   */\n\n\n  Selection.liftSelection = function (sel) {\n    return new Selection(sel.selectionStartLineNumber, sel.selectionStartColumn, sel.positionLineNumber, sel.positionColumn);\n  };\n  /**\n   * `a` equals `b`.\n   */\n\n\n  Selection.selectionsArrEqual = function (a, b) {\n    if (a && !b || !a && b) {\n      return false;\n    }\n\n    if (!a && !b) {\n      return true;\n    }\n\n    if (a.length !== b.length) {\n      return false;\n    }\n\n    for (var i = 0, len = a.length; i < len; i++) {\n      if (!this.selectionsEqual(a[i], b[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n  /**\n   * Test if `obj` is an `ISelection`.\n   */\n\n\n  Selection.isISelection = function (obj) {\n    return obj && typeof obj.selectionStartLineNumber === 'number' && typeof obj.selectionStartColumn === 'number' && typeof obj.positionLineNumber === 'number' && typeof obj.positionColumn === 'number';\n  };\n  /**\n   * Create with a direction.\n   */\n\n\n  Selection.createWithDirection = function (startLineNumber, startColumn, endLineNumber, endColumn, direction) {\n    if (direction === 0\n    /* LTR */\n    ) {\n        return new Selection(startLineNumber, startColumn, endLineNumber, endColumn);\n      }\n\n    return new Selection(endLineNumber, endColumn, startLineNumber, startColumn);\n  };\n\n  return Selection;\n}(Range);\n\nexport { Selection };","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar Token =\n/** @class */\nfunction () {\n  function Token(offset, type, language) {\n    this.offset = offset | 0; // @perf\n\n    this.type = type;\n    this.language = language;\n  }\n\n  Token.prototype.toString = function () {\n    return '(' + this.offset + ', ' + this.type + ')';\n  };\n\n  return Token;\n}();\n\nexport { Token };\n\nvar TokenizationResult =\n/** @class */\nfunction () {\n  function TokenizationResult(tokens, endState) {\n    this.tokens = tokens;\n    this.endState = endState;\n  }\n\n  return TokenizationResult;\n}();\n\nexport { TokenizationResult };\n\nvar TokenizationResult2 =\n/** @class */\nfunction () {\n  function TokenizationResult2(tokens, endState) {\n    this.tokens = tokens;\n    this.endState = endState;\n  }\n\n  return TokenizationResult2;\n}();\n\nexport { TokenizationResult2 };","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport './promise-polyfill/polyfill.js';\nimport { CancellationTokenSource } from '../../../base/common/cancellation.js';\nimport { Emitter } from '../../../base/common/event.js';\nimport { KeyChord } from '../../../base/common/keyCodes.js';\nimport { URI } from '../../../base/common/uri.js';\nimport { Position } from '../core/position.js';\nimport { Range } from '../core/range.js';\nimport { Selection } from '../core/selection.js';\nimport { Token } from '../core/token.js';\nimport * as standaloneEnums from './standaloneEnums.js';\n\nvar KeyMod =\n/** @class */\nfunction () {\n  function KeyMod() {}\n\n  KeyMod.chord = function (firstPart, secondPart) {\n    return KeyChord(firstPart, secondPart);\n  };\n\n  KeyMod.CtrlCmd = 2048\n  /* CtrlCmd */\n  ;\n  KeyMod.Shift = 1024\n  /* Shift */\n  ;\n  KeyMod.Alt = 512\n  /* Alt */\n  ;\n  KeyMod.WinCtrl = 256\n  /* WinCtrl */\n  ;\n  return KeyMod;\n}();\n\nexport { KeyMod };\nexport function createMonacoBaseAPI() {\n  return {\n    editor: undefined,\n    languages: undefined,\n    CancellationTokenSource: CancellationTokenSource,\n    Emitter: Emitter,\n    KeyCode: standaloneEnums.KeyCode,\n    KeyMod: KeyMod,\n    Position: Position,\n    Range: Range,\n    Selection: Selection,\n    SelectionDirection: standaloneEnums.SelectionDirection,\n    MarkerSeverity: standaloneEnums.MarkerSeverity,\n    MarkerTag: standaloneEnums.MarkerTag,\n    Uri: URI,\n    Token: Token\n  };\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nimport { mergeSort } from '../../../base/common/arrays.js';\nimport { stringDiff } from '../../../base/common/diff/diff.js';\nimport { FIN } from '../../../base/common/iterator.js';\nimport { globals } from '../../../base/common/platform.js';\nimport { URI } from '../../../base/common/uri.js';\nimport { Position } from '../core/position.js';\nimport { Range } from '../core/range.js';\nimport { DiffComputer } from '../diff/diffComputer.js';\nimport { MirrorTextModel as BaseMirrorModel } from '../model/mirrorTextModel.js';\nimport { ensureValidWordDefinition, getWordAtText } from '../model/wordHelper.js';\nimport { computeLinks } from '../modes/linkComputer.js';\nimport { BasicInplaceReplace } from '../modes/supports/inplaceReplaceSupport.js';\nimport { createMonacoBaseAPI } from '../standalone/standaloneBase.js';\nimport { getAllPropertyNames } from '../../../base/common/types.js';\n/**\n * @internal\n */\n\nvar MirrorModel =\n/** @class */\nfunction (_super) {\n  __extends(MirrorModel, _super);\n\n  function MirrorModel() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  Object.defineProperty(MirrorModel.prototype, \"uri\", {\n    get: function get() {\n      return this._uri;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(MirrorModel.prototype, \"version\", {\n    get: function get() {\n      return this._versionId;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(MirrorModel.prototype, \"eol\", {\n    get: function get() {\n      return this._eol;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  MirrorModel.prototype.getValue = function () {\n    return this.getText();\n  };\n\n  MirrorModel.prototype.getLinesContent = function () {\n    return this._lines.slice(0);\n  };\n\n  MirrorModel.prototype.getLineCount = function () {\n    return this._lines.length;\n  };\n\n  MirrorModel.prototype.getLineContent = function (lineNumber) {\n    return this._lines[lineNumber - 1];\n  };\n\n  MirrorModel.prototype.getWordAtPosition = function (position, wordDefinition) {\n    var wordAtText = getWordAtText(position.column, ensureValidWordDefinition(wordDefinition), this._lines[position.lineNumber - 1], 0);\n\n    if (wordAtText) {\n      return new Range(position.lineNumber, wordAtText.startColumn, position.lineNumber, wordAtText.endColumn);\n    }\n\n    return null;\n  };\n\n  MirrorModel.prototype.getWordUntilPosition = function (position, wordDefinition) {\n    var wordAtPosition = this.getWordAtPosition(position, wordDefinition);\n\n    if (!wordAtPosition) {\n      return {\n        word: '',\n        startColumn: position.column,\n        endColumn: position.column\n      };\n    }\n\n    return {\n      word: this._lines[position.lineNumber - 1].substring(wordAtPosition.startColumn - 1, position.column - 1),\n      startColumn: wordAtPosition.startColumn,\n      endColumn: position.column\n    };\n  };\n\n  MirrorModel.prototype.createWordIterator = function (wordDefinition) {\n    var _this = this;\n\n    var obj;\n    var lineNumber = 0;\n    var lineText;\n    var wordRangesIdx = 0;\n    var wordRanges = [];\n\n    var next = function next() {\n      if (wordRangesIdx < wordRanges.length) {\n        var value = lineText.substring(wordRanges[wordRangesIdx].start, wordRanges[wordRangesIdx].end);\n        wordRangesIdx += 1;\n\n        if (!obj) {\n          obj = {\n            done: false,\n            value: value\n          };\n        } else {\n          obj.value = value;\n        }\n\n        return obj;\n      } else if (lineNumber >= _this._lines.length) {\n        return FIN;\n      } else {\n        lineText = _this._lines[lineNumber];\n        wordRanges = _this._wordenize(lineText, wordDefinition);\n        wordRangesIdx = 0;\n        lineNumber += 1;\n        return next();\n      }\n    };\n\n    return {\n      next: next\n    };\n  };\n\n  MirrorModel.prototype.getLineWords = function (lineNumber, wordDefinition) {\n    var content = this._lines[lineNumber - 1];\n\n    var ranges = this._wordenize(content, wordDefinition);\n\n    var words = [];\n\n    for (var _i = 0, ranges_1 = ranges; _i < ranges_1.length; _i++) {\n      var range = ranges_1[_i];\n      words.push({\n        word: content.substring(range.start, range.end),\n        startColumn: range.start + 1,\n        endColumn: range.end + 1\n      });\n    }\n\n    return words;\n  };\n\n  MirrorModel.prototype._wordenize = function (content, wordDefinition) {\n    var result = [];\n    var match;\n    wordDefinition.lastIndex = 0; // reset lastIndex just to be sure\n\n    while (match = wordDefinition.exec(content)) {\n      if (match[0].length === 0) {\n        // it did match the empty string\n        break;\n      }\n\n      result.push({\n        start: match.index,\n        end: match.index + match[0].length\n      });\n    }\n\n    return result;\n  };\n\n  MirrorModel.prototype.getValueInRange = function (range) {\n    range = this._validateRange(range);\n\n    if (range.startLineNumber === range.endLineNumber) {\n      return this._lines[range.startLineNumber - 1].substring(range.startColumn - 1, range.endColumn - 1);\n    }\n\n    var lineEnding = this._eol;\n    var startLineIndex = range.startLineNumber - 1;\n    var endLineIndex = range.endLineNumber - 1;\n    var resultLines = [];\n    resultLines.push(this._lines[startLineIndex].substring(range.startColumn - 1));\n\n    for (var i = startLineIndex + 1; i < endLineIndex; i++) {\n      resultLines.push(this._lines[i]);\n    }\n\n    resultLines.push(this._lines[endLineIndex].substring(0, range.endColumn - 1));\n    return resultLines.join(lineEnding);\n  };\n\n  MirrorModel.prototype.offsetAt = function (position) {\n    position = this._validatePosition(position);\n\n    this._ensureLineStarts();\n\n    return this._lineStarts.getAccumulatedValue(position.lineNumber - 2) + (position.column - 1);\n  };\n\n  MirrorModel.prototype.positionAt = function (offset) {\n    offset = Math.floor(offset);\n    offset = Math.max(0, offset);\n\n    this._ensureLineStarts();\n\n    var out = this._lineStarts.getIndexOf(offset);\n\n    var lineLength = this._lines[out.index].length; // Ensure we return a valid position\n\n    return {\n      lineNumber: 1 + out.index,\n      column: 1 + Math.min(out.remainder, lineLength)\n    };\n  };\n\n  MirrorModel.prototype._validateRange = function (range) {\n    var start = this._validatePosition({\n      lineNumber: range.startLineNumber,\n      column: range.startColumn\n    });\n\n    var end = this._validatePosition({\n      lineNumber: range.endLineNumber,\n      column: range.endColumn\n    });\n\n    if (start.lineNumber !== range.startLineNumber || start.column !== range.startColumn || end.lineNumber !== range.endLineNumber || end.column !== range.endColumn) {\n      return {\n        startLineNumber: start.lineNumber,\n        startColumn: start.column,\n        endLineNumber: end.lineNumber,\n        endColumn: end.column\n      };\n    }\n\n    return range;\n  };\n\n  MirrorModel.prototype._validatePosition = function (position) {\n    if (!Position.isIPosition(position)) {\n      throw new Error('bad position');\n    }\n\n    var lineNumber = position.lineNumber,\n        column = position.column;\n    var hasChanged = false;\n\n    if (lineNumber < 1) {\n      lineNumber = 1;\n      column = 1;\n      hasChanged = true;\n    } else if (lineNumber > this._lines.length) {\n      lineNumber = this._lines.length;\n      column = this._lines[lineNumber - 1].length + 1;\n      hasChanged = true;\n    } else {\n      var maxCharacter = this._lines[lineNumber - 1].length + 1;\n\n      if (column < 1) {\n        column = 1;\n        hasChanged = true;\n      } else if (column > maxCharacter) {\n        column = maxCharacter;\n        hasChanged = true;\n      }\n    }\n\n    if (!hasChanged) {\n      return position;\n    } else {\n      return {\n        lineNumber: lineNumber,\n        column: column\n      };\n    }\n  };\n\n  return MirrorModel;\n}(BaseMirrorModel);\n/**\n * @internal\n */\n\n\nvar BaseEditorSimpleWorker =\n/** @class */\nfunction () {\n  function BaseEditorSimpleWorker(foreignModuleFactory) {\n    this._foreignModuleFactory = foreignModuleFactory;\n    this._foreignModule = null;\n  } // ---- BEGIN diff --------------------------------------------------------------------------\n\n\n  BaseEditorSimpleWorker.prototype.computeDiff = function (originalUrl, modifiedUrl, ignoreTrimWhitespace) {\n    var original = this._getModel(originalUrl);\n\n    var modified = this._getModel(modifiedUrl);\n\n    if (!original || !modified) {\n      return Promise.resolve(null);\n    }\n\n    var originalLines = original.getLinesContent();\n    var modifiedLines = modified.getLinesContent();\n    var diffComputer = new DiffComputer(originalLines, modifiedLines, {\n      shouldComputeCharChanges: true,\n      shouldPostProcessCharChanges: true,\n      shouldIgnoreTrimWhitespace: ignoreTrimWhitespace,\n      shouldMakePrettyDiff: true\n    });\n    var changes = diffComputer.computeDiff();\n    var identical = changes.length > 0 ? false : this._modelsAreIdentical(original, modified);\n    return Promise.resolve({\n      identical: identical,\n      changes: changes\n    });\n  };\n\n  BaseEditorSimpleWorker.prototype._modelsAreIdentical = function (original, modified) {\n    var originalLineCount = original.getLineCount();\n    var modifiedLineCount = modified.getLineCount();\n\n    if (originalLineCount !== modifiedLineCount) {\n      return false;\n    }\n\n    for (var line = 1; line <= originalLineCount; line++) {\n      var originalLine = original.getLineContent(line);\n      var modifiedLine = modified.getLineContent(line);\n\n      if (originalLine !== modifiedLine) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n\n  BaseEditorSimpleWorker.prototype.computeMoreMinimalEdits = function (modelUrl, edits) {\n    var model = this._getModel(modelUrl);\n\n    if (!model) {\n      return Promise.resolve(edits);\n    }\n\n    var result = [];\n    var lastEol = undefined;\n    edits = mergeSort(edits, function (a, b) {\n      if (a.range && b.range) {\n        return Range.compareRangesUsingStarts(a.range, b.range);\n      } // eol only changes should go to the end\n\n\n      var aRng = a.range ? 0 : 1;\n      var bRng = b.range ? 0 : 1;\n      return aRng - bRng;\n    });\n\n    for (var _i = 0, edits_1 = edits; _i < edits_1.length; _i++) {\n      var _a = edits_1[_i],\n          range = _a.range,\n          text = _a.text,\n          eol = _a.eol;\n\n      if (typeof eol === 'number') {\n        lastEol = eol;\n      }\n\n      if (Range.isEmpty(range) && !text) {\n        // empty change\n        continue;\n      }\n\n      var original = model.getValueInRange(range);\n      text = text.replace(/\\r\\n|\\n|\\r/g, model.eol);\n\n      if (original === text) {\n        // noop\n        continue;\n      } // make sure diff won't take too long\n\n\n      if (Math.max(text.length, original.length) > BaseEditorSimpleWorker._diffLimit) {\n        result.push({\n          range: range,\n          text: text\n        });\n        continue;\n      } // compute diff between original and edit.text\n\n\n      var changes = stringDiff(original, text, false);\n      var editOffset = model.offsetAt(Range.lift(range).getStartPosition());\n\n      for (var _b = 0, changes_1 = changes; _b < changes_1.length; _b++) {\n        var change = changes_1[_b];\n        var start = model.positionAt(editOffset + change.originalStart);\n        var end = model.positionAt(editOffset + change.originalStart + change.originalLength);\n        var newEdit = {\n          text: text.substr(change.modifiedStart, change.modifiedLength),\n          range: {\n            startLineNumber: start.lineNumber,\n            startColumn: start.column,\n            endLineNumber: end.lineNumber,\n            endColumn: end.column\n          }\n        };\n\n        if (model.getValueInRange(newEdit.range) !== newEdit.text) {\n          result.push(newEdit);\n        }\n      }\n    }\n\n    if (typeof lastEol === 'number') {\n      result.push({\n        eol: lastEol,\n        text: '',\n        range: {\n          startLineNumber: 0,\n          startColumn: 0,\n          endLineNumber: 0,\n          endColumn: 0\n        }\n      });\n    }\n\n    return Promise.resolve(result);\n  }; // ---- END minimal edits ---------------------------------------------------------------\n\n\n  BaseEditorSimpleWorker.prototype.computeLinks = function (modelUrl) {\n    var model = this._getModel(modelUrl);\n\n    if (!model) {\n      return Promise.resolve(null);\n    }\n\n    return Promise.resolve(computeLinks(model));\n  };\n\n  BaseEditorSimpleWorker.prototype.textualSuggest = function (modelUrl, position, wordDef, wordDefFlags) {\n    var model = this._getModel(modelUrl);\n\n    if (!model) {\n      return Promise.resolve(null);\n    }\n\n    var suggestions = [];\n    var wordDefRegExp = new RegExp(wordDef, wordDefFlags);\n    var currentWord = model.getWordUntilPosition(position, wordDefRegExp);\n    var seen = Object.create(null);\n    seen[currentWord.word] = true;\n\n    for (var iter = model.createWordIterator(wordDefRegExp), e = iter.next(); !e.done && suggestions.length <= BaseEditorSimpleWorker._suggestionsLimit; e = iter.next()) {\n      var word = e.value;\n\n      if (seen[word]) {\n        continue;\n      }\n\n      seen[word] = true;\n\n      if (!isNaN(Number(word))) {\n        continue;\n      }\n\n      suggestions.push({\n        kind: 18\n        /* Text */\n        ,\n        label: word,\n        insertText: word,\n        range: {\n          startLineNumber: position.lineNumber,\n          startColumn: currentWord.startColumn,\n          endLineNumber: position.lineNumber,\n          endColumn: currentWord.endColumn\n        }\n      });\n    }\n\n    return Promise.resolve({\n      suggestions: suggestions\n    });\n  }; // ---- END suggest --------------------------------------------------------------------------\n  //#region -- word ranges --\n\n\n  BaseEditorSimpleWorker.prototype.computeWordRanges = function (modelUrl, range, wordDef, wordDefFlags) {\n    var model = this._getModel(modelUrl);\n\n    if (!model) {\n      return Promise.resolve(Object.create(null));\n    }\n\n    var wordDefRegExp = new RegExp(wordDef, wordDefFlags);\n    var result = Object.create(null);\n\n    for (var line = range.startLineNumber; line < range.endLineNumber; line++) {\n      var words = model.getLineWords(line, wordDefRegExp);\n\n      for (var _i = 0, words_1 = words; _i < words_1.length; _i++) {\n        var word = words_1[_i];\n\n        if (!isNaN(Number(word.word))) {\n          continue;\n        }\n\n        var array = result[word.word];\n\n        if (!array) {\n          array = [];\n          result[word.word] = array;\n        }\n\n        array.push({\n          startLineNumber: line,\n          startColumn: word.startColumn,\n          endLineNumber: line,\n          endColumn: word.endColumn\n        });\n      }\n    }\n\n    return Promise.resolve(result);\n  }; //#endregion\n\n\n  BaseEditorSimpleWorker.prototype.navigateValueSet = function (modelUrl, range, up, wordDef, wordDefFlags) {\n    var model = this._getModel(modelUrl);\n\n    if (!model) {\n      return Promise.resolve(null);\n    }\n\n    var wordDefRegExp = new RegExp(wordDef, wordDefFlags);\n\n    if (range.startColumn === range.endColumn) {\n      range = {\n        startLineNumber: range.startLineNumber,\n        startColumn: range.startColumn,\n        endLineNumber: range.endLineNumber,\n        endColumn: range.endColumn + 1\n      };\n    }\n\n    var selectionText = model.getValueInRange(range);\n    var wordRange = model.getWordAtPosition({\n      lineNumber: range.startLineNumber,\n      column: range.startColumn\n    }, wordDefRegExp);\n\n    if (!wordRange) {\n      return Promise.resolve(null);\n    }\n\n    var word = model.getValueInRange(wordRange);\n    var result = BasicInplaceReplace.INSTANCE.navigateValueSet(range, selectionText, wordRange, word, up);\n    return Promise.resolve(result);\n  }; // ---- BEGIN foreign module support --------------------------------------------------------------------------\n\n\n  BaseEditorSimpleWorker.prototype.loadForeignModule = function (moduleId, createData) {\n    var _this = this;\n\n    var ctx = {\n      getMirrorModels: function getMirrorModels() {\n        return _this._getModels();\n      }\n    };\n\n    if (this._foreignModuleFactory) {\n      this._foreignModule = this._foreignModuleFactory(ctx, createData); // static foreing module\n\n      var methods = [];\n\n      for (var _i = 0, _a = getAllPropertyNames(this._foreignModule); _i < _a.length; _i++) {\n        var prop = _a[_i];\n\n        if (typeof this._foreignModule[prop] === 'function') {\n          methods.push(prop);\n        }\n      }\n\n      return Promise.resolve(methods);\n    } // ESM-comment-begin\n    // \t\treturn new Promise<any>((resolve, reject) => {\n    // \t\t\trequire([moduleId], (foreignModule: { create: IForeignModuleFactory }) => {\n    // \t\t\t\tthis._foreignModule = foreignModule.create(ctx, createData);\n    // \n    // \t\t\t\tlet methods: string[] = [];\n    // \t\t\t\tfor (const prop of getAllPropertyNames(this._foreignModule)) {\n    // \t\t\t\t\tif (typeof this._foreignModule[prop] === 'function') {\n    // \t\t\t\t\t\tmethods.push(prop);\n    // \t\t\t\t\t}\n    // \t\t\t\t}\n    // \n    // \t\t\t\tresolve(methods);\n    // \n    // \t\t\t}, reject);\n    // \t\t});\n    // ESM-comment-end\n    // ESM-uncomment-begin\n\n\n    return Promise.reject(new Error(\"Unexpected usage\")); // ESM-uncomment-end\n  }; // foreign method request\n\n\n  BaseEditorSimpleWorker.prototype.fmr = function (method, args) {\n    if (!this._foreignModule || typeof this._foreignModule[method] !== 'function') {\n      return Promise.reject(new Error('Missing requestHandler or method: ' + method));\n    }\n\n    try {\n      return Promise.resolve(this._foreignModule[method].apply(this._foreignModule, args));\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  }; // ---- END diff --------------------------------------------------------------------------\n  // ---- BEGIN minimal edits ---------------------------------------------------------------\n\n\n  BaseEditorSimpleWorker._diffLimit = 10000; // ---- BEGIN suggest --------------------------------------------------------------------------\n\n  BaseEditorSimpleWorker._suggestionsLimit = 10000;\n  return BaseEditorSimpleWorker;\n}();\n\nexport { BaseEditorSimpleWorker };\n/**\n * @internal\n */\n\nvar EditorSimpleWorkerImpl =\n/** @class */\nfunction (_super) {\n  __extends(EditorSimpleWorkerImpl, _super);\n\n  function EditorSimpleWorkerImpl(foreignModuleFactory) {\n    var _this = _super.call(this, foreignModuleFactory) || this;\n\n    _this._models = Object.create(null);\n    return _this;\n  }\n\n  EditorSimpleWorkerImpl.prototype.dispose = function () {\n    this._models = Object.create(null);\n  };\n\n  EditorSimpleWorkerImpl.prototype._getModel = function (uri) {\n    return this._models[uri];\n  };\n\n  EditorSimpleWorkerImpl.prototype._getModels = function () {\n    var _this = this;\n\n    var all = [];\n    Object.keys(this._models).forEach(function (key) {\n      return all.push(_this._models[key]);\n    });\n    return all;\n  };\n\n  EditorSimpleWorkerImpl.prototype.acceptNewModel = function (data) {\n    this._models[data.url] = new MirrorModel(URI.parse(data.url), data.lines, data.EOL, data.versionId);\n  };\n\n  EditorSimpleWorkerImpl.prototype.acceptModelChanged = function (strURL, e) {\n    if (!this._models[strURL]) {\n      return;\n    }\n\n    var model = this._models[strURL];\n    model.onEvents(e);\n  };\n\n  EditorSimpleWorkerImpl.prototype.acceptRemovedModel = function (strURL) {\n    if (!this._models[strURL]) {\n      return;\n    }\n\n    delete this._models[strURL];\n  };\n\n  return EditorSimpleWorkerImpl;\n}(BaseEditorSimpleWorker);\n\nexport { EditorSimpleWorkerImpl };\n/**\n * Called on the worker side\n * @internal\n */\n\nexport function create() {\n  return new EditorSimpleWorkerImpl(null);\n}\n\nif (typeof importScripts === 'function') {\n  // Running in a web worker\n  globals.monaco = createMonacoBaseAPI();\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { SimpleWorkerServer } from '../base/common/worker/simpleWorker.js';\nimport { EditorSimpleWorkerImpl } from './common/services/editorSimpleWorker.js';\nvar initialized = false;\nexport function initialize(foreignModule) {\n  if (initialized) {\n    return;\n  }\n\n  initialized = true;\n  var editorWorker = new EditorSimpleWorkerImpl(foreignModule);\n  var simpleWorker = new SimpleWorkerServer(function (msg) {\n    self.postMessage(msg);\n  }, editorWorker);\n\n  self.onmessage = function (e) {\n    simpleWorker.onmessage(e.data);\n  };\n}\n\nself.onmessage = function (e) {\n  // Ignore first message in this case and initialize if not yet initialized\n  if (!initialized) {\n    initialize(null);\n  }\n};"],"sourceRoot":""}