{"version":3,"sources":["../node_modules/monaco-editor/esm/vs/basic-languages/css/css.js"],"names":["__webpack_require__","r","__webpack_exports__","d","conf","language","wordPattern","comments","blockComment","brackets","autoClosingPairs","open","close","notIn","surroundingPairs","folding","markers","start","RegExp","end","defaultToken","tokenPostfix","ws","identifier","token","tokenizer","root","include","selector","next","selectorbody","selectorname","selectorattribute","term","rulevalue","warndebug","import","urldeclaration","parenthizedterm","declarationbody","comment","name","numbers","units","keyframedeclaration","switchTo","keyframebody","functioninvocation","functionarguments","strings","stringenddoublequote","stringendquote"],"mappings":"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","file":"static/js/12.20b892f6.chunk.js","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nexport var conf = {\n  wordPattern: /(#?-?\\d*\\.\\d\\w*%?)|((::|[@#.!:])?[\\w-?]+%?)|::|[@#.!:]/g,\n  comments: {\n    blockComment: ['/*', '*/']\n  },\n  brackets: [['{', '}'], ['[', ']'], ['(', ')']],\n  autoClosingPairs: [{\n    open: '{',\n    close: '}',\n    notIn: ['string', 'comment']\n  }, {\n    open: '[',\n    close: ']',\n    notIn: ['string', 'comment']\n  }, {\n    open: '(',\n    close: ')',\n    notIn: ['string', 'comment']\n  }, {\n    open: '\"',\n    close: '\"',\n    notIn: ['string', 'comment']\n  }, {\n    open: '\\'',\n    close: '\\'',\n    notIn: ['string', 'comment']\n  }],\n  surroundingPairs: [{\n    open: '{',\n    close: '}'\n  }, {\n    open: '[',\n    close: ']'\n  }, {\n    open: '(',\n    close: ')'\n  }, {\n    open: '\"',\n    close: '\"'\n  }, {\n    open: '\\'',\n    close: '\\''\n  }],\n  folding: {\n    markers: {\n      start: new RegExp(\"^\\\\s*\\\\/\\\\*\\\\s*#region\\\\b\\\\s*(.*?)\\\\s*\\\\*\\\\/\"),\n      end: new RegExp(\"^\\\\s*\\\\/\\\\*\\\\s*#endregion\\\\b.*\\\\*\\\\/\")\n    }\n  }\n};\nexport var language = {\n  defaultToken: '',\n  tokenPostfix: '.css',\n  ws: '[ \\t\\n\\r\\f]*',\n  identifier: '-?-?([a-zA-Z]|(\\\\\\\\(([0-9a-fA-F]{1,6}\\\\s?)|[^[0-9a-fA-F])))([\\\\w\\\\-]|(\\\\\\\\(([0-9a-fA-F]{1,6}\\\\s?)|[^[0-9a-fA-F])))*',\n  brackets: [{\n    open: '{',\n    close: '}',\n    token: 'delimiter.bracket'\n  }, {\n    open: '[',\n    close: ']',\n    token: 'delimiter.bracket'\n  }, {\n    open: '(',\n    close: ')',\n    token: 'delimiter.parenthesis'\n  }, {\n    open: '<',\n    close: '>',\n    token: 'delimiter.angle'\n  }],\n  tokenizer: {\n    root: [{\n      include: '@selector'\n    }],\n    selector: [{\n      include: '@comments'\n    }, {\n      include: '@import'\n    }, {\n      include: '@strings'\n    }, ['[@](keyframes|-webkit-keyframes|-moz-keyframes|-o-keyframes)', {\n      token: 'keyword',\n      next: '@keyframedeclaration'\n    }], ['[@](page|content|font-face|-moz-document)', {\n      token: 'keyword'\n    }], ['[@](charset|namespace)', {\n      token: 'keyword',\n      next: '@declarationbody'\n    }], ['(url-prefix)(\\\\()', ['attribute.value', {\n      token: 'delimiter.parenthesis',\n      next: '@urldeclaration'\n    }]], ['(url)(\\\\()', ['attribute.value', {\n      token: 'delimiter.parenthesis',\n      next: '@urldeclaration'\n    }]], {\n      include: '@selectorname'\n    }, ['[\\\\*]', 'tag'], ['[>\\\\+,]', 'delimiter'], ['\\\\[', {\n      token: 'delimiter.bracket',\n      next: '@selectorattribute'\n    }], ['{', {\n      token: 'delimiter.bracket',\n      next: '@selectorbody'\n    }]],\n    selectorbody: [{\n      include: '@comments'\n    }, ['[*_]?@identifier@ws:(?=(\\\\s|\\\\d|[^{;}]*[;}]))', 'attribute.name', '@rulevalue'], ['}', {\n      token: 'delimiter.bracket',\n      next: '@pop'\n    }]],\n    selectorname: [['(\\\\.|#(?=[^{])|%|(@identifier)|:)+', 'tag']],\n    selectorattribute: [{\n      include: '@term'\n    }, [']', {\n      token: 'delimiter.bracket',\n      next: '@pop'\n    }]],\n    term: [{\n      include: '@comments'\n    }, ['(url-prefix)(\\\\()', ['attribute.value', {\n      token: 'delimiter.parenthesis',\n      next: '@urldeclaration'\n    }]], ['(url)(\\\\()', ['attribute.value', {\n      token: 'delimiter.parenthesis',\n      next: '@urldeclaration'\n    }]], {\n      include: '@functioninvocation'\n    }, {\n      include: '@numbers'\n    }, {\n      include: '@name'\n    }, ['([<>=\\\\+\\\\-\\\\*\\\\/\\\\^\\\\|\\\\~,])', 'delimiter'], [',', 'delimiter']],\n    rulevalue: [{\n      include: '@comments'\n    }, {\n      include: '@strings'\n    }, {\n      include: '@term'\n    }, ['!important', 'keyword'], [';', 'delimiter', '@pop'], ['(?=})', {\n      token: '',\n      next: '@pop'\n    }] // missing semicolon\n    ],\n    warndebug: [['[@](warn|debug)', {\n      token: 'keyword',\n      next: '@declarationbody'\n    }]],\n    import: [['[@](import)', {\n      token: 'keyword',\n      next: '@declarationbody'\n    }]],\n    urldeclaration: [{\n      include: '@strings'\n    }, ['[^)\\r\\n]+', 'string'], ['\\\\)', {\n      token: 'delimiter.parenthesis',\n      next: '@pop'\n    }]],\n    parenthizedterm: [{\n      include: '@term'\n    }, ['\\\\)', {\n      token: 'delimiter.parenthesis',\n      next: '@pop'\n    }]],\n    declarationbody: [{\n      include: '@term'\n    }, [';', 'delimiter', '@pop'], ['(?=})', {\n      token: '',\n      next: '@pop'\n    }] // missing semicolon\n    ],\n    comments: [['\\\\/\\\\*', 'comment', '@comment'], ['\\\\/\\\\/+.*', 'comment']],\n    comment: [['\\\\*\\\\/', 'comment', '@pop'], [/[^*/]+/, 'comment'], [/./, 'comment']],\n    name: [['@identifier', 'attribute.value']],\n    numbers: [['-?(\\\\d*\\\\.)?\\\\d+([eE][\\\\-+]?\\\\d+)?', {\n      token: 'attribute.value.number',\n      next: '@units'\n    }], ['#[0-9a-fA-F_]+(?!\\\\w)', 'attribute.value.hex']],\n    units: [['(em|ex|ch|rem|vmin|vmax|vw|vh|vm|cm|mm|in|px|pt|pc|deg|grad|rad|turn|s|ms|Hz|kHz|%)?', 'attribute.value.unit', '@pop']],\n    keyframedeclaration: [['@identifier', 'attribute.value'], ['{', {\n      token: 'delimiter.bracket',\n      switchTo: '@keyframebody'\n    }]],\n    keyframebody: [{\n      include: '@term'\n    }, ['{', {\n      token: 'delimiter.bracket',\n      next: '@selectorbody'\n    }], ['}', {\n      token: 'delimiter.bracket',\n      next: '@pop'\n    }]],\n    functioninvocation: [['@identifier\\\\(', {\n      token: 'attribute.value',\n      next: '@functionarguments'\n    }]],\n    functionarguments: [['\\\\$@identifier@ws:', 'attribute.name'], ['[,]', 'delimiter'], {\n      include: '@term'\n    }, ['\\\\)', {\n      token: 'attribute.value',\n      next: '@pop'\n    }]],\n    strings: [['~?\"', {\n      token: 'string',\n      next: '@stringenddoublequote'\n    }], ['~?\\'', {\n      token: 'string',\n      next: '@stringendquote'\n    }]],\n    stringenddoublequote: [['\\\\\\\\.', 'string'], ['\"', {\n      token: 'string',\n      next: '@pop'\n    }], [/[^\\\\\"]+/, 'string'], ['.', 'string']],\n    stringendquote: [['\\\\\\\\.', 'string'], ['\\'', {\n      token: 'string',\n      next: '@pop'\n    }], [/[^\\\\']+/, 'string'], ['.', 'string']]\n  }\n};"],"sourceRoot":""}