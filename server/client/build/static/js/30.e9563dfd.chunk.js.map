{"version":3,"sources":["../node_modules/monaco-editor/esm/vs/basic-languages/powerquery/powerquery.js"],"names":["__webpack_require__","r","__webpack_exports__","d","conf","language","comments","lineComment","blockComment","brackets","autoClosingPairs","open","close","notIn","defaultToken","tokenPostfix","ignoreCase","token","operatorKeywords","keywords","constructors","constants","typeKeywords","builtinFunctions","builtinConstants","builtinTypes","tokenizer","root","cases","@typeKeywords","@keywords","@constants","@constructors","@operatorKeywords","@default","@builtinTypes","@builtinFunctions","@builtinConstants","include","whitespace","comment","strings","string"],"mappings":"2FAAAA,EAAAC,EAAAC,GAAAF,EAAAG,EAAAD,EAAA,yBAAAE,IAAAJ,EAAAG,EAAAD,EAAA,6BAAAG,IAMO,IAAAD,EAAA,CACPE,SAAA,CACAC,YAAA,KACAC,aAAA,aAEAC,SAAA,0BAAwC,MACxCC,iBAAA,EACAC,KAAA,IACAC,MAAA,IACAC,MAAA,mCACG,CACHF,KAAA,IACAC,MAAA,IACAC,MAAA,mCACG,CACHF,KAAA,IACAC,MAAA,IACAC,MAAA,mCACG,CACHF,KAAA,IACAC,MAAA,IACAC,MAAA,qCAGOR,EAAA,CACPS,aAAA,GACAC,aAAA,MACAC,YAAA,EACAP,SAAA,EACAE,KAAA,IACAC,MAAA,IACAK,MAAA,oBACG,CACHN,KAAA,IACAC,MAAA,IACAK,MAAA,sBACG,CACHN,KAAA,IACAC,MAAA,IACAK,MAAA,0BAEAC,iBAAA,mBACAC,SAAA,2HACAC,aAAA,6EACAC,UAAA,2CACAC,aAAA,qKACAC,iBAAA,u2WACAC,iBAAA,giEACAC,aAAA,m3BACAC,UAAA,CACAC,KAAA,CACA,mCACA,gHACA,iBACAC,MAAA,CACAC,gBAAA,OACAC,YAAA,UACAC,aAAA,WACAC,gBAAA,cACAC,oBAAA,YACAC,WAAA,gBAGA,kCACAN,MAAA,CACAO,gBAAA,OACAD,WAAA,gBAGA,+CACAN,MAAA,CACAQ,oBAAA,mBACAC,oBAAA,WACAH,WAAA,gBAGA,yCACAI,QAAA,eACK,CACLA,QAAA,aACK,CACLA,QAAA,YACK,cAAO,4FAAsG,cAClHC,WAAA,kBACAjC,SAAA,0DACAkC,QAAA,8CACAC,QAAA,2BACAC,OAAA","file":"static/js/30.e9563dfd.chunk.js","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nexport var conf = {\n  comments: {\n    lineComment: '//',\n    blockComment: ['/*', '*/']\n  },\n  brackets: [['[', ']'], ['(', ')'], ['{', '}']],\n  autoClosingPairs: [{\n    open: '\"',\n    close: '\"',\n    notIn: ['string', 'comment', 'identifier']\n  }, {\n    open: '[',\n    close: ']',\n    notIn: ['string', 'comment', 'identifier']\n  }, {\n    open: '(',\n    close: ')',\n    notIn: ['string', 'comment', 'identifier']\n  }, {\n    open: '{',\n    close: '}',\n    notIn: ['string', 'comment', 'identifier']\n  }]\n};\nexport var language = {\n  defaultToken: '',\n  tokenPostfix: '.pq',\n  ignoreCase: false,\n  brackets: [{\n    open: '[',\n    close: ']',\n    token: 'delimiter.square'\n  }, {\n    open: '{',\n    close: '}',\n    token: 'delimiter.brackets'\n  }, {\n    open: '(',\n    close: ')',\n    token: 'delimiter.parenthesis'\n  }],\n  operatorKeywords: [\"and\", \"not\", \"or\"],\n  keywords: [\"as\", \"each\", \"else\", \"error\", \"false\", \"if\", \"in\", \"is\", \"let\", \"meta\", \"otherwise\", \"section\", \"shared\", \"then\", \"true\", \"try\", \"type\"],\n  constructors: [\"#binary\", \"#date\", \"#datetime\", \"#datetimezone\", \"#duration\", \"#table\", \"#time\"],\n  constants: [\"#infinity\", \"#nan\", \"#sections\", \"#shared\"],\n  typeKeywords: [\"action\", \"any\", \"anynonnull\", \"none\", \"null\", \"logical\", \"number\", \"time\", \"date\", \"datetime\", \"datetimezone\", \"duration\", \"text\", \"binary\", \"list\", \"record\", \"table\", \"function\"],\n  builtinFunctions: [\"Access.Database\", \"Action.Return\", \"Action.Sequence\", \"Action.Try\", \"ActiveDirectory.Domains\", \"AdoDotNet.DataSource\", \"AdoDotNet.Query\", \"AdobeAnalytics.Cubes\", \"AnalysisServices.Database\", \"AnalysisServices.Databases\", \"AzureStorage.BlobContents\", \"AzureStorage.Blobs\", \"AzureStorage.Tables\", \"Binary.Buffer\", \"Binary.Combine\", \"Binary.Compress\", \"Binary.Decompress\", \"Binary.End\", \"Binary.From\", \"Binary.FromList\", \"Binary.FromText\", \"Binary.InferContentType\", \"Binary.Length\", \"Binary.ToList\", \"Binary.ToText\", \"BinaryFormat.7BitEncodedSignedInteger\", \"BinaryFormat.7BitEncodedUnsignedInteger\", \"BinaryFormat.Binary\", \"BinaryFormat.Byte\", \"BinaryFormat.ByteOrder\", \"BinaryFormat.Choice\", \"BinaryFormat.Decimal\", \"BinaryFormat.Double\", \"BinaryFormat.Group\", \"BinaryFormat.Length\", \"BinaryFormat.List\", \"BinaryFormat.Null\", \"BinaryFormat.Record\", \"BinaryFormat.SignedInteger16\", \"BinaryFormat.SignedInteger32\", \"BinaryFormat.SignedInteger64\", \"BinaryFormat.Single\", \"BinaryFormat.Text\", \"BinaryFormat.Transform\", \"BinaryFormat.UnsignedInteger16\", \"BinaryFormat.UnsignedInteger32\", \"BinaryFormat.UnsignedInteger64\", \"Byte.From\", \"Character.FromNumber\", \"Character.ToNumber\", \"Combiner.CombineTextByDelimiter\", \"Combiner.CombineTextByEachDelimiter\", \"Combiner.CombineTextByLengths\", \"Combiner.CombineTextByPositions\", \"Combiner.CombineTextByRanges\", \"Comparer.Equals\", \"Comparer.FromCulture\", \"Comparer.Ordinal\", \"Comparer.OrdinalIgnoreCase\", \"Csv.Document\", \"Cube.AddAndExpandDimensionColumn\", \"Cube.AddMeasureColumn\", \"Cube.ApplyParameter\", \"Cube.AttributeMemberId\", \"Cube.AttributeMemberProperty\", \"Cube.CollapseAndRemoveColumns\", \"Cube.Dimensions\", \"Cube.DisplayFolders\", \"Cube.Measures\", \"Cube.Parameters\", \"Cube.Properties\", \"Cube.PropertyKey\", \"Cube.ReplaceDimensions\", \"Cube.Transform\", \"Currency.From\", \"DB2.Database\", \"Date.AddDays\", \"Date.AddMonths\", \"Date.AddQuarters\", \"Date.AddWeeks\", \"Date.AddYears\", \"Date.Day\", \"Date.DayOfWeek\", \"Date.DayOfWeekName\", \"Date.DayOfYear\", \"Date.DaysInMonth\", \"Date.EndOfDay\", \"Date.EndOfMonth\", \"Date.EndOfQuarter\", \"Date.EndOfWeek\", \"Date.EndOfYear\", \"Date.From\", \"Date.FromText\", \"Date.IsInCurrentDay\", \"Date.IsInCurrentMonth\", \"Date.IsInCurrentQuarter\", \"Date.IsInCurrentWeek\", \"Date.IsInCurrentYear\", \"Date.IsInNextDay\", \"Date.IsInNextMonth\", \"Date.IsInNextNDays\", \"Date.IsInNextNMonths\", \"Date.IsInNextNQuarters\", \"Date.IsInNextNWeeks\", \"Date.IsInNextNYears\", \"Date.IsInNextQuarter\", \"Date.IsInNextWeek\", \"Date.IsInNextYear\", \"Date.IsInPreviousDay\", \"Date.IsInPreviousMonth\", \"Date.IsInPreviousNDays\", \"Date.IsInPreviousNMonths\", \"Date.IsInPreviousNQuarters\", \"Date.IsInPreviousNWeeks\", \"Date.IsInPreviousNYears\", \"Date.IsInPreviousQuarter\", \"Date.IsInPreviousWeek\", \"Date.IsInPreviousYear\", \"Date.IsInYearToDate\", \"Date.IsLeapYear\", \"Date.Month\", \"Date.MonthName\", \"Date.QuarterOfYear\", \"Date.StartOfDay\", \"Date.StartOfMonth\", \"Date.StartOfQuarter\", \"Date.StartOfWeek\", \"Date.StartOfYear\", \"Date.ToRecord\", \"Date.ToText\", \"Date.WeekOfMonth\", \"Date.WeekOfYear\", \"Date.Year\", \"DateTime.AddZone\", \"DateTime.Date\", \"DateTime.FixedLocalNow\", \"DateTime.From\", \"DateTime.FromFileTime\", \"DateTime.FromText\", \"DateTime.IsInCurrentHour\", \"DateTime.IsInCurrentMinute\", \"DateTime.IsInCurrentSecond\", \"DateTime.IsInNextHour\", \"DateTime.IsInNextMinute\", \"DateTime.IsInNextNHours\", \"DateTime.IsInNextNMinutes\", \"DateTime.IsInNextNSeconds\", \"DateTime.IsInNextSecond\", \"DateTime.IsInPreviousHour\", \"DateTime.IsInPreviousMinute\", \"DateTime.IsInPreviousNHours\", \"DateTime.IsInPreviousNMinutes\", \"DateTime.IsInPreviousNSeconds\", \"DateTime.IsInPreviousSecond\", \"DateTime.LocalNow\", \"DateTime.Time\", \"DateTime.ToRecord\", \"DateTime.ToText\", \"DateTimeZone.FixedLocalNow\", \"DateTimeZone.FixedUtcNow\", \"DateTimeZone.From\", \"DateTimeZone.FromFileTime\", \"DateTimeZone.FromText\", \"DateTimeZone.LocalNow\", \"DateTimeZone.RemoveZone\", \"DateTimeZone.SwitchZone\", \"DateTimeZone.ToLocal\", \"DateTimeZone.ToRecord\", \"DateTimeZone.ToText\", \"DateTimeZone.ToUtc\", \"DateTimeZone.UtcNow\", \"DateTimeZone.ZoneHours\", \"DateTimeZone.ZoneMinutes\", \"Decimal.From\", \"Diagnostics.ActivityId\", \"Diagnostics.Trace\", \"DirectQueryCapabilities.From\", \"Double.From\", \"Duration.Days\", \"Duration.From\", \"Duration.FromText\", \"Duration.Hours\", \"Duration.Minutes\", \"Duration.Seconds\", \"Duration.ToRecord\", \"Duration.ToText\", \"Duration.TotalDays\", \"Duration.TotalHours\", \"Duration.TotalMinutes\", \"Duration.TotalSeconds\", \"Embedded.Value\", \"Error.Record\", \"Excel.CurrentWorkbook\", \"Excel.Workbook\", \"Exchange.Contents\", \"Expression.Constant\", \"Expression.Evaluate\", \"Expression.Identifier\", \"Facebook.Graph\", \"File.Contents\", \"Folder.Contents\", \"Folder.Files\", \"Function.From\", \"Function.Invoke\", \"Function.InvokeAfter\", \"Function.IsDataSource\", \"GoogleAnalytics.Accounts\", \"Guid.From\", \"HdInsight.Containers\", \"HdInsight.Contents\", \"HdInsight.Files\", \"Hdfs.Contents\", \"Hdfs.Files\", \"Informix.Database\", \"Int16.From\", \"Int32.From\", \"Int64.From\", \"Int8.From\", \"ItemExpression.From\", \"Json.Document\", \"Json.FromValue\", \"Lines.FromBinary\", \"Lines.FromText\", \"Lines.ToBinary\", \"Lines.ToText\", \"List.Accumulate\", \"List.AllTrue\", \"List.Alternate\", \"List.AnyTrue\", \"List.Average\", \"List.Buffer\", \"List.Combine\", \"List.Contains\", \"List.ContainsAll\", \"List.ContainsAny\", \"List.Count\", \"List.Covariance\", \"List.DateTimeZones\", \"List.DateTimes\", \"List.Dates\", \"List.Difference\", \"List.Distinct\", \"List.Durations\", \"List.FindText\", \"List.First\", \"List.FirstN\", \"List.Generate\", \"List.InsertRange\", \"List.Intersect\", \"List.IsDistinct\", \"List.IsEmpty\", \"List.Last\", \"List.LastN\", \"List.MatchesAll\", \"List.MatchesAny\", \"List.Max\", \"List.MaxN\", \"List.Median\", \"List.Min\", \"List.MinN\", \"List.Mode\", \"List.Modes\", \"List.NonNullCount\", \"List.Numbers\", \"List.PositionOf\", \"List.PositionOfAny\", \"List.Positions\", \"List.Product\", \"List.Random\", \"List.Range\", \"List.RemoveFirstN\", \"List.RemoveItems\", \"List.RemoveLastN\", \"List.RemoveMatchingItems\", \"List.RemoveNulls\", \"List.RemoveRange\", \"List.Repeat\", \"List.ReplaceMatchingItems\", \"List.ReplaceRange\", \"List.ReplaceValue\", \"List.Reverse\", \"List.Select\", \"List.Single\", \"List.SingleOrDefault\", \"List.Skip\", \"List.Sort\", \"List.StandardDeviation\", \"List.Sum\", \"List.Times\", \"List.Transform\", \"List.TransformMany\", \"List.Union\", \"List.Zip\", \"Logical.From\", \"Logical.FromText\", \"Logical.ToText\", \"MQ.Queue\", \"MySQL.Database\", \"Number.Abs\", \"Number.Acos\", \"Number.Asin\", \"Number.Atan\", \"Number.Atan2\", \"Number.BitwiseAnd\", \"Number.BitwiseNot\", \"Number.BitwiseOr\", \"Number.BitwiseShiftLeft\", \"Number.BitwiseShiftRight\", \"Number.BitwiseXor\", \"Number.Combinations\", \"Number.Cos\", \"Number.Cosh\", \"Number.Exp\", \"Number.Factorial\", \"Number.From\", \"Number.FromText\", \"Number.IntegerDivide\", \"Number.IsEven\", \"Number.IsNaN\", \"Number.IsOdd\", \"Number.Ln\", \"Number.Log\", \"Number.Log10\", \"Number.Mod\", \"Number.Permutations\", \"Number.Power\", \"Number.Random\", \"Number.RandomBetween\", \"Number.Round\", \"Number.RoundAwayFromZero\", \"Number.RoundDown\", \"Number.RoundTowardZero\", \"Number.RoundUp\", \"Number.Sign\", \"Number.Sin\", \"Number.Sinh\", \"Number.Sqrt\", \"Number.Tan\", \"Number.Tanh\", \"Number.ToText\", \"OData.Feed\", \"Odbc.DataSource\", \"Odbc.Query\", \"OleDb.DataSource\", \"OleDb.Query\", \"Oracle.Database\", \"Percentage.From\", \"PostgreSQL.Database\", \"RData.FromBinary\", \"Record.AddField\", \"Record.Combine\", \"Record.Field\", \"Record.FieldCount\", \"Record.FieldNames\", \"Record.FieldOrDefault\", \"Record.FieldValues\", \"Record.FromList\", \"Record.FromTable\", \"Record.HasFields\", \"Record.RemoveFields\", \"Record.RenameFields\", \"Record.ReorderFields\", \"Record.SelectFields\", \"Record.ToList\", \"Record.ToTable\", \"Record.TransformFields\", \"Replacer.ReplaceText\", \"Replacer.ReplaceValue\", \"RowExpression.Column\", \"RowExpression.From\", \"Salesforce.Data\", \"Salesforce.Reports\", \"SapBusinessWarehouse.Cubes\", \"SapHana.Database\", \"SharePoint.Contents\", \"SharePoint.Files\", \"SharePoint.Tables\", \"Single.From\", \"Soda.Feed\", \"Splitter.SplitByNothing\", \"Splitter.SplitTextByAnyDelimiter\", \"Splitter.SplitTextByDelimiter\", \"Splitter.SplitTextByEachDelimiter\", \"Splitter.SplitTextByLengths\", \"Splitter.SplitTextByPositions\", \"Splitter.SplitTextByRanges\", \"Splitter.SplitTextByRepeatedLengths\", \"Splitter.SplitTextByWhitespace\", \"Sql.Database\", \"Sql.Databases\", \"SqlExpression.SchemaFrom\", \"SqlExpression.ToExpression\", \"Sybase.Database\", \"Table.AddColumn\", \"Table.AddIndexColumn\", \"Table.AddJoinColumn\", \"Table.AddKey\", \"Table.AggregateTableColumn\", \"Table.AlternateRows\", \"Table.Buffer\", \"Table.Column\", \"Table.ColumnCount\", \"Table.ColumnNames\", \"Table.ColumnsOfType\", \"Table.Combine\", \"Table.CombineColumns\", \"Table.Contains\", \"Table.ContainsAll\", \"Table.ContainsAny\", \"Table.DemoteHeaders\", \"Table.Distinct\", \"Table.DuplicateColumn\", \"Table.ExpandListColumn\", \"Table.ExpandRecordColumn\", \"Table.ExpandTableColumn\", \"Table.FillDown\", \"Table.FillUp\", \"Table.FilterWithDataTable\", \"Table.FindText\", \"Table.First\", \"Table.FirstN\", \"Table.FirstValue\", \"Table.FromColumns\", \"Table.FromList\", \"Table.FromPartitions\", \"Table.FromRecords\", \"Table.FromRows\", \"Table.FromValue\", \"Table.Group\", \"Table.HasColumns\", \"Table.InsertRows\", \"Table.IsDistinct\", \"Table.IsEmpty\", \"Table.Join\", \"Table.Keys\", \"Table.Last\", \"Table.LastN\", \"Table.MatchesAllRows\", \"Table.MatchesAnyRows\", \"Table.Max\", \"Table.MaxN\", \"Table.Min\", \"Table.MinN\", \"Table.NestedJoin\", \"Table.Partition\", \"Table.PartitionValues\", \"Table.Pivot\", \"Table.PositionOf\", \"Table.PositionOfAny\", \"Table.PrefixColumns\", \"Table.Profile\", \"Table.PromoteHeaders\", \"Table.Range\", \"Table.RemoveColumns\", \"Table.RemoveFirstN\", \"Table.RemoveLastN\", \"Table.RemoveMatchingRows\", \"Table.RemoveRows\", \"Table.RemoveRowsWithErrors\", \"Table.RenameColumns\", \"Table.ReorderColumns\", \"Table.Repeat\", \"Table.ReplaceErrorValues\", \"Table.ReplaceKeys\", \"Table.ReplaceMatchingRows\", \"Table.ReplaceRelationshipIdentity\", \"Table.ReplaceRows\", \"Table.ReplaceValue\", \"Table.ReverseRows\", \"Table.RowCount\", \"Table.Schema\", \"Table.SelectColumns\", \"Table.SelectRows\", \"Table.SelectRowsWithErrors\", \"Table.SingleRow\", \"Table.Skip\", \"Table.Sort\", \"Table.SplitColumn\", \"Table.ToColumns\", \"Table.ToList\", \"Table.ToRecords\", \"Table.ToRows\", \"Table.TransformColumnNames\", \"Table.TransformColumnTypes\", \"Table.TransformColumns\", \"Table.TransformRows\", \"Table.Transpose\", \"Table.Unpivot\", \"Table.UnpivotOtherColumns\", \"Table.View\", \"Table.ViewFunction\", \"TableAction.DeleteRows\", \"TableAction.InsertRows\", \"TableAction.UpdateRows\", \"Tables.GetRelationships\", \"Teradata.Database\", \"Text.AfterDelimiter\", \"Text.At\", \"Text.BeforeDelimiter\", \"Text.BetweenDelimiters\", \"Text.Clean\", \"Text.Combine\", \"Text.Contains\", \"Text.End\", \"Text.EndsWith\", \"Text.Format\", \"Text.From\", \"Text.FromBinary\", \"Text.Insert\", \"Text.Length\", \"Text.Lower\", \"Text.Middle\", \"Text.NewGuid\", \"Text.PadEnd\", \"Text.PadStart\", \"Text.PositionOf\", \"Text.PositionOfAny\", \"Text.Proper\", \"Text.Range\", \"Text.Remove\", \"Text.RemoveRange\", \"Text.Repeat\", \"Text.Replace\", \"Text.ReplaceRange\", \"Text.Select\", \"Text.Split\", \"Text.SplitAny\", \"Text.Start\", \"Text.StartsWith\", \"Text.ToBinary\", \"Text.ToList\", \"Text.Trim\", \"Text.TrimEnd\", \"Text.TrimStart\", \"Text.Upper\", \"Time.EndOfHour\", \"Time.From\", \"Time.FromText\", \"Time.Hour\", \"Time.Minute\", \"Time.Second\", \"Time.StartOfHour\", \"Time.ToRecord\", \"Time.ToText\", \"Type.AddTableKey\", \"Type.ClosedRecord\", \"Type.Facets\", \"Type.ForFunction\", \"Type.ForRecord\", \"Type.FunctionParameters\", \"Type.FunctionRequiredParameters\", \"Type.FunctionReturn\", \"Type.Is\", \"Type.IsNullable\", \"Type.IsOpenRecord\", \"Type.ListItem\", \"Type.NonNullable\", \"Type.OpenRecord\", \"Type.RecordFields\", \"Type.ReplaceFacets\", \"Type.ReplaceTableKeys\", \"Type.TableColumn\", \"Type.TableKeys\", \"Type.TableRow\", \"Type.TableSchema\", \"Type.Union\", \"Uri.BuildQueryString\", \"Uri.Combine\", \"Uri.EscapeDataString\", \"Uri.Parts\", \"Value.Add\", \"Value.As\", \"Value.Compare\", \"Value.Divide\", \"Value.Equals\", \"Value.Firewall\", \"Value.FromText\", \"Value.Is\", \"Value.Metadata\", \"Value.Multiply\", \"Value.NativeQuery\", \"Value.NullableEquals\", \"Value.RemoveMetadata\", \"Value.ReplaceMetadata\", \"Value.ReplaceType\", \"Value.Subtract\", \"Value.Type\", \"ValueAction.NativeStatement\", \"ValueAction.Replace\", \"Variable.Value\", \"Web.Contents\", \"Web.Page\", \"WebAction.Request\", \"Xml.Document\", \"Xml.Tables\"],\n  builtinConstants: [\"BinaryEncoding.Base64\", \"BinaryEncoding.Hex\", \"BinaryOccurrence.Optional\", \"BinaryOccurrence.Repeating\", \"BinaryOccurrence.Required\", \"ByteOrder.BigEndian\", \"ByteOrder.LittleEndian\", \"Compression.Deflate\", \"Compression.GZip\", \"CsvStyle.QuoteAfterDelimiter\", \"CsvStyle.QuoteAlways\", \"Culture.Current\", \"Day.Friday\", \"Day.Monday\", \"Day.Saturday\", \"Day.Sunday\", \"Day.Thursday\", \"Day.Tuesday\", \"Day.Wednesday\", \"ExtraValues.Error\", \"ExtraValues.Ignore\", \"ExtraValues.List\", \"GroupKind.Global\", \"GroupKind.Local\", \"JoinAlgorithm.Dynamic\", \"JoinAlgorithm.LeftHash\", \"JoinAlgorithm.LeftIndex\", \"JoinAlgorithm.PairwiseHash\", \"JoinAlgorithm.RightHash\", \"JoinAlgorithm.RightIndex\", \"JoinAlgorithm.SortMerge\", \"JoinKind.FullOuter\", \"JoinKind.Inner\", \"JoinKind.LeftAnti\", \"JoinKind.LeftOuter\", \"JoinKind.RightAnti\", \"JoinKind.RightOuter\", \"JoinSide.Left\", \"JoinSide.Right\", \"MissingField.Error\", \"MissingField.Ignore\", \"MissingField.UseNull\", \"Number.E\", \"Number.Epsilon\", \"Number.NaN\", \"Number.NegativeInfinity\", \"Number.PI\", \"Number.PositiveInfinity\", \"Occurrence.All\", \"Occurrence.First\", \"Occurrence.Last\", \"Occurrence.Optional\", \"Occurrence.Repeating\", \"Occurrence.Required\", \"Order.Ascending\", \"Order.Descending\", \"Precision.Decimal\", \"Precision.Double\", \"QuoteStyle.Csv\", \"QuoteStyle.None\", \"RelativePosition.FromEnd\", \"RelativePosition.FromStart\", \"RoundingMode.AwayFromZero\", \"RoundingMode.Down\", \"RoundingMode.ToEven\", \"RoundingMode.TowardZero\", \"RoundingMode.Up\", \"SapHanaDistribution.All\", \"SapHanaDistribution.Connection\", \"SapHanaDistribution.Off\", \"SapHanaDistribution.Statement\", \"SapHanaRangeOperator.Equals\", \"SapHanaRangeOperator.GreaterThan\", \"SapHanaRangeOperator.GreaterThanOrEquals\", \"SapHanaRangeOperator.LessThan\", \"SapHanaRangeOperator.LessThanOrEquals\", \"SapHanaRangeOperator.NotEquals\", \"TextEncoding.Ascii\", \"TextEncoding.BigEndianUnicode\", \"TextEncoding.Unicode\", \"TextEncoding.Utf16\", \"TextEncoding.Utf8\", \"TextEncoding.Windows\", \"TraceLevel.Critical\", \"TraceLevel.Error\", \"TraceLevel.Information\", \"TraceLevel.Verbose\", \"TraceLevel.Warning\", \"WebMethod.Delete\", \"WebMethod.Get\", \"WebMethod.Head\", \"WebMethod.Patch\", \"WebMethod.Post\", \"WebMethod.Put\"],\n  builtinTypes: [\"Action.Type\", \"Any.Type\", \"Binary.Type\", \"BinaryEncoding.Type\", \"BinaryOccurrence.Type\", \"Byte.Type\", \"ByteOrder.Type\", \"Character.Type\", \"Compression.Type\", \"CsvStyle.Type\", \"Currency.Type\", \"Date.Type\", \"DateTime.Type\", \"DateTimeZone.Type\", \"Day.Type\", \"Decimal.Type\", \"Double.Type\", \"Duration.Type\", \"ExtraValues.Type\", \"Function.Type\", \"GroupKind.Type\", \"Guid.Type\", \"Int16.Type\", \"Int32.Type\", \"Int64.Type\", \"Int8.Type\", \"JoinAlgorithm.Type\", \"JoinKind.Type\", \"JoinSide.Type\", \"List.Type\", \"Logical.Type\", \"MissingField.Type\", \"None.Type\", \"Null.Type\", \"Number.Type\", \"Occurrence.Type\", \"Order.Type\", \"Password.Type\", \"Percentage.Type\", \"Precision.Type\", \"QuoteStyle.Type\", \"Record.Type\", \"RelativePosition.Type\", \"RoundingMode.Type\", \"SapHanaDistribution.Type\", \"SapHanaRangeOperator.Type\", \"Single.Type\", \"Table.Type\", \"Text.Type\", \"TextEncoding.Type\", \"Time.Type\", \"TraceLevel.Type\", \"Type.Type\", \"Uri.Type\", \"WebMethod.Type\"],\n  tokenizer: {\n    root: [// quoted identifier\n    [/#\"[\\w \\.]+\"/, \"identifier.quote\"], // numbers\n    [/\\d*\\.\\d+([eE][\\-+]?\\d+)?/, \"number.float\"], [/0[xX][0-9a-fA-F]+/, \"number.hex\"], [/\\d+([eE][\\-+]?\\d+)?/, \"number\"], // keywords\n    [/(#?[a-z]+)\\b/, {\n      cases: {\n        \"@typeKeywords\": \"type\",\n        \"@keywords\": \"keyword\",\n        \"@constants\": \"constant\",\n        \"@constructors\": \"constructor\",\n        \"@operatorKeywords\": \"operators\",\n        \"@default\": \"identifier\"\n      }\n    }], // built-in types\n    [/\\b([A-Z][a-zA-Z0-9]+\\.Type)\\b/, {\n      cases: {\n        \"@builtinTypes\": \"type\",\n        \"@default\": \"identifier\"\n      }\n    }], // other built-ins\n    [/\\b([A-Z][a-zA-Z0-9]+\\.[A-Z][a-zA-Z0-9]+)\\b/, {\n      cases: {\n        \"@builtinFunctions\": \"keyword.function\",\n        \"@builtinConstants\": \"constant\",\n        \"@default\": \"identifier\"\n      }\n    }], // other identifiers\n    [/\\b([a-zA-Z_][\\w\\.]*)\\b/, \"identifier\"], {\n      include: \"@whitespace\"\n    }, {\n      include: \"@comments\"\n    }, {\n      include: \"@strings\"\n    }, [/[{}()\\[\\]]/, \"@brackets\"], [/([=\\+<>\\-\\*&@\\?\\/!])|([<>]=)|(<>)|(=>)|(\\.\\.\\.)|(\\.\\.)/, \"operators\"], [/[,;]/, \"delimiter\"]],\n    whitespace: [[/\\s+/, \"white\"]],\n    comments: [[\"\\\\/\\\\*\", \"comment\", \"@comment\"], [\"\\\\/\\\\/+.*\", \"comment\"]],\n    comment: [[\"\\\\*\\\\/\", \"comment\", \"@pop\"], [\".\", \"comment\"]],\n    strings: [[\"\\\"\", \"string\", \"@string\"]],\n    string: [[\"\\\"\\\"\", \"string.escape\"], [\"\\\"\", \"string\", \"@pop\"], [\".\", \"string\"]]\n  }\n};"],"sourceRoot":""}