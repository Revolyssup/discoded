{"version":3,"sources":["../node_modules/monaco-editor/esm/vs/basic-languages/dockerfile/dockerfile.js"],"names":["__webpack_require__","r","__webpack_exports__","d","conf","language","brackets","autoClosingPairs","open","close","surroundingPairs","defaultToken","tokenPostfix","variable","tokenizer","root","include","token","next","arguments","cases","@eos","@default","whitespace","comment","strings","stringBody","dblStringBody"],"mappings":"2FAAAA,EAAAC,EAAAC,GAAAF,EAAAG,EAAAD,EAAA,yBAAAE,IAAAJ,EAAAG,EAAAD,EAAA,6BAAAG,IAMO,IAAAD,EAAA,CACPE,SAAA,MAAgB,KAAK,qBACrBC,iBAAA,EACAC,KAAA,IACAC,MAAA,KACG,CACHD,KAAA,IACAC,MAAA,KACG,CACHD,KAAA,IACAC,MAAA,KACG,CACHD,KAAA,IACAC,MAAA,KACG,CACHD,KAAA,IACAC,MAAA,MAEAC,iBAAA,EACAF,KAAA,IACAC,MAAA,KACG,CACHD,KAAA,IACAC,MAAA,KACG,CACHD,KAAA,IACAC,MAAA,KACG,CACHD,KAAA,IACAC,MAAA,KACG,CACHD,KAAA,IACAC,MAAA,OAGOJ,EAAA,CACPM,aAAA,GACAC,aAAA,cACAC,SAAA,cACAC,UAAA,CACAC,KAAA,EACAC,QAAA,eACK,CACLA,QAAA,YACK,sEACLC,MAAA,WACAC,KAAA,gBACK,wHACLD,MAAA,UACAC,KAAA,gBAEAC,UAAA,EACAH,QAAA,eACK,CACLA,QAAA,YACK,gBACLI,MAAA,CACAC,OAAA,CACAJ,MAAA,WACAC,KAAA,WAEAI,WAAA,cAEK,OACLF,MAAA,CACAC,OAAA,GACAC,WAAA,MAEK,MACLF,MAAA,CACAC,OAAA,CACAJ,MAAA,GACAC,KAAA,WAEAI,WAAA,OAIAC,WAAA,SACAH,MAAA,CACAC,OAAA,CACAJ,MAAA,GACAC,KAAA,WAEAI,WAAA,OAGAE,QAAA,kCAEAC,QAAA,mHACAC,WAAA,cACAN,MAAA,CACAC,OAAA,CACAJ,MAAA,SACAC,KAAA,WAEAI,WAAA,YAEK,8IACLK,cAAA,cACAP,MAAA,CACAC,OAAA,CACAJ,MAAA,SACAC,KAAA,WAEAI,WAAA,YAEK","file":"static/js/13.7ed20ede.chunk.js","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nexport var conf = {\n  brackets: [['{', '}'], ['[', ']'], ['(', ')']],\n  autoClosingPairs: [{\n    open: '{',\n    close: '}'\n  }, {\n    open: '[',\n    close: ']'\n  }, {\n    open: '(',\n    close: ')'\n  }, {\n    open: '\"',\n    close: '\"'\n  }, {\n    open: '\\'',\n    close: '\\''\n  }],\n  surroundingPairs: [{\n    open: '{',\n    close: '}'\n  }, {\n    open: '[',\n    close: ']'\n  }, {\n    open: '(',\n    close: ')'\n  }, {\n    open: '\"',\n    close: '\"'\n  }, {\n    open: '\\'',\n    close: '\\''\n  }]\n};\nexport var language = {\n  defaultToken: '',\n  tokenPostfix: '.dockerfile',\n  variable: /\\${?[\\w]+}?/,\n  tokenizer: {\n    root: [{\n      include: '@whitespace'\n    }, {\n      include: '@comment'\n    }, [/(ONBUILD)(\\s+)/, ['keyword', '']], [/(ENV)(\\s+)([\\w]+)/, ['keyword', '', {\n      token: 'variable',\n      next: '@arguments'\n    }]], [/(FROM|MAINTAINER|RUN|EXPOSE|ENV|ADD|ARG|VOLUME|LABEL|USER|WORKDIR|COPY|CMD|STOPSIGNAL|SHELL|HEALTHCHECK|ENTRYPOINT)/, {\n      token: 'keyword',\n      next: '@arguments'\n    }]],\n    arguments: [{\n      include: '@whitespace'\n    }, {\n      include: '@strings'\n    }, [/(@variable)/, {\n      cases: {\n        '@eos': {\n          token: 'variable',\n          next: '@popall'\n        },\n        '@default': 'variable'\n      }\n    }], [/\\\\/, {\n      cases: {\n        '@eos': '',\n        '@default': ''\n      }\n    }], [/./, {\n      cases: {\n        '@eos': {\n          token: '',\n          next: '@popall'\n        },\n        '@default': ''\n      }\n    }]],\n    // Deal with white space, including comments\n    whitespace: [[/\\s+/, {\n      cases: {\n        '@eos': {\n          token: '',\n          next: '@popall'\n        },\n        '@default': ''\n      }\n    }]],\n    comment: [[/(^#.*$)/, 'comment', '@popall']],\n    // Recognize strings, including those broken across lines with \\ (but not without)\n    strings: [[/'$/, 'string', '@popall'], [/'/, 'string', '@stringBody'], [/\"$/, 'string', '@popall'], [/\"/, 'string', '@dblStringBody']],\n    stringBody: [[/[^\\\\\\$']/, {\n      cases: {\n        '@eos': {\n          token: 'string',\n          next: '@popall'\n        },\n        '@default': 'string'\n      }\n    }], [/\\\\./, 'string.escape'], [/'$/, 'string', '@popall'], [/'/, 'string', '@pop'], [/(@variable)/, 'variable'], [/\\\\$/, 'string'], [/$/, 'string', '@popall']],\n    dblStringBody: [[/[^\\\\\\$\"]/, {\n      cases: {\n        '@eos': {\n          token: 'string',\n          next: '@popall'\n        },\n        '@default': 'string'\n      }\n    }], [/\\\\./, 'string.escape'], [/\"$/, 'string', '@popall'], [/\"/, 'string', '@pop'], [/(@variable)/, 'variable'], [/\\\\$/, 'string'], [/$/, 'string', '@popall']]\n  }\n};"],"sourceRoot":""}