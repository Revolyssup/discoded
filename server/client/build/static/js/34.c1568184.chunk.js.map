{"version":3,"sources":["../node_modules/monaco-editor/esm/vs/basic-languages/r/r.js"],"names":["__webpack_require__","r","__webpack_exports__","d","conf","language","comments","lineComment","brackets","autoClosingPairs","open","close","surroundingPairs","defaultToken","tokenPostfix","roxygen","constants","keywords","special","token","tokenizer","root","include","cases","@keywords","@constants","@default","@roxygen","@eos","next","numbers","operators","strings","stringBody","@special","dblStringBody"],"mappings":"2FAAAA,EAAAC,EAAAC,GAAAF,EAAAG,EAAAD,EAAA,yBAAAE,IAAAJ,EAAAG,EAAAD,EAAA,6BAAAG,IAMO,IAAAD,EAAA,CACPE,SAAA,CACAC,YAAA,KAEAC,SAAA,MAAgB,KAAK,qBACrBC,iBAAA,EACAC,KAAA,IACAC,MAAA,KACG,CACHD,KAAA,IACAC,MAAA,KACG,CACHD,KAAA,IACAC,MAAA,KACG,CACHD,KAAA,IACAC,MAAA,MAEAC,iBAAA,EACAF,KAAA,IACAC,MAAA,KACG,CACHD,KAAA,IACAC,MAAA,KACG,CACHD,KAAA,IACAC,MAAA,KACG,CACHD,KAAA,IACAC,MAAA,OAGON,EAAA,CACPQ,aAAA,GACAC,aAAA,KACAC,QAAA,wcACAC,UAAA,+KACAC,SAAA,2PACAC,QAAA,+DACAV,SAAA,EACAE,KAAA,IACAC,MAAA,IACAQ,MAAA,mBACG,CACHT,KAAA,IACAC,MAAA,IACAQ,MAAA,qBACG,CACHT,KAAA,IACAC,MAAA,IACAQ,MAAA,0BAEAC,UAAA,CACAC,KAAA,EACAC,QAAA,YACK,CACLA,QAAA,YACK,cAAO,cACZA,QAAA,cACK,+EAAqF,oDAC1FC,MAAA,CACAC,YAAA,UACAC,aAAA,WACAC,WAAA,iBAIAX,QAAA,UACAQ,MAAA,CACAI,WAAA,MACAC,OAAA,CACAT,MAAA,cACAU,KAAA,QAEAH,WAAA,iBAEK,QACLH,MAAA,CACAK,OAAA,CACAT,MAAA,cACAU,KAAA,QAEAH,WAAA,iBAEK,OACLP,MAAA,cACAU,KAAA,UAGAC,QAAA,gFAEAC,UAAA,YAAwB,uBAA0B,uLAElDC,QAAA,6EACAC,WAAA,SACAV,MAAA,CACAW,WAAA,SACAR,WAAA,iBAEK,gDACLS,cAAA,SACAZ,MAAA,CACAW,WAAA,SACAR,WAAA,iBAEK","file":"static/js/34.c1568184.chunk.js","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nexport var conf = {\n  comments: {\n    lineComment: '#'\n  },\n  brackets: [['{', '}'], ['[', ']'], ['(', ')']],\n  autoClosingPairs: [{\n    open: '{',\n    close: '}'\n  }, {\n    open: '[',\n    close: ']'\n  }, {\n    open: '(',\n    close: ')'\n  }, {\n    open: '\"',\n    close: '\"'\n  }],\n  surroundingPairs: [{\n    open: '{',\n    close: '}'\n  }, {\n    open: '[',\n    close: ']'\n  }, {\n    open: '(',\n    close: ')'\n  }, {\n    open: '\"',\n    close: '\"'\n  }]\n};\nexport var language = {\n  defaultToken: '',\n  tokenPostfix: '.r',\n  roxygen: ['@param', '@return', '@name', '@rdname', '@examples', '@include', '@docType', '@S3method', '@TODO', '@aliases', '@alias', '@assignee', '@author', '@callGraphDepth', '@callGraph', '@callGraphPrimitives', '@concept', '@exportClass', '@exportMethod', '@exportPattern', '@export', '@formals', '@format', '@importClassesFrom', '@importFrom', '@importMethodsFrom', '@import', '@keywords', '@method', '@nord', '@note', '@references', '@seealso', '@setClass', '@slot', '@source', '@title', '@usage'],\n  constants: ['NULL', 'FALSE', 'TRUE', 'NA', 'Inf', 'NaN ', 'NA_integer_', 'NA_real_', 'NA_complex_', 'NA_character_ ', 'T', 'F', 'LETTERS', 'letters', 'month.abb', 'month.name', 'pi', 'R.version.string'],\n  keywords: ['break', 'next', 'return', 'if', 'else', 'for', 'in', 'repeat', 'while', 'array', 'category', 'character', 'complex', 'double', 'function', 'integer', 'list', 'logical', 'matrix', 'numeric', 'vector', 'data.frame', 'factor', 'library', 'require', 'attach', 'detach', 'source'],\n  special: ['\\\\n', '\\\\r', '\\\\t', '\\\\b', '\\\\a', '\\\\f', '\\\\v', '\\\\\\'', '\\\\\"', '\\\\\\\\'],\n  brackets: [{\n    open: '{',\n    close: '}',\n    token: 'delimiter.curly'\n  }, {\n    open: '[',\n    close: ']',\n    token: 'delimiter.bracket'\n  }, {\n    open: '(',\n    close: ')',\n    token: 'delimiter.parenthesis'\n  }],\n  tokenizer: {\n    root: [{\n      include: '@numbers'\n    }, {\n      include: '@strings'\n    }, [/[{}\\[\\]()]/, '@brackets'], {\n      include: '@operators'\n    }, [/#'/, 'comment.doc', '@roxygen'], [/(^#.*$)/, 'comment'], [/\\s+/, 'white'], [/[,:;]/, 'delimiter'], [/@[a-zA-Z]\\w*/, 'tag'], [/[a-zA-Z]\\w*/, {\n      cases: {\n        '@keywords': 'keyword',\n        '@constants': 'constant',\n        '@default': 'identifier'\n      }\n    }]],\n    // Recognize Roxygen comments\n    roxygen: [[/@\\w+/, {\n      cases: {\n        '@roxygen': 'tag',\n        '@eos': {\n          token: 'comment.doc',\n          next: '@pop'\n        },\n        '@default': 'comment.doc'\n      }\n    }], [/\\s+/, {\n      cases: {\n        '@eos': {\n          token: 'comment.doc',\n          next: '@pop'\n        },\n        '@default': 'comment.doc'\n      }\n    }], [/.*/, {\n      token: 'comment.doc',\n      next: '@pop'\n    }]],\n    // Recognize positives, negatives, decimals, imaginaries, and scientific notation\n    numbers: [[/0[xX][0-9a-fA-F]+/, 'number.hex'], [/-?(\\d*\\.)?\\d+([eE][+\\-]?\\d+)?/, 'number']],\n    // Recognize operators\n    operators: [[/<{1,2}-/, 'operator'], [/->{1,2}/, 'operator'], [/%[^%\\s]+%/, 'operator'], [/\\*\\*/, 'operator'], [/%%/, 'operator'], [/&&/, 'operator'], [/\\|\\|/, 'operator'], [/<</, 'operator'], [/>>/, 'operator'], [/[-+=&|!<>^~*/:$]/, 'operator']],\n    // Recognize strings, including those broken across lines\n    strings: [[/'/, 'string.escape', '@stringBody'], [/\"/, 'string.escape', '@dblStringBody']],\n    stringBody: [[/\\\\./, {\n      cases: {\n        '@special': 'string',\n        '@default': 'error-token'\n      }\n    }], [/'/, 'string.escape', '@popall'], [/./, 'string']],\n    dblStringBody: [[/\\\\./, {\n      cases: {\n        '@special': 'string',\n        '@default': 'error-token'\n      }\n    }], [/\"/, 'string.escape', '@popall'], [/./, 'string']]\n  }\n};"],"sourceRoot":""}