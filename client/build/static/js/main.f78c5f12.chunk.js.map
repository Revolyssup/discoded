{"version":3,"sources":["components/upperTab/editorSetting/editorSetting.module.css","components/upperTab/collaborators/collaborators.module.css","components/Button/button.module.css","components/upperTab/upperTab.module.css","components/upperTab/editorSetting/editorSetting.js","components/upperTab/collaborators/collaborators.js","components/Button/button.js","components/upperTab/upperTab.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","controlLabel","picker","collaborators","show","option","default","danger","success","tab","editorSetting","_ref","getLanguage","getTheme","react_default","a","createElement","className","Classes","onChange","state","handleClick","_this","setState","_this2","this","onClick","style","margin","e","props","modal","React","PureComponent","button","type","display","click","name","upperTab","collaborators_collaborators","Button_button","ReactModal","setAppElement","App","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","event","language","target","value","theme","saveCode","newValue","code","saveInput","input","data","axios","post","then","res","output","catch","err","console","log","handleCloseModal","preventDefault","showModal","whichModal","prevState","add","inputField","delete","handleOpenModal","currentTarget","innerHTML","Set","editor","monaco","focus","lib_default","width","height","document","documentElement","clientHeight","options","selectOnLineNumbers","editorDidMount","placeholder","error","stderror","react_modal_lib_default","isOpen","contentLabel","onRequestClose","overlayClassName","htmlFor","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f78c5f12.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"controlLabel\":\"editorSetting_controlLabel__qOrd2\",\"picker\":\"editorSetting_picker__LgHmD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"collaborators\":\"collaborators_collaborators__ZveAR\",\"show\":\"collaborators_show__2o0Ij\",\"option\":\"collaborators_option__uz5R1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"button_default__3KiSZ\",\"danger\":\"button_danger__f8tBy\",\"success\":\"button_success__2lLij\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tab\":\"upperTab_tab__2Ft3S\"};","import React from 'react';\nimport Classes from './editorSetting.module.css';\n\nexport default function editorSetting({ getLanguage, getTheme }) {\n    return (\n        <div>\n            <label className={Classes.controlLabel}>Language</label>\n            <select className={Classes.picker} onChange={getLanguage}>\n                <option>JavaScript</option>\n                <option>C++</option>\n                <option>C</option>\n                <option>Python3</option>\n            </select>\n            <label className={Classes.controlLabel}>Theme</label>\n            <select className={Classes.picker} onChange={getTheme}>\n                <option>Dark</option>\n                <option>Light</option>\n            </select>\n        </div>\n    )\n}\n","import React from 'react';\nimport Classes from './collaborators.module.css';\n\nexport default class collaborators extends React.PureComponent {\n    state = {\n        show: false\n    }\n\n    handleClick = () => this.setState({ show: !this.state.show });\n    render() {\n        return (\n            <div>\n                <div className={Classes.collaborators} onClick={this.handleClick}>\n                    <i className=\"fas fa-users fa-lg\" style={{ margin: \"0 0.5rem\" }}></i>\n                    Collaborators\n                </div>\n                {this.state.show ?\n                    <div className={Classes.show}>\n                        <div\n                            className={Classes.option}\n                            onClick={(e) => { this.props.modal(e); this.handleClick() }}>\n                            Add\n                        </div>\n                        <div\n                            className={Classes.option}\n                            onClick={(e) => { this.props.modal(e); this.handleClick() }}>\n                            Remove\n                        </div>\n                    </div> : null\n                }\n            </div>\n        )\n    }\n\n}\n","import React from 'react';\nimport Classes from './button.module.css'\nconst button = props => {\n    switch (props.type) {\n        case 'success':\n            return <button\n                className={Classes.success}\n                style={{ display: props.display }}\n                onClick={e => props.click(e)}>\n                {props.name}\n            </button>\n        case 'danger':\n            return <button\n                className={Classes.danger}\n                style={{ display: props.display }}\n                onClick={e => props.click(e)}>\n                {props.name}\n            </button>\n        default:\n            return <button\n                className={Classes.default}\n                style={{ display: props.display }}\n                onClick={e => props.click(e)}>\n                {props.name}\n            </button>\n    }\n}\n\nexport default button","import React from 'react';\nimport Classes from './upperTab.module.css';\nimport EditorSetting from './editorSetting/editorSetting';\nimport Collaborators from './collaborators/collaborators';\nimport Button from '../Button/button';\n\nexport default function upperTab({ getLanguage, getTheme, click, modal }) {\n    return (\n        <div className={Classes.tab}>\n            <Collaborators modal={modal} />\n            <EditorSetting getLanguage={getLanguage} getTheme={getTheme} />\n            <Button type='success' name='Build' click={click} />\n        </div>\n    )\n}\n","import React from 'react';\nimport MonacoEditor from 'react-monaco-editor';\nimport axios from 'axios';\nimport ReactModal from 'react-modal';\nimport './App.css';\nimport UpperTab from \"./components/upperTab/upperTab\";\nimport Button from './components/Button/button';\n\nReactModal.setAppElement('#root');\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      code: '// type your code...',\n      language: 'javascript',\n      theme: 'vs-dark',\n      output: '',\n      input: '',\n      collaborators: new Set([]),\n      showModal: false,\n      whichModal: '',\n      inputField: ''\n    }\n  }\n\n  editorDidMount(editor, monaco) {\n    editor.focus();\n  }\n\n  // Make the language compliant to the backend needs\n  getLanguage = (event) => {\n    let language;\n    if (event.target.value === 'C++')\n      language = 'cpp';\n    else if (event.target.value === 'C')\n      language = 'c';\n    else if (event.target.value === 'JavaScript')\n      language = 'javascript';\n    else if (event.target.value === 'Python3')\n      language = 'python';\n    this.setState({ language })\n  }\n\n  // Set the theme of the editor using this function\n  getTheme = (event) => {\n    if (event.target.value === 'Light')\n      this.setState({ theme: 'vs' })\n    else\n      this.setState({ theme: 'vs-dark' });\n  }\n\n  // Save code into the state\n  saveCode = (newValue) => {\n    this.setState({ code: newValue });\n  }\n\n  // Save input parameters into the state\n  saveInput = (event) => {\n    this.setState({ input: event.target.value })\n    event.target.value = '';\n  }\n\n  // Handle click event@ BUILD button\n  click = () => {\n    const data = {\n      language: this.state.language,\n      code: this.state.code,\n      input: this.state.input\n    }\n\n    axios.post('/api/newcode', data)\n      .then(res => {\n        this.setState({ output: res.data });\n      })\n      .catch(err => console.log(err));\n  }\n\n  // handle modal\n  handleCloseModal = (e) => {\n    e.preventDefault();\n    this.setState({ showModal: false });\n    if (this.state.whichModal === 'Add')\n      this.setState((prevState, props) => {\n        return ({\n          collaborators: prevState.collaborators.add(this.state.inputField)\n        })\n      })\n    else\n      this.setState((prevState, props) => {\n        prevState.collaborators.delete(this.state.inputField);\n        return ({\n          collaborators: this.state.collaborators\n        })\n      })\n  }\n\n  handleOpenModal = (e) => {\n    this.setState({ showModal: true });\n    console.log(e.currentTarget.innerHTML);\n    if (this.state.inputField)\n      this.setState({ whichModal: e.currentTarget.innerHTML })\n  }\n\n  render() {\n    const code = this.state.code;\n    const options = {\n      selectOnLineNumbers: true\n    };\n    return (\n      <div className=\"App\">\n        <div className=\"editor\">\n          <UpperTab getLanguage={this.getLanguage}\n            getTheme={this.getTheme}\n            click={this.click}\n            modal={this.handleOpenModal} />\n          <MonacoEditor\n            width=\"70vw\"\n            height={(document.documentElement.clientHeight * (3 / 5)) - (2.5 * 16)}\n            language={this.state.language}\n            theme={this.state.theme}\n            value={code}\n            options={options}\n            onChange={this.saveCode}\n            editorDidMount={this.editorDidMount}\n          />\n        </div>\n        {/* <div className=\"view\">\n          <div className=\"info\">Your socket id is: 65555423fhjv65</div>\n          <div className=\"msgBlock\"></div>\n          <div className=\"field\">\n            <form className=\"form\">\n              <input className=\"inputField\" placeholder=\"Type your message...\"></input>\n              <button className=\"button\">Send</button>\n            </form>\n          </div>\n        </div> */}\n        <div className='input'>\n          <textarea\n            className='textBox'\n            value={this.state.input}\n            onChange={this.saveInput}\n            placeholder=\"Input goes here...\" />\n        </div>\n        <div className='output'>\n          <div className='outputArea'>\n            <code>\n              OUTPUT:<br />\n              output: {this.state.output.output}\n              error: {this.state.output.error}\n              stderr: {this.state.output.stderror}\n              <br />\n            </code>\n          </div>\n        </div>\n        <ReactModal\n          isOpen={this.state.showModal}\n          contentLabel=\"onRequestClose Example\"\n          onRequestClose={this.handleCloseModal}\n          className=\"Modal\"\n          overlayClassName=\"Overlay\"\n        >\n          <div>\n            <form>\n              <div>\n                HINT: Socket ID can be found on right side of your screen (on top of chat section)\n              </div>\n              <label htmlFor=\"socketID\">Enter Socker ID of the Collaborator</label>\n              <input\n                name=\"socketID\"\n                type=\"text\"\n                placeholder=\"Enter socket id\"\n                onChange={e => this.setState({ inputField: e.target.value })}></input>\n              <Button click={this.handleCloseModal} name=\"Submit\" />\n            </form>\n          </div>\n        </ReactModal>\n      </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}