{"version":3,"sources":["../../server/client/node_modules/monaco-editor/esm/vs/basic-languages/powershell/powershell.js"],"names":["__webpack_require__","r","__webpack_exports__","d","conf","language","wordPattern","comments","lineComment","blockComment","brackets","autoClosingPairs","open","close","notIn","surroundingPairs","folding","markers","start","RegExp","end","defaultToken","ignoreCase","tokenPostfix","token","keywords","helpKeywords","symbols","escapes","tokenizer","root","cases","@keywords","@default","@eos","next","string","$S2==\"","$#==$S2","herestring","$1==$S2","comment"],"mappings":"2FAAAA,EAAAC,EAAAC,GAAAF,EAAAG,EAAAD,EAAA,yBAAAE,IAAAJ,EAAAG,EAAAD,EAAA,6BAAAG,IAMO,IAAAD,EAAA,CAEPE,YAAA,oFACAC,SAAA,CACAC,YAAA,IACAC,aAAA,aAEAC,SAAA,MAAgB,KAAK,qBACrBC,iBAAA,EACAC,KAAA,IACAC,MAAA,KACG,CACHD,KAAA,IACAC,MAAA,KACG,CACHD,KAAA,IACAC,MAAA,KACG,CACHD,KAAA,IACAC,MAAA,IACAC,MAAA,YACG,CACHF,KAAA,IACAC,MAAA,IACAC,MAAA,uBAEAC,iBAAA,EACAH,KAAA,IACAC,MAAA,KACG,CACHD,KAAA,IACAC,MAAA,KACG,CACHD,KAAA,IACAC,MAAA,KACG,CACHD,KAAA,IACAC,MAAA,KACG,CACHD,KAAA,IACAC,MAAA,MAEAG,QAAA,CACAC,QAAA,CACAC,MAAA,IAAAC,OAAA,mBACAC,IAAA,IAAAD,OAAA,yBAIOd,EAAA,CACPgB,aAAA,GACAC,YAAA,EACAC,aAAA,OACAb,SAAA,EACAc,MAAA,kBACAZ,KAAA,IACAC,MAAA,KACG,CACHW,MAAA,mBACAZ,KAAA,IACAC,MAAA,KACG,CACHW,MAAA,wBACAZ,KAAA,IACAC,MAAA,MAEAY,SAAA,oUACAC,aAAA,0KAEAC,QAAA,2BACAC,QAAA,wEAEAC,UAAA,CACAC,KAAA,CACA,oBACAC,MAAA,CACAC,YAAA,CACAR,MAAA,cAEAS,WAAA,MAGA,kBACA,oBACA,qGAAyD,YACzD,+CACA,cAAS,sCACT,6GACA,SAAQ,aACR,wEACAF,MAAA,CACAG,OAAA,SACAD,WAAA,CACAT,MAAA,SACAW,KAAA,gBAGK,MACLJ,MAAA,CACAG,OAAA,SACAD,WAAA,CACAT,MAAA,SACAW,KAAA,iBAIAC,OAAA,eACAL,MAAA,CACAG,OAAA,CACAV,MAAA,SACAW,KAAA,WAEAF,WAAA,YAEK,aACLF,MAAA,CACAG,OAAA,CACAV,MAAA,gBACAW,KAAA,WAEAF,WAAA,mBAEK,OACLF,MAAA,CACAG,OAAA,CACAV,MAAA,wBACAW,KAAA,WAEAF,WAAA,2BAEK,aACLF,MAAA,CACAM,SAAA,CACAb,MAAA,WACAW,KAAA,WAEAF,WAAA,CACAT,MAAA,SACAW,KAAA,cAGK,YACLJ,MAAA,CACAM,SAAA,WACAJ,WAAA,YAEK,SACLF,MAAA,CACAO,UAAA,CACAd,MAAA,SACAW,KAAA,QAEAF,WAAA,CACAF,MAAA,CACAG,OAAA,CACAV,MAAA,SACAW,KAAA,WAEAF,WAAA,eAKAM,WAAA,iBACAR,MAAA,CACAS,UAAA,CACAhB,MAAA,SACAW,KAAA,QAEAF,WAAA,YAEK,6FACLF,MAAA,CACAM,SAAA,WACAJ,WAAA,aAGAQ,QAAA,6EACAjB,MAAA,uBACK","file":"static/js/41.d7ce803d.chunk.js","sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nexport var conf = {\n  // the default separators except `$-`\n  wordPattern: /(-?\\d*\\.\\d\\w*)|([^\\`\\~\\!\\@\\#%\\^\\&\\*\\(\\)\\=\\+\\[\\{\\]\\}\\\\\\|\\;\\:\\'\\\"\\,\\.\\<\\>\\/\\?\\s]+)/g,\n  comments: {\n    lineComment: '#',\n    blockComment: ['<#', '#>']\n  },\n  brackets: [['{', '}'], ['[', ']'], ['(', ')']],\n  autoClosingPairs: [{\n    open: '{',\n    close: '}'\n  }, {\n    open: '[',\n    close: ']'\n  }, {\n    open: '(',\n    close: ')'\n  }, {\n    open: '\"',\n    close: '\"',\n    notIn: ['string']\n  }, {\n    open: '\\'',\n    close: '\\'',\n    notIn: ['string', 'comment']\n  }],\n  surroundingPairs: [{\n    open: '{',\n    close: '}'\n  }, {\n    open: '[',\n    close: ']'\n  }, {\n    open: '(',\n    close: ')'\n  }, {\n    open: '\"',\n    close: '\"'\n  }, {\n    open: '\\'',\n    close: '\\''\n  }],\n  folding: {\n    markers: {\n      start: new RegExp(\"^\\\\s*#region\\\\b\"),\n      end: new RegExp(\"^\\\\s*#endregion\\\\b\")\n    }\n  }\n};\nexport var language = {\n  defaultToken: '',\n  ignoreCase: true,\n  tokenPostfix: '.ps1',\n  brackets: [{\n    token: 'delimiter.curly',\n    open: '{',\n    close: '}'\n  }, {\n    token: 'delimiter.square',\n    open: '[',\n    close: ']'\n  }, {\n    token: 'delimiter.parenthesis',\n    open: '(',\n    close: ')'\n  }],\n  keywords: ['begin', 'break', 'catch', 'class', 'continue', 'data', 'define', 'do', 'dynamicparam', 'else', 'elseif', 'end', 'exit', 'filter', 'finally', 'for', 'foreach', 'from', 'function', 'if', 'in', 'param', 'process', 'return', 'switch', 'throw', 'trap', 'try', 'until', 'using', 'var', 'while', 'workflow', 'parallel', 'sequence', 'inlinescript', 'configuration'],\n  helpKeywords: /SYNOPSIS|DESCRIPTION|PARAMETER|EXAMPLE|INPUTS|OUTPUTS|NOTES|LINK|COMPONENT|ROLE|FUNCTIONALITY|FORWARDHELPTARGETNAME|FORWARDHELPCATEGORY|REMOTEHELPRUNSPACE|EXTERNALHELP/,\n  // we include these common regular expressions\n  symbols: /[=><!~?&%|+\\-*\\/\\^;\\.,]+/,\n  escapes: /`(?:[abfnrtv\\\\\"'$]|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,\n  // The main tokenizer for our languages\n  tokenizer: {\n    root: [// commands and keywords\n    [/[a-zA-Z_][\\w-]*/, {\n      cases: {\n        '@keywords': {\n          token: 'keyword.$0'\n        },\n        '@default': ''\n      }\n    }], // whitespace\n    [/[ \\t\\r\\n]+/, ''], // labels\n    [/^:\\w*/, 'metatag'], // variables\n    [/\\$(\\{((global|local|private|script|using):)?[\\w]+\\}|((global|local|private|script|using):)?[\\w]+)/, 'variable'], // Comments\n    [/<#/, 'comment', '@comment'], [/#.*$/, 'comment'], // delimiters\n    [/[{}()\\[\\]]/, '@brackets'], [/@symbols/, 'delimiter'], // numbers\n    [/\\d*\\.\\d+([eE][\\-+]?\\d+)?/, 'number.float'], [/0[xX][0-9a-fA-F_]*[0-9a-fA-F]/, 'number.hex'], [/\\d+?/, 'number'], // delimiter: after number because of .\\d floats\n    [/[;,.]/, 'delimiter'], // strings:\n    [/\\@\"/, 'string', '@herestring.\"'], [/\\@'/, 'string', '@herestring.\\''], [/\"/, {\n      cases: {\n        '@eos': 'string',\n        '@default': {\n          token: 'string',\n          next: '@string.\"'\n        }\n      }\n    }], [/'/, {\n      cases: {\n        '@eos': 'string',\n        '@default': {\n          token: 'string',\n          next: '@string.\\''\n        }\n      }\n    }]],\n    string: [[/[^\"'\\$`]+/, {\n      cases: {\n        '@eos': {\n          token: 'string',\n          next: '@popall'\n        },\n        '@default': 'string'\n      }\n    }], [/@escapes/, {\n      cases: {\n        '@eos': {\n          token: 'string.escape',\n          next: '@popall'\n        },\n        '@default': 'string.escape'\n      }\n    }], [/`./, {\n      cases: {\n        '@eos': {\n          token: 'string.escape.invalid',\n          next: '@popall'\n        },\n        '@default': 'string.escape.invalid'\n      }\n    }], [/\\$[\\w]+$/, {\n      cases: {\n        '$S2==\"': {\n          token: 'variable',\n          next: '@popall'\n        },\n        '@default': {\n          token: 'string',\n          next: '@popall'\n        }\n      }\n    }], [/\\$[\\w]+/, {\n      cases: {\n        '$S2==\"': 'variable',\n        '@default': 'string'\n      }\n    }], [/[\"']/, {\n      cases: {\n        '$#==$S2': {\n          token: 'string',\n          next: '@pop'\n        },\n        '@default': {\n          cases: {\n            '@eos': {\n              token: 'string',\n              next: '@popall'\n            },\n            '@default': 'string'\n          }\n        }\n      }\n    }]],\n    herestring: [[/^\\s*([\"'])@/, {\n      cases: {\n        '$1==$S2': {\n          token: 'string',\n          next: '@pop'\n        },\n        '@default': 'string'\n      }\n    }], [/[^\\$`]+/, 'string'], [/@escapes/, 'string.escape'], [/`./, 'string.escape.invalid'], [/\\$[\\w]+/, {\n      cases: {\n        '$S2==\"': 'variable',\n        '@default': 'string'\n      }\n    }]],\n    comment: [[/[^#\\.]+/, 'comment'], [/#>/, 'comment', '@pop'], [/(\\.)(@helpKeywords)(?!\\w)/, {\n      token: 'comment.keyword.$2'\n    }], [/[\\.#]/, 'comment']]\n  }\n};"],"sourceRoot":""}