{"version":3,"sources":["components/upperTab/editorSetting/editorSetting.module.css","components/upperTab/collaborators/collaborators.module.css","components/Button/button.module.css","components/upperTab/upperTab.module.css","components/upperTab/editorSetting/editorSetting.js","components/upperTab/collaborators/collaborators.js","components/Button/button.js","components/upperTab/upperTab.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","controlLabel","picker","collaborators","show","option","default","danger","success","tab","editorSetting","_ref","getLanguage","getTheme","react_default","a","createElement","className","Classes","onChange","state","handleClick","_this","setState","_this2","this","onClick","style","margin","e","props","modal","React","PureComponent","button","type","display","click","name","upperTab","collaborators_collaborators","Button_button","ReactModal","setAppElement","App","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","defaultCode","language","code","event","target","value","theme","saveCode","newValue","console","log","saveInput","input","data","JSON","stringify","axios","post","then","res","output","catch","err","Set","showModal","whichModal","inputField","editor","monaco","focus","handleOpenModal","lib_default","width","options","selectOnLineNumbers","editorDidMount","placeholder","error","stderror","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f05cb24d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"controlLabel\":\"editorSetting_controlLabel__qOrd2\",\"picker\":\"editorSetting_picker__LgHmD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"collaborators\":\"collaborators_collaborators__ZveAR\",\"show\":\"collaborators_show__2o0Ij\",\"option\":\"collaborators_option__uz5R1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"button_default__3KiSZ\",\"danger\":\"button_danger__f8tBy\",\"success\":\"button_success__2lLij\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tab\":\"upperTab_tab__2Ft3S\"};","import React from 'react';\nimport Classes from './editorSetting.module.css';\n\nexport default function editorSetting({ getLanguage, getTheme }) {\n    return (\n        <div>\n            <label className={Classes.controlLabel}>Language</label>\n            <select className={Classes.picker} onChange={getLanguage}>\n                <option>Monkey</option>\n                <option>JavaScript</option>\n                <option>C++</option>\n                <option>C</option>\n                <option>Python3</option>\n                <option>Go</option>\n            </select>\n            <label className={Classes.controlLabel}>Theme</label>\n            <select className={Classes.picker} onChange={getTheme}>\n                <option>Dark</option>\n                <option>Light</option>\n            </select>\n        </div>\n    )\n}\n","import React from 'react';\nimport Classes from './collaborators.module.css';\n\nexport default class collaborators extends React.PureComponent {\n    state = {\n        show: false\n    }\n\n    handleClick = () => this.setState({ show: !this.state.show });\n    render() {\n        return (\n            <div>\n                <div className={Classes.collaborators} onClick={this.handleClick}>\n                    <i className=\"fas fa-users fa-lg\" style={{ margin: \"0 0.5rem\" }}></i>\n                    Collaborators\n                </div>\n                {this.state.show ?\n                    <div className={Classes.show}>\n                        <div\n                            className={Classes.option}\n                            onClick={(e) => { this.props.modal(e); this.handleClick() }}>\n                            Add\n                        </div>\n                        <div\n                            className={Classes.option}\n                            onClick={(e) => { this.props.modal(e); this.handleClick() }}>\n                            Remove\n                        </div>\n                    </div> : null\n                }\n            </div>\n        )\n    }\n\n}\n","import React from 'react';\nimport Classes from './button.module.css'\nconst button = props => {\n    switch (props.type) {\n        case 'success':\n            return <button\n                className={Classes.success}\n                style={{ display: props.display }}\n                onClick={e => props.click(e)}>\n                {props.name}\n            </button>\n        case 'danger':\n            return <button\n                className={Classes.danger}\n                style={{ display: props.display }}\n                onClick={e => props.click(e)}>\n                {props.name}\n            </button>\n        default:\n            return <button\n                className={Classes.default}\n                style={{ display: props.display }}\n                onClick={e => props.click(e)}>\n                {props.name}\n            </button>\n    }\n}\n\nexport default button","import React from 'react';\nimport Classes from './upperTab.module.css';\nimport EditorSetting from './editorSetting/editorSetting';\nimport Collaborators from './collaborators/collaborators';\nimport Button from '../Button/button';\n\nexport default function upperTab({ getLanguage, getTheme, click, modal }) {\n    return (\n        <div className={Classes.tab}>\n            <Collaborators modal={modal} />\n            <EditorSetting getLanguage={getLanguage} getTheme={getTheme} />\n            <Button type='success' name='Build' click={click} />\n        </div>\n    )\n}\n","import React from 'react';\nimport MonacoEditor from 'react-monaco-editor';\nimport axios from 'axios';\nimport ReactModal from 'react-modal';\nimport './App.css';\nimport UpperTab from \"./components/upperTab/upperTab\";\n// import Button from './components/Button/button';\n\nReactModal.setAppElement('#root');\n\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      code: 'print(\"You are using goglot code runner!\") ',\n      language: 'monkey',\n      theme: 'vs-dark',\n      output: '',\n      input: '',\n      collaborators: new Set([]),\n      showModal: false,\n      whichModal: '',\n      inputField: ''\n    }\n  }\n\n  editorDidMount(editor, monaco) {\n    editor.focus();\n  }\n\n  //takes a default language and set up some boilerplate\n  defaultCode = (language) => {\n    let code = ' '\n    switch (language){\n      case 'cpp':{\n        code=`#include<iostream>\n\nint main(){\n  std::cout<<\"You are running goglot code runner\";\n}\n`\n        break;\n      }\n      case 'c':{\n        code=`#include<stdio.h>\n\n        int main(){\n          printf(\"You are using goglot code runner\");\n        }\n        `\n        break;\n      }\n      case 'go':{\n        code=`package main\n        import \"fmt\"\n\n        func main(){\n          fmt.Printf(\"You are using goglot code runner\")\n        }\n        `\n        break;\n      }\n\n      case 'python':{\n        code=`print(\"You are using goglot code runner\")`\n        break;\n      }\n\n      case 'javascript':{\n        code=`console.log(\"You are using goglot code runner\")`\n        break;\n      }\n      case 'monkey':{\n        code=`print(\"You are using goglot code runner\")`\n        break;\n      }\n      default:{code=`//Welcome to goglot.`}\n      \n    }\n\n    return code;\n  }\n  // Make the language compliant to the backend needs\n  getLanguage = (event) => {\n    let language;\n    if (event.target.value === 'C++')\n      language = 'cpp';\n    else if (event.target.value === 'C')\n      language = 'c';\n    else if (event.target.value === 'JavaScript')\n      language = 'javascript';\n    else if (event.target.value === 'Python3')\n      language = 'python';\n    else if (event.target.value === 'Go')\n      language = 'go';\n    else if (event.target.value === 'Go')\n      language='monkey'\n    this.setState({ language, code:this.defaultCode(language)})\n  }\n\n  // Set the theme of the editor using this function\n  getTheme = (event) => {\n    if (event.target.value === 'Light')\n      this.setState({ theme: 'vs' })\n    else\n      this.setState({ theme: 'vs-dark' });\n  }\n\n  // Save code into the state\n  saveCode = (newValue) => {\n    console.log(newValue)\n    this.setState({ code: newValue });\n  }\n\n  // Save input parameters into the state\n  saveInput = (event) => {\n    this.setState({ input: event.target.value })\n    event.target.value = '';\n  }\n\n  // Handle click event@ BUILD button\n  click = () => {\n    const data = {\n      language: this.state.language,\n      code: this.state.code,\n      input: this.state.input\n    }\n\n    console.log(JSON.stringify(data))\n\n    axios.post('/api/newcode', data)\n      .then(res => {\n        this.setState({ output: res.data });\n      })\n      .catch(err => console.log(err));\n  }\n\n \n  render() {\n    const code = this.state.code;\n    const options = {\n      selectOnLineNumbers: true\n    };\n    return (\n      <div className=\"App\">\n        <div className=\"editor\">\n          <UpperTab getLanguage={this.getLanguage}\n            getTheme={this.getTheme}\n            click={this.click}\n            modal={this.handleOpenModal} />\n          <MonacoEditor\n            width=\"100vw\"\n            // height={(document.documentElement.clientHeight * (3 / 5)) - (2.5 * 16)}\n            language={this.state.language}\n            theme={this.state.theme}\n            value={code}\n            options={options}\n            onChange={this.saveCode}\n            editorDidMount={this.editorDidMount}\n          />\n        </div>\n        <div className='input'>\n          <textarea\n            className='textBox'\n            value={this.state.input}\n            onChange={this.saveInput}\n            placeholder=\"Input goes here...\" />\n        </div>\n        <div className='output'>\n          <div className='outputArea'>\n            <code>\n              output: {this.state.output.output}<br></br>\n              error: {this.state.output.error}<br></br>\n              stderr: {this.state.output.stderror}<br></br>\n            </code>\n          </div>\n        </div>\n\n      </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}