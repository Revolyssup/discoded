{"version":3,"sources":["../../server/client/node_modules/monaco-editor/esm/vs/basic-languages/xml/xml.js"],"names":["__webpack_require__","r","__webpack_exports__","d","conf","language","comments","blockComment","brackets","autoClosingPairs","open","close","surroundingPairs","defaultToken","tokenPostfix","ignoreCase","qualifiedName","tokenizer","root","include","token","next","cdata","tag","whitespace","comment"],"mappings":"2FAAAA,EAAAC,EAAAC,GAAAF,EAAAG,EAAAD,EAAA,yBAAAE,IAAAJ,EAAAG,EAAAD,EAAA,6BAAAG,IAMO,IAAAD,EAAA,CACPE,SAAA,CACAC,aAAA,sBAEAC,SAAA,YACAC,iBAAA,EACAC,KAAA,IACAC,MAAA,KACG,CACHD,KAAA,IACAC,MAAA,KACG,CACHD,KAAA,IACAC,MAAA,MAEAC,iBAAA,EACAF,KAAA,IACAC,MAAA,KACG,CACHD,KAAA,IACAC,MAAA,KACG,CACHD,KAAA,IACAC,MAAA,OAGON,EAAA,CACPQ,aAAA,GACAC,aAAA,OACAC,YAAA,EAEAC,cAAA,2BACAC,UAAA,CACAC,KAAA,gBACAC,QAAA,eAEA,yBACAC,MAAA,aACK,CACLA,MAAA,MACAC,KAAA,UAEA,mCACAD,MAAA,aACK,CACLA,MAAA,OACK,IACLA,MAAA,eAEA,2BACAA,MAAA,aACK,CACLA,MAAA,UACAC,KAAA,UAEA,2BACAD,MAAA,aACK,CACLA,MAAA,UACAC,KAAA,UAEA,iBACAD,MAAA,kBACAC,KAAA,WACK,SAAU,kBACfC,MAAA,yBACAF,MAAA,kBACAC,KAAA,SACK,WACLE,IAAA,sVACAH,MAAA,YACAC,KAAA,SACK,aACLD,MAAA,OACK,CACLA,MAAA,YACAC,KAAA,UACK,MACLD,MAAA,YACAC,KAAA,UAEAG,WAAA,4BACAJ,MAAA,UACAC,KAAA,cAEAI,QAAA,uCACAL,MAAA,UACAC,KAAA,SACK","file":"static/js/64.a422e2f3.chunk.js","sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nexport var conf = {\n  comments: {\n    blockComment: ['<!--', '-->']\n  },\n  brackets: [['<', '>']],\n  autoClosingPairs: [{\n    open: '<',\n    close: '>'\n  }, {\n    open: '\\'',\n    close: '\\''\n  }, {\n    open: '\"',\n    close: '\"'\n  }],\n  surroundingPairs: [{\n    open: '<',\n    close: '>'\n  }, {\n    open: '\\'',\n    close: '\\''\n  }, {\n    open: '\"',\n    close: '\"'\n  }]\n};\nexport var language = {\n  defaultToken: '',\n  tokenPostfix: '.xml',\n  ignoreCase: true,\n  // Useful regular expressions\n  qualifiedName: /(?:[\\w\\.\\-]+:)?[\\w\\.\\-]+/,\n  tokenizer: {\n    root: [[/[^<&]+/, ''], {\n      include: '@whitespace'\n    }, // Standard opening tag\n    [/(<)(@qualifiedName)/, [{\n      token: 'delimiter'\n    }, {\n      token: 'tag',\n      next: '@tag'\n    }]], // Standard closing tag\n    [/(<\\/)(@qualifiedName)(\\s*)(>)/, [{\n      token: 'delimiter'\n    }, {\n      token: 'tag'\n    }, '', {\n      token: 'delimiter'\n    }]], // Meta tags - instruction\n    [/(<\\?)(@qualifiedName)/, [{\n      token: 'delimiter'\n    }, {\n      token: 'metatag',\n      next: '@tag'\n    }]], // Meta tags - declaration\n    [/(<\\!)(@qualifiedName)/, [{\n      token: 'delimiter'\n    }, {\n      token: 'metatag',\n      next: '@tag'\n    }]], // CDATA\n    [/<\\!\\[CDATA\\[/, {\n      token: 'delimiter.cdata',\n      next: '@cdata'\n    }], [/&\\w+;/, 'string.escape']],\n    cdata: [[/[^\\]]+/, ''], [/\\]\\]>/, {\n      token: 'delimiter.cdata',\n      next: '@pop'\n    }], [/\\]/, '']],\n    tag: [[/[ \\t\\r\\n]+/, ''], [/(@qualifiedName)(\\s*=\\s*)(\"[^\"]*\"|'[^']*')/, ['attribute.name', '', 'attribute.value']], [/(@qualifiedName)(\\s*=\\s*)(\"[^\">?\\/]*|'[^'>?\\/]*)(?=[\\?\\/]\\>)/, ['attribute.name', '', 'attribute.value']], [/(@qualifiedName)(\\s*=\\s*)(\"[^\">]*|'[^'>]*)/, ['attribute.name', '', 'attribute.value']], [/@qualifiedName/, 'attribute.name'], [/\\?>/, {\n      token: 'delimiter',\n      next: '@pop'\n    }], [/(\\/)(>)/, [{\n      token: 'tag'\n    }, {\n      token: 'delimiter',\n      next: '@pop'\n    }]], [/>/, {\n      token: 'delimiter',\n      next: '@pop'\n    }]],\n    whitespace: [[/[ \\t\\r\\n]+/, ''], [/<!--/, {\n      token: 'comment',\n      next: '@comment'\n    }]],\n    comment: [[/[^<\\-]+/, 'comment.content'], [/-->/, {\n      token: 'comment',\n      next: '@pop'\n    }], [/<!--/, 'comment.content.invalid'], [/[<\\-]/, 'comment.content']]\n  }\n};"],"sourceRoot":""}