{"version":3,"sources":["../node_modules/monaco-editor/esm/vs/basic-languages/less/less.js"],"names":["__webpack_require__","r","__webpack_exports__","d","conf","language","wordPattern","comments","blockComment","lineComment","brackets","autoClosingPairs","open","close","notIn","surroundingPairs","folding","markers","start","RegExp","end","defaultToken","tokenPostfix","identifier","identifierPlus","token","tokenizer","root","include","next","nestedJSBegin","nextEmbedded","nestedJSEnd","operators","keyword","urldeclaration","attribute","comment","numbers","units","strings","stringsEndDoubleQuote","stringsEndQuote","atRules"],"mappings":"2FAAAA,EAAAC,EAAAC,GAAAF,EAAAG,EAAAD,EAAA,yBAAAE,IAAAJ,EAAAG,EAAAD,EAAA,6BAAAG,IAMO,IAAAD,EAAA,CACPE,YAAA,iDACAC,SAAA,CACAC,aAAA,YACAC,YAAA,MAEAC,SAAA,MAAgB,KAAK,qBACrBC,iBAAA,EACAC,KAAA,IACAC,MAAA,IACAC,MAAA,sBACG,CACHF,KAAA,IACAC,MAAA,IACAC,MAAA,sBACG,CACHF,KAAA,IACAC,MAAA,IACAC,MAAA,sBACG,CACHF,KAAA,IACAC,MAAA,IACAC,MAAA,sBACG,CACHF,KAAA,IACAC,MAAA,IACAC,MAAA,uBAEAC,iBAAA,EACAH,KAAA,IACAC,MAAA,KACG,CACHD,KAAA,IACAC,MAAA,KACG,CACHD,KAAA,IACAC,MAAA,KACG,CACHD,KAAA,IACAC,MAAA,KACG,CACHD,KAAA,IACAC,MAAA,MAEAG,QAAA,CACAC,QAAA,CACAC,MAAA,IAAAC,OAAA,gDACAC,IAAA,IAAAD,OAAA,2CAIOd,EAAA,CACPgB,aAAA,GACAC,aAAA,QACAC,WAAA,sHACAC,eAAA,0HACAd,SAAA,EACAE,KAAA,IACAC,MAAA,IACAY,MAAA,mBACG,CACHb,KAAA,IACAC,MAAA,IACAY,MAAA,qBACG,CACHb,KAAA,IACAC,MAAA,IACAY,MAAA,yBACG,CACHb,KAAA,IACAC,MAAA,IACAY,MAAA,oBAEAC,UAAA,CACAC,KAAA,EACAC,QAAA,kBACK,sBACLA,QAAA,aACK,CACLA,QAAA,YACK,CACLA,QAAA,YACK,CACLA,QAAA,YACK,0CAAgC,sDACrCH,MAAA,MACAI,KAAA,oBACK,gBAAQ,sBAAgC,4KAC7CD,QAAA,cACK,4GACLE,cAAA,mCACAL,MAAA,qBACAI,KAAA,eACAE,aAAA,qBAEAC,YAAA,OACAP,MAAA,qBACAI,KAAA,OACAE,aAAA,UAEAE,UAAA,4CACAC,QAAA,mQACAC,eAAA,EACAP,QAAA,YACK,+BACLH,MAAA,MACAI,KAAA,UAEAO,UAAA,EACAR,QAAA,kBACK,CACLA,QAAA,aACK,CACLA,QAAA,YACK,CACLA,QAAA,YACK,CACLA,QAAA,YACK,kHACLA,QAAA,cACK,wCAAyC,qCAA+B,oBAA+B,8EAC5GrB,SAAA,0DACA8B,QAAA,8CACAC,QAAA,sCACAb,MAAA,yBACAI,KAAA,WACK,iDACLU,MAAA,yHACAC,QAAA,SACAf,MAAA,mBACAI,KAAA,2BACK,QACLJ,MAAA,mBACAI,KAAA,sBAEAY,sBAAA,0BACAhB,MAAA,mBACAI,KAAA,YACK,gBACLa,gBAAA,0BACAjB,MAAA,mBACAI,KAAA,YACK,gBACLc,QAAA,EACAf,QAAA,aACK,CACLA,QAAA,YACK,+BAAgC","file":"static/js/27.fcfc505f.chunk.js","sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nexport var conf = {\n  wordPattern: /(#?-?\\d*\\.\\d\\w*%?)|([@#!.:]?[\\w-?]+%?)|[@#!.]/g,\n  comments: {\n    blockComment: ['/*', '*/'],\n    lineComment: '//'\n  },\n  brackets: [['{', '}'], ['[', ']'], ['(', ')']],\n  autoClosingPairs: [{\n    open: '{',\n    close: '}',\n    notIn: ['string', 'comment']\n  }, {\n    open: '[',\n    close: ']',\n    notIn: ['string', 'comment']\n  }, {\n    open: '(',\n    close: ')',\n    notIn: ['string', 'comment']\n  }, {\n    open: '\"',\n    close: '\"',\n    notIn: ['string', 'comment']\n  }, {\n    open: '\\'',\n    close: '\\'',\n    notIn: ['string', 'comment']\n  }],\n  surroundingPairs: [{\n    open: '{',\n    close: '}'\n  }, {\n    open: '[',\n    close: ']'\n  }, {\n    open: '(',\n    close: ')'\n  }, {\n    open: '\"',\n    close: '\"'\n  }, {\n    open: '\\'',\n    close: '\\''\n  }],\n  folding: {\n    markers: {\n      start: new RegExp(\"^\\\\s*\\\\/\\\\*\\\\s*#region\\\\b\\\\s*(.*?)\\\\s*\\\\*\\\\/\"),\n      end: new RegExp(\"^\\\\s*\\\\/\\\\*\\\\s*#endregion\\\\b.*\\\\*\\\\/\")\n    }\n  }\n};\nexport var language = {\n  defaultToken: '',\n  tokenPostfix: '.less',\n  identifier: '-?-?([a-zA-Z]|(\\\\\\\\(([0-9a-fA-F]{1,6}\\\\s?)|[^[0-9a-fA-F])))([\\\\w\\\\-]|(\\\\\\\\(([0-9a-fA-F]{1,6}\\\\s?)|[^[0-9a-fA-F])))*',\n  identifierPlus: '-?-?([a-zA-Z:.]|(\\\\\\\\(([0-9a-fA-F]{1,6}\\\\s?)|[^[0-9a-fA-F])))([\\\\w\\\\-:.]|(\\\\\\\\(([0-9a-fA-F]{1,6}\\\\s?)|[^[0-9a-fA-F])))*',\n  brackets: [{\n    open: '{',\n    close: '}',\n    token: 'delimiter.curly'\n  }, {\n    open: '[',\n    close: ']',\n    token: 'delimiter.bracket'\n  }, {\n    open: '(',\n    close: ')',\n    token: 'delimiter.parenthesis'\n  }, {\n    open: '<',\n    close: '>',\n    token: 'delimiter.angle'\n  }],\n  tokenizer: {\n    root: [{\n      include: '@nestedJSBegin'\n    }, ['[ \\\\t\\\\r\\\\n]+', ''], {\n      include: '@comments'\n    }, {\n      include: '@keyword'\n    }, {\n      include: '@strings'\n    }, {\n      include: '@numbers'\n    }, ['[*_]?[a-zA-Z\\\\-\\\\s]+(?=:.*(;|(\\\\\\\\$)))', 'attribute.name', '@attribute'], ['url(\\\\-prefix)?\\\\(', {\n      token: 'tag',\n      next: '@urldeclaration'\n    }], ['[{}()\\\\[\\\\]]', '@brackets'], ['[,:;]', 'delimiter'], ['#@identifierPlus', 'tag.id'], ['&', 'tag'], ['\\\\.@identifierPlus(?=\\\\()', 'tag.class', '@attribute'], ['\\\\.@identifierPlus', 'tag.class'], ['@identifierPlus', 'tag'], {\n      include: '@operators'\n    }, ['@(@identifier(?=[:,\\\\)]))', 'variable', '@attribute'], ['@(@identifier)', 'variable'], ['@', 'key', '@atRules']],\n    nestedJSBegin: [['``', 'delimiter.backtick'], ['`', {\n      token: 'delimiter.backtick',\n      next: '@nestedJSEnd',\n      nextEmbedded: 'text/javascript'\n    }]],\n    nestedJSEnd: [['`', {\n      token: 'delimiter.backtick',\n      next: '@pop',\n      nextEmbedded: '@pop'\n    }]],\n    operators: [['[<>=\\\\+\\\\-\\\\*\\\\/\\\\^\\\\|\\\\~]', 'operator']],\n    keyword: [['(@[\\\\s]*import|![\\\\s]*important|true|false|when|iscolor|isnumber|isstring|iskeyword|isurl|ispixel|ispercentage|isem|hue|saturation|lightness|alpha|lighten|darken|saturate|desaturate|fadein|fadeout|fade|spin|mix|round|ceil|floor|percentage)\\\\b', 'keyword']],\n    urldeclaration: [{\n      include: '@strings'\n    }, ['[^)\\r\\n]+', 'string'], ['\\\\)', {\n      token: 'tag',\n      next: '@pop'\n    }]],\n    attribute: [{\n      include: '@nestedJSBegin'\n    }, {\n      include: '@comments'\n    }, {\n      include: '@strings'\n    }, {\n      include: '@numbers'\n    }, {\n      include: '@keyword'\n    }, ['[a-zA-Z\\\\-]+(?=\\\\()', 'attribute.value', '@attribute'], ['>', 'operator', '@pop'], ['@identifier', 'attribute.value'], {\n      include: '@operators'\n    }, ['@(@identifier)', 'variable'], ['[)\\\\}]', '@brackets', '@pop'], ['[{}()\\\\[\\\\]>]', '@brackets'], ['[;]', 'delimiter', '@pop'], ['[,=:]', 'delimiter'], ['\\\\s', ''], ['.', 'attribute.value']],\n    comments: [['\\\\/\\\\*', 'comment', '@comment'], ['\\\\/\\\\/+.*', 'comment']],\n    comment: [['\\\\*\\\\/', 'comment', '@pop'], ['.', 'comment']],\n    numbers: [['(\\\\d*\\\\.)?\\\\d+([eE][\\\\-+]?\\\\d+)?', {\n      token: 'attribute.value.number',\n      next: '@units'\n    }], ['#[0-9a-fA-F_]+(?!\\\\w)', 'attribute.value.hex']],\n    units: [['(em|ex|ch|rem|vmin|vmax|vw|vh|vm|cm|mm|in|px|pt|pc|deg|grad|rad|turn|s|ms|Hz|kHz|%)?', 'attribute.value.unit', '@pop']],\n    strings: [['~?\"', {\n      token: 'string.delimiter',\n      next: '@stringsEndDoubleQuote'\n    }], ['~?\\'', {\n      token: 'string.delimiter',\n      next: '@stringsEndQuote'\n    }]],\n    stringsEndDoubleQuote: [['\\\\\\\\\"', 'string'], ['\"', {\n      token: 'string.delimiter',\n      next: '@popall'\n    }], ['.', 'string']],\n    stringsEndQuote: [['\\\\\\\\\\'', 'string'], ['\\'', {\n      token: 'string.delimiter',\n      next: '@popall'\n    }], ['.', 'string']],\n    atRules: [{\n      include: '@comments'\n    }, {\n      include: '@strings'\n    }, ['[()]', 'delimiter'], ['[\\\\{;]', 'delimiter', '@pop'], ['.', 'key']]\n  }\n};"],"sourceRoot":""}