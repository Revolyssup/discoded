{"version":3,"sources":["../node_modules/monaco-editor/esm/vs/basic-languages/scss/scss.js"],"names":["__webpack_require__","r","__webpack_exports__","d","conf","language","wordPattern","comments","blockComment","lineComment","brackets","autoClosingPairs","open","close","notIn","surroundingPairs","folding","markers","start","RegExp","end","defaultToken","tokenPostfix","ws","identifier","token","tokenizer","root","include","selector","next","selectorbody","selectorname","selectorattribute","term","rulevalue","switchTo","nestedproperty","warndebug","import","variabledeclaration","urldeclaration","parenthizedterm","declarationbody","extendbody","variablereference","variableinterpolation","comment","name","numbers","units","functiondeclaration","mixindeclaration","parameterdeclaration","includedeclaration","keyframedeclaration","keyframebody","controlstatement","controlstatementdeclaration","functionbody","functioninvocation","functionarguments","strings","stringenddoublequote","stringendquote"],"mappings":"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","file":"static/js/53.50fe132d.chunk.js","sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nexport var conf = {\n  wordPattern: /(#?-?\\d*\\.\\d\\w*%?)|([@$#!.:]?[\\w-?]+%?)|[@#!.]/g,\n  comments: {\n    blockComment: ['/*', '*/'],\n    lineComment: '//'\n  },\n  brackets: [['{', '}'], ['[', ']'], ['(', ')']],\n  autoClosingPairs: [{\n    open: '{',\n    close: '}',\n    notIn: ['string', 'comment']\n  }, {\n    open: '[',\n    close: ']',\n    notIn: ['string', 'comment']\n  }, {\n    open: '(',\n    close: ')',\n    notIn: ['string', 'comment']\n  }, {\n    open: '\"',\n    close: '\"',\n    notIn: ['string', 'comment']\n  }, {\n    open: '\\'',\n    close: '\\'',\n    notIn: ['string', 'comment']\n  }],\n  surroundingPairs: [{\n    open: '{',\n    close: '}'\n  }, {\n    open: '[',\n    close: ']'\n  }, {\n    open: '(',\n    close: ')'\n  }, {\n    open: '\"',\n    close: '\"'\n  }, {\n    open: '\\'',\n    close: '\\''\n  }],\n  folding: {\n    markers: {\n      start: new RegExp(\"^\\\\s*\\\\/\\\\*\\\\s*#region\\\\b\\\\s*(.*?)\\\\s*\\\\*\\\\/\"),\n      end: new RegExp(\"^\\\\s*\\\\/\\\\*\\\\s*#endregion\\\\b.*\\\\*\\\\/\")\n    }\n  }\n};\nexport var language = {\n  defaultToken: '',\n  tokenPostfix: '.scss',\n  ws: '[ \\t\\n\\r\\f]*',\n  identifier: '-?-?([a-zA-Z]|(\\\\\\\\(([0-9a-fA-F]{1,6}\\\\s?)|[^[0-9a-fA-F])))([\\\\w\\\\-]|(\\\\\\\\(([0-9a-fA-F]{1,6}\\\\s?)|[^[0-9a-fA-F])))*',\n  brackets: [{\n    open: '{',\n    close: '}',\n    token: 'delimiter.curly'\n  }, {\n    open: '[',\n    close: ']',\n    token: 'delimiter.bracket'\n  }, {\n    open: '(',\n    close: ')',\n    token: 'delimiter.parenthesis'\n  }, {\n    open: '<',\n    close: '>',\n    token: 'delimiter.angle'\n  }],\n  tokenizer: {\n    root: [{\n      include: '@selector'\n    }],\n    selector: [{\n      include: '@comments'\n    }, {\n      include: '@import'\n    }, {\n      include: '@variabledeclaration'\n    }, {\n      include: '@warndebug'\n    }, ['[@](include)', {\n      token: 'keyword',\n      next: '@includedeclaration'\n    }], ['[@](keyframes|-webkit-keyframes|-moz-keyframes|-o-keyframes)', {\n      token: 'keyword',\n      next: '@keyframedeclaration'\n    }], ['[@](page|content|font-face|-moz-document)', {\n      token: 'keyword'\n    }], ['[@](charset|namespace)', {\n      token: 'keyword',\n      next: '@declarationbody'\n    }], ['[@](function)', {\n      token: 'keyword',\n      next: '@functiondeclaration'\n    }], ['[@](mixin)', {\n      token: 'keyword',\n      next: '@mixindeclaration'\n    }], ['url(\\\\-prefix)?\\\\(', {\n      token: 'meta',\n      next: '@urldeclaration'\n    }], {\n      include: '@controlstatement'\n    }, {\n      include: '@selectorname'\n    }, ['[&\\\\*]', 'tag'], ['[>\\\\+,]', 'delimiter'], ['\\\\[', {\n      token: 'delimiter.bracket',\n      next: '@selectorattribute'\n    }], ['{', {\n      token: 'delimiter.curly',\n      next: '@selectorbody'\n    }]],\n    selectorbody: [['[*_]?@identifier@ws:(?=(\\\\s|\\\\d|[^{;}]*[;}]))', 'attribute.name', '@rulevalue'], {\n      include: '@selector'\n    }, ['[@](extend)', {\n      token: 'keyword',\n      next: '@extendbody'\n    }], ['[@](return)', {\n      token: 'keyword',\n      next: '@declarationbody'\n    }], ['}', {\n      token: 'delimiter.curly',\n      next: '@pop'\n    }]],\n    selectorname: [['#{', {\n      token: 'meta',\n      next: '@variableinterpolation'\n    }], ['(\\\\.|#(?=[^{])|%|(@identifier)|:)+', 'tag']],\n    selectorattribute: [{\n      include: '@term'\n    }, [']', {\n      token: 'delimiter.bracket',\n      next: '@pop'\n    }]],\n    term: [{\n      include: '@comments'\n    }, ['url(\\\\-prefix)?\\\\(', {\n      token: 'meta',\n      next: '@urldeclaration'\n    }], {\n      include: '@functioninvocation'\n    }, {\n      include: '@numbers'\n    }, {\n      include: '@strings'\n    }, {\n      include: '@variablereference'\n    }, ['(and\\\\b|or\\\\b|not\\\\b)', 'operator'], {\n      include: '@name'\n    }, ['([<>=\\\\+\\\\-\\\\*\\\\/\\\\^\\\\|\\\\~,])', 'operator'], [',', 'delimiter'], ['!default', 'literal'], ['\\\\(', {\n      token: 'delimiter.parenthesis',\n      next: '@parenthizedterm'\n    }]],\n    rulevalue: [{\n      include: '@term'\n    }, ['!important', 'literal'], [';', 'delimiter', '@pop'], ['{', {\n      token: 'delimiter.curly',\n      switchTo: '@nestedproperty'\n    }], ['(?=})', {\n      token: '',\n      next: '@pop'\n    }]],\n    nestedproperty: [['[*_]?@identifier@ws:', 'attribute.name', '@rulevalue'], {\n      include: '@comments'\n    }, ['}', {\n      token: 'delimiter.curly',\n      next: '@pop'\n    }]],\n    warndebug: [['[@](warn|debug)', {\n      token: 'keyword',\n      next: '@declarationbody'\n    }]],\n    import: [['[@](import)', {\n      token: 'keyword',\n      next: '@declarationbody'\n    }]],\n    variabledeclaration: [['\\\\$@identifier@ws:', 'variable.decl', '@declarationbody']],\n    urldeclaration: [{\n      include: '@strings'\n    }, ['[^)\\r\\n]+', 'string'], ['\\\\)', {\n      token: 'meta',\n      next: '@pop'\n    }]],\n    parenthizedterm: [{\n      include: '@term'\n    }, ['\\\\)', {\n      token: 'delimiter.parenthesis',\n      next: '@pop'\n    }]],\n    declarationbody: [{\n      include: '@term'\n    }, [';', 'delimiter', '@pop'], ['(?=})', {\n      token: '',\n      next: '@pop'\n    }]],\n    extendbody: [{\n      include: '@selectorname'\n    }, ['!optional', 'literal'], [';', 'delimiter', '@pop'], ['(?=})', {\n      token: '',\n      next: '@pop'\n    }]],\n    variablereference: [['\\\\$@identifier', 'variable.ref'], ['\\\\.\\\\.\\\\.', 'operator'], ['#{', {\n      token: 'meta',\n      next: '@variableinterpolation'\n    }]],\n    variableinterpolation: [{\n      include: '@variablereference'\n    }, ['}', {\n      token: 'meta',\n      next: '@pop'\n    }]],\n    comments: [['\\\\/\\\\*', 'comment', '@comment'], ['\\\\/\\\\/+.*', 'comment']],\n    comment: [['\\\\*\\\\/', 'comment', '@pop'], ['.', 'comment']],\n    name: [['@identifier', 'attribute.value']],\n    numbers: [['(\\\\d*\\\\.)?\\\\d+([eE][\\\\-+]?\\\\d+)?', {\n      token: 'number',\n      next: '@units'\n    }], ['#[0-9a-fA-F_]+(?!\\\\w)', 'number.hex']],\n    units: [['(em|ex|ch|rem|vmin|vmax|vw|vh|vm|cm|mm|in|px|pt|pc|deg|grad|rad|turn|s|ms|Hz|kHz|%)?', 'number', '@pop']],\n    functiondeclaration: [['@identifier@ws\\\\(', {\n      token: 'meta',\n      next: '@parameterdeclaration'\n    }], ['{', {\n      token: 'delimiter.curly',\n      switchTo: '@functionbody'\n    }]],\n    mixindeclaration: [// mixin with parameters\n    ['@identifier@ws\\\\(', {\n      token: 'meta',\n      next: '@parameterdeclaration'\n    }], // mixin without parameters\n    ['@identifier', 'meta'], ['{', {\n      token: 'delimiter.curly',\n      switchTo: '@selectorbody'\n    }]],\n    parameterdeclaration: [['\\\\$@identifier@ws:', 'variable.decl'], ['\\\\.\\\\.\\\\.', 'operator'], [',', 'delimiter'], {\n      include: '@term'\n    }, ['\\\\)', {\n      token: 'meta',\n      next: '@pop'\n    }]],\n    includedeclaration: [{\n      include: '@functioninvocation'\n    }, ['@identifier', 'meta'], [';', 'delimiter', '@pop'], ['(?=})', {\n      token: '',\n      next: '@pop'\n    }], ['{', {\n      token: 'delimiter.curly',\n      switchTo: '@selectorbody'\n    }]],\n    keyframedeclaration: [['@identifier', 'meta'], ['{', {\n      token: 'delimiter.curly',\n      switchTo: '@keyframebody'\n    }]],\n    keyframebody: [{\n      include: '@term'\n    }, ['{', {\n      token: 'delimiter.curly',\n      next: '@selectorbody'\n    }], ['}', {\n      token: 'delimiter.curly',\n      next: '@pop'\n    }]],\n    controlstatement: [['[@](if|else|for|while|each|media)', {\n      token: 'keyword.flow',\n      next: '@controlstatementdeclaration'\n    }]],\n    controlstatementdeclaration: [['(in|from|through|if|to)\\\\b', {\n      token: 'keyword.flow'\n    }], {\n      include: '@term'\n    }, ['{', {\n      token: 'delimiter.curly',\n      switchTo: '@selectorbody'\n    }]],\n    functionbody: [['[@](return)', {\n      token: 'keyword'\n    }], {\n      include: '@variabledeclaration'\n    }, {\n      include: '@term'\n    }, {\n      include: '@controlstatement'\n    }, [';', 'delimiter'], ['}', {\n      token: 'delimiter.curly',\n      next: '@pop'\n    }]],\n    functioninvocation: [['@identifier\\\\(', {\n      token: 'meta',\n      next: '@functionarguments'\n    }]],\n    functionarguments: [['\\\\$@identifier@ws:', 'attribute.name'], ['[,]', 'delimiter'], {\n      include: '@term'\n    }, ['\\\\)', {\n      token: 'meta',\n      next: '@pop'\n    }]],\n    strings: [['~?\"', {\n      token: 'string.delimiter',\n      next: '@stringenddoublequote'\n    }], ['~?\\'', {\n      token: 'string.delimiter',\n      next: '@stringendquote'\n    }]],\n    stringenddoublequote: [['\\\\\\\\.', 'string'], ['\"', {\n      token: 'string.delimiter',\n      next: '@pop'\n    }], ['.', 'string']],\n    stringendquote: [['\\\\\\\\.', 'string'], ['\\'', {\n      token: 'string.delimiter',\n      next: '@pop'\n    }], ['.', 'string']]\n  }\n};"],"sourceRoot":""}